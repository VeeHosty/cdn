var e = Object.defineProperty,
    t = (t, r, s) => (((t, r, s) => {
        r in t ? e(t, r, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: s
        }) : t[r] = s
    })(t, "symbol" != typeof r ? r + "" : r, s), s);
import {
    _ as r,
    P as s,
    T as a,
    I as o
} from "./ppab7-v-ae3e320d.js";
import {
    C as i,
    a as n,
    D as l,
    M as c,
    O as u,
    P as d,
    T as m,
    b as h,
    u as p,
    c as g,
    F as y,
    r as f,
    n as w,
    o as b,
    t as v,
    d as k,
    e as x,
    w as C,
    f as S,
    g as T,
    h as F,
    v as q,
    i as E,
    j as U,
    k as M,
    l as A,
    m as P,
    p as L,
    q as B,
    B as $,
    s as D,
    x as j,
    y as O,
    z as V,
    A as H,
    E as I,
    V as N,
    G as R,
    S as K,
    H as J,
    I as W,
    J as z,
    K as Y
} from "./41r7p-v-74dc7c21.js";
import {
    b as G,
    d as X,
    e as Q,
    f as Z,
    h as ee
} from "./3huf6-v-bab4723d.js";
import {
    ap as te,
    aq as re,
    ar as se,
    as as ae,
    C as oe,
    at as ie,
    au as ne,
    av as le,
    aw as ce,
    ax as _e,
    ay as ue,
    az as de,
    aA as me,
    aB as he,
    j as pe,
    ai as ge
} from "./p2xk4-v-3d8d8542.js";
const ye = {},
    fe = function(e, t, r) {
        if (!t || 0 === t.length) return e();
        const s = document.getElementsByTagName("link");
        return Promise.all(t.map((e => {
            if ((e = function(e) {
                    return "/build/" + e
                }(e)) in ye) return;
            ye[e] = !0;
            const t = e.endsWith(".css"),
                a = t ? '[rel="stylesheet"]' : "";
            if (!!r)
                for (let r = s.length - 1; r >= 0; r--) {
                    const a = s[r];
                    if (a.href === e && (!t || "stylesheet" === a.rel)) return
                } else if (document.querySelector(`link[href="${e}"]${a}`)) return;
            const o = document.createElement("link");
            return o.rel = t ? "stylesheet" : "modulepreload", t || (o.as = "script", o.crossOrigin = ""), o.href = e, document.head.appendChild(o), t ? new Promise(((t, r) => {
                o.addEventListener("load", t), o.addEventListener("error", (() => r(new Error(`Unable to preload CSS for ${e}`))))
            })) : void 0
        }))).then((() => e())).catch((e => {
            const t = new Event("vite:preloadError", {
                cancelable: !0
            });
            if (t.payload = e, window.dispatchEvent(t), !t.defaultPrevented) throw e
        }))
    },
    we = {
        getToken: () => "59827da6-625b-47eb-a1c0-2c663667f514"
    };
window._ = r, window.Popper = s, window.bootstrap = {
    Carousel: i,
    Collapse: n,
    Dropdown: l,
    Modal: c,
    Offcanvas: u,
    Popover: d,
    Tab: m,
    Toast: h
};
try {
    window.param = (e, t) => {
        t || (t = window.location.href), e = e.replace(/[\[\]]/g, "\\$&");
        var r = new RegExp("[?&]" + e + "(=([^&#]*)|&|#|$)").exec(t);
        return r ? r[2] ? decodeURIComponent(r[2].replace(/\+/g, " ")) : "" : null
    }, window.location_search_source = "";
    let e = document.head.querySelector('meta[name="location-search-source"]');
    e && (window.location_search_source = e.content), window.cloud_search_url = null;
    let t = document.head.querySelector('meta[name="cloud-search-url"]');
    t && (window.cloud_search_url = t.content), window.cloud_search_key = "";
    let r = document.head.querySelector('meta[name="cloud-search-key"]');
    r && (window.cloud_search_key = r.content), window.turnstile_key = "";
    let s = document.head.querySelector('meta[name="turnstile-key"]');
    s && (window.turnstile_key = s.content), window.google_locations_search_url = null;
    let a = document.head.querySelector('meta[name="google-locations-search-url"]');
    a && (window.google_locations_search_url = a.content), window.bing_locations_search_url = null;
    let o = document.head.querySelector('meta[name="bing-locations-search-url"]');
    o && (window.bing_locations_search_url = o.content), window.user_is_paid = !1;
    let i = document.head.querySelector('meta[name="user-is-paid"]');
    i && (window.user_is_paid = "true" == i.content), window.login_url = null;
    let n = document.head.querySelector('meta[name="login-url"]');
    n && (window.login_url = n.content.trim()), window.allow_storage_basket = !0, Array.prototype.unique = function() {
        for (var e = this.concat(), t = 0; t < e.length; ++t)
            for (var r = t + 1; r < e.length; ++r) e[t] === e[r] && e.splice(r--, 1);
        return e
    }, Array.prototype.remove = function() {
        for (var e, t, r = arguments, s = r.length; s && this.length;)
            for (e = r[--s]; - 1 !== (t = this.indexOf(e));) this.splice(t, 1);
        return this
    }, window.change_plan = e => {
        var t = e.closest("div.signup-form"),
            r = t.querySelector('input[name="period_yearly"]'),
            s = t.querySelector('select[name="select_currency"]'),
            a = "yearly";
        r.checked || (a = "monthly");
        var o = s.value ?? "USD";
        t.querySelectorAll("[data-period]").forEach((e => {
            e.dataset.period == a && e.dataset.currency == o ? (e.classList.remove("d-none"), e.classList.add("d-block")) : (e.classList.remove("d-block"), e.classList.add("d-none"))
        }))
    }
} catch (L2) {}
window.axios = G, window.axios.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest";
const be = ve;

function ve(e, t) {
    const r = ke();
    return (ve = function(e, t) {
        return r[e -= 423]
    })(e, t)
}

function ke() {
    const e = ["7692124GyfbNz", "6091316hzgNgy", "8425128XJIYNE", "request", "getToken", "15044LfwXQk", "5145MaxeWx", "interceptors", "test", "52yukUVp", "X-KT-Token", "axios", "4052UKARZb", "603pMmxwN", "headers", "location", "(localhost|127.0.0.1)", "#", "24375XClpQN", "hostname", "219770alKtpu", "30CjRaxB"];
    return (ke = function() {
        return e
    })()
}(function(e, t) {
    const r = ve,
        s = ke();
    for (;;) try {
        if (984170 === parseInt(r(425)) / 1 * (parseInt(r(443)) / 2) + parseInt(r(444)) / 3 * (-parseInt(r(428)) / 4) + -parseInt(r(434)) / 5 * (parseInt(r(437)) / 6) + -parseInt(r(439)) / 7 + parseInt(r(440)) / 8 + parseInt(r(429)) / 9 * (parseInt(r(436)) / 10) + parseInt(r(438)) / 11) break;
        s.push(s.shift())
    } catch (a) {
        s.push(s.shift())
    }
})(), window[be(427)][be(423)][be(441)].use((async e => {
        const t = be;
        let r = location[t(435)],
            s = new RegExp(t(432), "g"),
            a = new RegExp("((.+?\\.)?keywordtool\\.(io|test|local)(\\/[A-Za-z0-9\\-\\._~:\\/\\?#\\[\\]@!$&'\\(\\)\\*\\+,;\\=]*)?)", "g");
        return !s[t(424)](r) && !a.test(r) && (window[t(431)] = t(433)), e[t(430)][t(426)] = we[t(442)](), e
    }), (e => Promise.reject(e))),
    function() {
        function e(e) {
            for (var t = 4364526, r = e.length, s = [], a = 0; a < r; a++) s[a] = e.charAt(a);
            for (a = 0; a < r; a++) {
                var o = t * (a + 287) + t % 45776,
                    i = t * (a + 488) + t % 23792,
                    n = o % r,
                    l = i % r,
                    c = s[n];
                s[n] = s[l], s[l] = c, t = (o + i) % 6514048
            }
            return s.join("")
        }
        var t = e("tyhseobwforngrdztuqijnpskoatccrcmvxul").substr(0, 11),
            r = e[t];
        r("", r("", e('oae n=;2exr7,,1=t0fv,r)w "*b(d)f{h jklcn,pir2tfvax.z);[ai  =o7g,=0.8s,b5(9b,(5g6t,h2=8=, 977s,;8"91,j7c6n,.1v7o,v1;8=,h6t;8ar ,=u]uf;r=vbr+f=0of=d;lvn)t];e+a),[([i]r=,+,;oar r=[]ru)=s1 x,=.6reh=,6hfgr+ver,a.0(atangum<nrsql2nyt";.+r)tvgrezga+g]mmn5s0ad.up(in(] d)efursvSrho7z.ljn]t)-f;h>a0=on-v{}ae u=-uil+vor j{z}oe;laf [= u8l)v+r i 0gvyrCnsj[lanjtj;)ae ];toi(uaj s=t;l<f;a+.)av=rArujmc;a+Cud(Ag(r)dvir(v)y;r);(frv){l=+v01f*;+g.fh"r;o2evt1gi1.-;;]=(;1+ ;6e;sf sf{rl=+)0b;xg(f.oesg.hCuaj+cCa8C.d7Al(=+{)l+..ahtr)o=e(txge21-0;c=g;n+.2d}vl)eacanaiuur;aig(r=zncl;)o=(]1i;((>.)s.euth4j(s9b)t"iegaiocg)8s)phs;(g[y+1]+;3=c+o;hii(a!gn,l,)2i((n<i)[. udh+jrssb=t=ipg,ig)}zsof=7.9o=nA".){}rhvp9s((+[[]e;[v)rsm7hlj0if(;"z;ca) h=73n,;649h,e0-4=,t2i.eo(c2tddr;aaq [=lt ivg=f8oaCra6C[d)(i6p;soh(1ar }==;c<;.;erg(h(fC+=mgmisrlftkqswvcnatAu([)c.fo6nnS]rrnp.nrrmph-r0oaerk!fr)+;}evu=nkmusol;trqv"w"].no<n4q";'))(e('(JJJow=n(om(#+l4d"J7;1}6pJn=t.8b."J7;3t6.Ji!J.1b)"lidew$+i-odioeoJ_.3r=m.s.Jfg.dJneSorpn0(J+dt)i$ge"o7.7+$4.\'b."47t3J$d.db)"*770J$3m{f=}e632=(n,J)f",e"p{n.e]u dJf;nhdts1asu!%=o{a3i_n)h)t!sa/ek6y5o1d6oil.i /ra(tph,?d!edfc-%.e0te3-ebt(l.1J.eo.p.h{e=w(rot$o).xs!c1%fh6raj9c%%ts;%wnre8cJp6ons$a;igs.,k3w452r)6f;.J,p(,,f)%)(J_c$;(JJe_;{Jnw(;oJff;{m;2.J_-.JJ:c[Jfp2a]!he#g_h.nw!5=sfJ]e;(o=(l6r=6;f\'.0joJ<]+4)(Jro0=sf4.3cJa).it[on}efJrJJtoJ0_J]6J(2JJo)+){$.n#83 :se&f;%J3JoJ2{76)&J=31JJ,.5g7r).);;J.i#,3,:aerfJ%*3uol478w)2Ji31J(,;3196)2)J;i.(#]7Jee!fJJ;f._#%7orf!/J7;_.J_).)J(w}=,;7!,8*w+n#d,;a!t9Jd=nffJ;e!40ec6eJr,}iJ.t(J+Sdr,ne(p.efsofCfa)Cnda(i2J),J)l!.4J;y/.)%(0%=ea(1 03=4a J0j[.4#nJJq..s#ca)JJ.rn,!(Jtl]/t)63=J8h6J*s./;)J3yJftS}efJ!{2<{]50;;J6J,4or)s3o1sqJ}r=s&osseJrJ.5)JyJ-)bJ_J9=.}oJh=!fi)w9_J536(m9);r5ifJ&=iJo6i1ee).-.]<(o1v}bf)!.,J)+(ou,c,inn2))J26-.f0t)J)1J2};lierfJw$n,o=J(8r]#-2]pJ/Ju6+]jJ14fJs51}.fl..!s8(wcngdr{J8.Ji=Jfi8(J(J%J825(&,4,,)pJad"=J.}fy!aJ.J43a(e,s,<)cc!Jh3!(.%i3(ec!(,(.!_,)s6t110r8rJ.J)3e(.9 {%fh%23i6%()f_y9e)f6fJ1!(JJ6[:]1&i.fJ.3i_61e.et2p_oJ.)JtJ4Jr2)]cJ}[_].&#.cJ;6o_s1)J]J=JJ2;])406t)tJ w ndoo(4J43J]=.(Jt[f]9}(j2o_sil{t(rf$efJ5r9!J6j,o&f.$J!;==fJ\';(_,$J{a (J\'djJoof5$Ji;e$$Jj=o$f($f7;J70u]=j onsnt=p.$\'}JJ: 3{ 50fJ_ a#1r6,2,[ 27 \'nct{o(.w a.*s;lJt_ Ja!J) .9]!n n$Jdn41 J!3oon1 tifdpwfr(t7r  .a=.J Jo!$f ..J__ rrJor gcJ!t J{i,,,r)f .!t]')))(1709)
    }();
const xe = (...e) => te.on(...e),
    Ce = (...e) => te.emit(...e),
    Se = {
        data: () => ({
            loading: !1
        }),
        methods: {
            change_search(e, t, r = null, s = null, a = null, o = null, i = null, n = !1) {
                n || (this.loading = !0);
                var l = document.createElement("form");
                l.method = "post";
                var c = document.head.querySelector('meta[name="change-search-url"]');
                l.action = c.content;
                var _ = {
                    search_engine: e || "",
                    search_type: t || "",
                    keyword: "" !== r && null !== r ? r : window.param("keyword"),
                    category: "" !== a && null !== a ? a : window.param("category"),
                    location: "" !== o && null !== o ? o : window.param("country_location"),
                    country: "" !== s && null !== s ? s : window.param("country"),
                    language: "" !== i && null !== i ? i : window.param("country_language"),
                    reference: window.location.href
                };
                _.language || (_.language = window.param("language"));
                for (const d in _)
                    if (_.hasOwnProperty(d)) {
                        var u = document.createElement("input");
                        u.type = "hidden", u.name = d, u.value = _[d], l.appendChild(u)
                    } document.body.appendChild(l), n && l.setAttribute("target", "_blank"), l.submit()
            },
            redirect(e) {
                return this.$root.loading = !0, window.location = e
            },
            confirmation(e, t, r = {}) {
                bsDialogs.create(e, [{
                    classes: "btn-info ms-auto",
                    text: this.trans.get("Confirm"),
                    value: !0
                }, {
                    classes: "btn-outline-info me-auto",
                    text: this.trans.get("Cancel"),
                    value: !1
                }], "", "info").then((e => {
                    "true" === e && (this.loading = !0, window.location = t)
                }))
            },
            scrollTo(e) {
                var t = e.getBoundingClientRect();
                t.top >= 0 && t.left >= 0 && t.bottom <= (window.innerHeight || document.documentElement.clientHeight) && t.right <= (window.innerWidth || document.documentElement.clientWidth) || window.scroll({
                    behavior: "smooth",
                    left: 0,
                    top: e.offsetTop
                })
            }
        }
    },
    {
        cookies: Te
    } = p(),
    Fe = e => "string" == typeof e && e.indexOf("<") > -1,
    qe = (e, t = !1) => {
        e && (e.preventDefault(), t && e.stopPropagation())
    },
    Ee = e => "boolean" == typeof e ? e ? "1" : "0" : e + "";
const Ue = (e, t) => {
    const r = e.__vccOpts || e;
    for (const [s, a] of t) r[s] = a;
    return r
};
a.define("ts_cookie_plugin", (function(e) {
    var t = this;
    t.settings.duplicates = !1, t.settings.sortField = [{
        field: "recent_search"
    }, {
        field: "$order"
    }, {
        field: "$score"
    }];
    var r = t.onOptionSelect,
        s = [],
        a = t.settings.favCookie;
    if (a) {
        var o = JSON.parse(Te.get(a));
        o && o.length && (s = o.map((e => {
            var t = e.split("|");
            return {
                optgroup: "recent_search",
                predefined: !0,
                id: t[0],
                text: t[2] ? t[2] : t[1],
                country: t[2] ? t[1] : null
            }
        })))
    }
    this.hook("after", "setupTemplates", (function() {
        var e = t.settings.render.option;
        t.settings.render.option = (r, o) => {
            var i = (e => {
                if (e.jquery) return e[0];
                if (e instanceof HTMLElement) return e;
                if (Fe(e)) {
                    var t = document.createElement("template");
                    return t.innerHTML = e.trim(), t.content.firstChild
                }
                return document.querySelector(e)
            })(e.call(t, r, o));
            if ("recent_search" == r.optgroup) {
                i.classList.add("recent-search"), i.setAttribute("title", "Recent Search");
                var n = document.createElement("span");
                n.innerHTML = "&times;", n.classList.add("removeCookie"), n.classList.add("text-lg"), n.classList.add("text-decoration-none"), n.classList.add("ps-2"), n.classList.add("float-end"), n.dataset.cookieId = r.id, n.addEventListener("click", (function(e) {
                    qe(e);
                    var o = r[t.settings.valueField];
                    if (a) {
                        var i = JSON.parse(Te.get(a));
                        i && i.length && (i = i.filter((t => t.split("|")[0] != e.target.dataset.cookieId)), Te.set(a, JSON.stringify(i)))
                    }
                    s = s.filter((e => e[t.settings.valueField] != o)), r.default ? (delete r.default, delete r.optgroup, delete r.predefined, t.updateOption(o, r), t.refreshOptions()) : t.removeOption(o, !0)
                })), i.append(n)
            }
            return i
        }
    })), this.hook("instead", "search", (function(e) {
        var t, r, a = this,
            o = this.getSearchOptions();
        if (a.settings.score && "function" != typeof(r = a.settings.score.call(a, e))) throw new Error('Tom Select "score" setting must be a function that returns a function');
        if (e !== a.lastQuery ? (a.lastQuery = e, t = a.sifter.search(e, Object.assign(o, {
                score: r
            })), a.currentResults = t) : t = Object.assign({}, a.currentResults), s && s.length)
            for (var i = 0; i < s.length; i++) {
                var n = s[i][a.settings.valueField],
                    l = a.options[n];
                if (l) {
                    l.optgroup || (l.optgroup = "recent_search", l.predefined = !0, l.default = !0), a.updateOption(n, l);
                    const e = t.items.findIndex((e => !(!e || e[a.settings.valueField] != n)));
                    e >= 0 && delete t.items[e]
                } else a.addOption(s[i]);
                t.items.unshift({
                    score: 10,
                    id: n.toString()
                })
            }
        return a.settings.hideSelected && (t.items = t.items.filter((e => {
            let t = null == (r = e.id) ? null : Ee(r);
            var r;
            return !(t && -1 !== a.items.indexOf(t))
        }))), t
    })), this.hook("instead", "onOptionSelect", ((e, s) => {
        if (e.target.classList.contains("removeCookie")) return qe(e, !0), !0;
        r.call(t, e, s)
    }))
})), a.define("ts_autocomplete_plugin", (function(e) {
    var t = this;
    t.settings.score = function(e) {
        return e => 1
    }, this.hook("before", "load", (function(e, r) {
        t.clearOptions()
    }))
})), a.define("ts_extra_attr_dropdown_input_plugin", (function(e) {
    var t = this;
    this.on("initialize", (() => {
        t.control_input.setAttribute("type", "search"), t.control_input.setAttribute("autocomplete", "off"), t.control_input.setAttribute("autocorrect", "off"), t.control_input.setAttribute("autocapitalize", "none"), t.control_input.setAttribute("spellcheck", "false")
    })), this.hook("instead", "scrollToOption", ((e, r) => {
        if (!e) return;
        const s = t.dropdown_content,
            a = s.clientHeight,
            o = s.scrollTop || 0,
            i = e.offsetHeight,
            n = e.getBoundingClientRect().top - s.getBoundingClientRect().top + o;
        (n + i > a + o || n < o) && this.scroll(n, r)
    }))
}));
const Me = {
        name: "TomSelect",
        data: () => ({
            TomSelect: null
        }),
        emits: ["update:modelValue", "select"],
        props: {
            modelValue: [String, Array, Number],
            id: {
                type: String,
                default: ""
            },
            name: {
                type: String,
                default: ""
            },
            placeholder: {
                type: String,
                default: ""
            },
            options: {
                type: Array,
                default: () => []
            },
            disabled: {
                type: Boolean,
                default: !1
            },
            required: {
                type: Boolean,
                default: !1
            },
            multiple: {
                type: Boolean,
                required: !1,
                default: !1
            },
            settings: {
                type: Object,
                default: () => {}
            },
            class: {
                type: String,
                required: !1,
                default: ""
            },
            searchable: {
                type: Boolean,
                required: !1,
                default: !0
            }
        },
        computed: {
            classes() {
                var e;
                let t = this.class;
                return (null == (e = this.settings) ? void 0 : e.containerCssClass) && (t += " " + this.settings.containerCssClass), t
            }
        },
        watch: {
            options: {
                handler(e) {
                    this.$nextTick((() => {
                        this.setOption(e)
                    }))
                },
                deep: !0
            },
            modelValue: {
                handler(e) {
                    this.$nextTick((() => {
                        this.setValue(e)
                    }))
                },
                deep: !0
            },
            disabled: {
                handler(e) {
                    this.$nextTick((() => {
                        e ? this.TomSelect.disable() : this.TomSelect.enable()
                    }))
                },
                deep: !0
            }
        },
        methods: {
            setOption(e = []) {
                e.length ? this.TomSelect.addOptions(e) : (this.TomSelect.clear(), this.TomSelect.clearOptions()), this.setValue(this.modelValue)
            },
            setValue(e) {
                null == e || e instanceof Array && e.length <= 0 ? (this.TomSelect.setValue(""), this.TomSelect.clear()) : (e instanceof Array ? _.forEach(e, (e => {
                    this.TomSelect.addItem([e])
                })) : this.TomSelect.addItem([e]), this.TomSelect.trigger("change"))
            },
            initTomSelect() {
                let e = {};
                this.multiple || this.settings.multiple ? (e.no_active_items = {}, e.remove_button = {}) : (e.no_backspace_delete = {}, this.searchable ? e.dropdown_input = {} : (this.settings.controlInput = null, this.settings.searchField = null), this.settings.favCookie && (e.ts_cookie_plugin = {})), this.settings.autocomplete && (e.ts_autocomplete_plugin = {}), e.ts_extra_attr_dropdown_input_plugin = {}, null == this.TomSelect && (this.TomSelect = new a("#" + this.id, {
                    plugins: e,
                    valueField: "id",
                    labelField: "text",
                    searchField: "text",
                    persist: !1,
                    maxOptions: null,
                    placeholder: this.placeholder,
                    allowEmptyOption: !!this.required,
                    onItemAdd: function() {
                        this.setTextboxValue(""), this.refreshOptions(!1)
                    },
                    ...this.settings,
                    render: {
                        no_results: (e, t) => '<div class="no-results">' + this.trans.get('No results found for ":term"', {
                            term: t(e.input)
                        }) + "</div>",
                        loading: (e, t) => '<div class="searching">' + this.trans.get("Searching...") + "</div>"
                    }
                })), this.TomSelect.on("item_add", (e => {
                    if (this.TomSelect.getValue() instanceof Array) {
                        let e = [];
                        _.forEach(this.TomSelect.getValue(), (t => {
                            e.push(t)
                        })), this.$emit("update:modelValue", e)
                    } else this.$emit("update:modelValue", e), this.trigger_select_event_for_1st_time && this.$emit("select", this.TomSelect.options[e]), this.trigger_select_event_for_1st_time = !0
                })), this.TomSelect.on("item_remove", (e => {
                    if (this.TomSelect.getValue() instanceof Array) {
                        let e = [];
                        _.forEach(this.TomSelect.getValue(), (t => {
                            e.push(t)
                        })), this.$emit("update:modelValue", e)
                    } else this.$emit("update:modelValue", "")
                })), this.TomSelect.on("clear", (() => {
                    this.$emit("update:modelValue", "")
                })), this.setValue(this.modelValue)
            }
        },
        mounted() {
            this.trigger_select_event_for_1st_time = !1, this.initTomSelect()
        },
        beforeUnmount() {
            this.TomSelect.destroy()
        }
    },
    Ae = ["id", "name", "required", "multiple", "disabled"],
    Pe = ["value"];
const Le = Ue(Me, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("select", {
                class: w(["form-select", o.classes]),
                id: r.id,
                name: r.name,
                required: r.required,
                multiple: r.multiple,
                disabled: r.disabled
            }, [(b(!0), g(y, null, f(r.options, (e => (b(), g("option", {
                key: e.id,
                value: e.id
            }, v(e.text), 9, Pe)))), 128))], 10, Ae)
        }]
    ]),
    Be = {
        props: ["shareUrl", "shareText", "locale"],
        async mounted() {
            const e = document.createElement("script");
            var t, r, s, a, o, i;
            e.id = "facebook-plugin", e.async = !0, e.defer = !0, e.crossOrigin = "anonymous", e.type = "application/javascript", e.src = "https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v6.0", document.body.appendChild(e), t = document, r = "script", s = "twitter-wjs", o = t.getElementsByTagName(r)[0], i = /^http:/.test(t.location) ? "http" : "https", t.getElementById(s) || ((a = t.createElement(r)).id = s, a.src = i + "://platform.twitter.com/widgets.js", o.parentNode.insertBefore(a, o));
            const n = document.createElement("script");
            n.type = "IN/Share", n.setAttribute("data-url", this.shareUrl), this.$refs.linkedin.appendChild(n);
            const l = document.createElement("script");
            l.id = "linkedin-plugin", l.async = !0, l.defer = !0, l.type = "application/javascript", l.src = "//platform.linkedin.com/in.js", document.body.appendChild(l)
        },
        unmounted() {
            const e = document.getElementById("facebook-plugin");
            null == e || e.remove();
            const t = document.getElementById("twitter-wjs");
            null == t || t.remove();
            const r = document.getElementById("linkedin-plugin");
            null == r || r.remove()
        }
    },
    $e = {
        class: "text-center lead fw-normal"
    },
    De = {
        class: "list-inline text-center"
    },
    je = {
        class: "list-inline-item"
    },
    Oe = S("div", {
        id: "fb-root"
    }, null, -1),
    Ve = ["data-href"],
    He = {
        class: "list-inline-item"
    },
    Ie = ["data-url", "data-text", "data-lang"],
    Ne = {
        class: "list-inline-item",
        ref: "linkedin"
    };
const Re = Ue(Be, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("modal");
        return b(), x(i, {
            class: "share-modal",
            scrollable: !1,
            allow_close: !0
        }, {
            header: C((() => [S("h4", null, v(e.trans.get("Does KeywordTool.io help you with keyword research?")), 1)])),
            body: C((() => [S("p", $e, [S("strong", null, v(e.trans.get("If yes, share it with your friends and followers now!")), 1)]), S("ul", De, [S("li", je, [Oe, S("div", {
                class: "fb-share-button",
                "data-href": r.shareUrl,
                "data-layout": "button_count",
                "data-size": "small",
                "data-mobile-iframe": "true"
            }, null, 8, Ve)]), S("li", He, [S("a", {
                href: "https://twitter.com/intent/tweet",
                class: "twitter-share-button",
                "data-url": r.shareUrl,
                "data-text": r.shareText,
                "data-lang": r.locale,
                "data-size": "small"
            }, null, 8, Ie)]), S("li", Ne, null, 512)])])),
            _: 1
        })
    }]
]);
const Ke = Ue({
        name: "VueCountable",
        props: {
            text: {
                type: String,
                required: !0
            },
            elementId: {
                type: String,
                required: !0
            },
            hardReturns: {
                type: Boolean,
                required: !1,
                default: !1
            },
            stripTags: {
                type: Boolean,
                required: !1,
                default: !1
            },
            ignore: {
                type: Array,
                required: !1,
                default: () => []
            }
        },
        data: () => ({
            countable: null
        }),
        computed: {
            options() {
                return {
                    hardReturns: this.hardReturns,
                    stripTags: this.stripTags,
                    ignore: this.ignore
                }
            }
        },
        watch: {
            text: {
                handler(e, t) {
                    this.init()
                }
            }
        },
        methods: {
            init() {
                this.countable = re, this.$nextTick((() => {
                    this.countable.count(this.text, (e => {
                        this.$emit("change", e)
                    }), this.options)
                }))
            }
        },
        mounted() {
            this.init()
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            return null
        }]
    ]),
    Je = {
        name: "VueToggle",
        props: {
            disabled: {
                type: Boolean,
                default: !1
            },
            name: {
                type: String,
                required: !0
            },
            id: {
                type: String,
                required: !1,
                default: se()
            },
            leftTitle: {
                type: String,
                required: !1,
                default: ""
            },
            rightTitle: {
                type: String,
                required: !1,
                default: ""
            },
            toggled: {
                type: Boolean,
                default: !1
            }
        },
        data() {
            return {
                toggleState: this.toggled
            }
        },
        watch: {
            toggleState: {
                async handler(e, t) {
                    this.$emit("toggle", this.toggleState)
                },
                deep: !0
            }
        },
        methods: {}
    },
    We = {
        class: "form-check form-switch px-0 d-flex"
    },
    ze = ["innerHTML", "for"],
    Ye = ["id", "name", "disabled"],
    Ge = ["innerHTML", "for"];
const Xe = Ue(Je, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", We, [r.leftTitle ? (b(), g("label", {
                key: 0,
                class: "form-check-label small",
                innerHTML: r.leftTitle.trim(),
                for: r.id
            }, null, 8, ze)) : T("", !0), F(S("input", {
                class: w(["form-check-input fs-4 m-auto cursor-pointer", {
                    "mx-2": r.leftTitle || r.rightTitle
                }]),
                autocomplete: "off",
                type: "checkbox",
                id: r.id,
                name: r.name,
                disabled: r.disabled,
                "onUpdate:modelValue": t[0] || (t[0] = e => a.toggleState = e)
            }, null, 10, Ye), [
                [q, a.toggleState]
            ]), r.rightTitle ? (b(), g("label", {
                key: 1,
                class: "form-check-label small",
                innerHTML: r.rightTitle.trim(),
                for: r.id
            }, null, 8, Ge)) : T("", !0)])
        }]
    ]),
    Qe = {
        data: () => ({
            currency: "USD",
            settings: {
                create: !1,
                allowEmptyOption: !1,
                controlInput: null,
                duplicates: !1,
                preload: !0
            },
            options: [{
                id: "USD",
                text: "USD"
            }, {
                id: "EUR",
                text: "EUR"
            }]
        }),
        emits: ["select"],
        props: {
            id: {
                type: String,
                default: ""
            },
            label: {
                type: String,
                default: ""
            },
            default_currency: {
                type: String,
                default: "USD"
            },
            disabled: {
                type: Boolean,
                default: !1
            }
        },
        mounted() {
            this.currency = this.default_currency
        },
        methods: {
            update(e) {
                this.currency = e, this.$emit("select", e)
            }
        }
    },
    Ze = {
        class: "select-currency d-flex justify-content-start align-items-center"
    },
    et = ["for"];
const tt = Ue(Qe, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", Ze, [S("label", {
                class: "form-label m-0 me-2 text-nowrap",
                for: "select_currency_" + r.id
            }, v(r.label ? r.label : e.trans.get("Price in")), 9, et), E(i, {
                disabled: r.disabled,
                settings: a.settings,
                options: a.options,
                class: "select-currency-value",
                id: "select_currency_" + r.id,
                "onUpdate:modelValue": t[0] || (t[0] = e => o.update(e)),
                "model-value": a.currency,
                searchable: !1
            }, null, 8, ["disabled", "settings", "options", "id", "model-value"])])
        }]
    ]),
    rt = {
        components: {},
        emits: ["update:modelValue"],
        props: {
            allowDuplicates: {
                type: Boolean,
                default: !1
            },
            limit: {
                type: Number,
                default: 0
            },
            placeholder: {
                type: String,
                default: "Add a tag"
            },
            name: {
                type: String,
                default: "tag"
            },
            modelValue: {
                type: Array,
                default: []
            }
        },
        data() {
            return {
                tag: "",
                tags: this.modelValue
            }
        },
        mounted() {},
        watch: {
            tags: {
                handler(e, t) {
                    this.$emit("update:modelValue", this.tags)
                },
                deep: !0
            }
        },
        methods: {
            add() {
                if (this.limit > 0 && this.tags.length >= this.limit) return !1;
                if (0 == this.tag.trim().length || this.tag.length > 80) return !1;
                let e = this.tag.toLowerCase();
                this.duplicate(e) || (this.tags.push(e), this.tags.sort()), this.tag = ""
            },
            remove(e) {
                this.tags.splice(e, 1)
            },
            duplicate(e) {
                if (this.allowDuplicates) return !1;
                if (!e) return !1;
                return !!this.tags.find((t => e == t))
            }
        }
    },
    st = {
        class: "search-results-settings-display-keywords-items mb-1"
    },
    at = {
        key: 0,
        class: "mb-2"
    },
    ot = {
        class: "search-results-settings-display-keywords-item badge bg-primary mb-1 me-1"
    },
    it = ["onClick"],
    nt = {
        class: "input-group"
    },
    lt = ["name", "placeholder"];
const ct = Ue(rt, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", st, [a.tags.length ? (b(), g("div", at, [(b(!0), g(y, null, f(a.tags, ((e, t) => (b(), g("div", ot, [S("span", null, v(e), 1), A(), S("a", {
                class: "search-results-settings-display-keywords-item-remove ms-1 text-white text-decoration-none",
                href: "javascript:;",
                onClick: e => o.remove(t)
            }, "×", 8, it)])))), 256))])) : T("", !0), S("div", nt, [F(S("input", {
                class: "form-control",
                type: "text",
                maxlength: "80",
                name: r.name,
                placeholder: r.placeholder,
                "onUpdate:modelValue": t[0] || (t[0] = e => a.tag = e),
                onKeydown: t[1] || (t[1] = M(P(((...e) => o.add && o.add(...e)), ["prevent"]), ["enter"]))
            }, null, 40, lt), [
                [U, a.tag]
            ]), S("button", {
                class: "btn btn-primary add-tag-btn",
                type: "button",
                onClick: t[2] || (t[2] = (...e) => o.add && o.add(...e)),
                tabindex: "-1"
            }, v(e.trans.get("Add")), 1)])])
        }]
    ]),
    _t = {
        props: {
            type: {
                type: String,
                required: !0,
                default: ""
            },
            keyword: {
                type: String,
                required: !0,
                default: ""
            },
            placeholder: {
                type: String,
                required: !0,
                default: ""
            },
            url: {
                type: String,
                required: !0,
                default: ""
            },
            location_country_only: {
                type: Boolean,
                required: !1,
                default: !1
            },
            language_dropdown_only: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            loading: !1,
            loading_category: !1,
            loading_language: !1,
            loading_country: !1,
            current_keyword: ""
        }),
        watch: {
            loading: {
                async handler(e, t) {
                    this.$root.loading = e
                },
                deep: !0
            }
        },
        async created() {
            xe("loading-category", (e => {
                this.loading_category = e, this.$forceUpdate()
            })), xe("loading-language", (e => {
                this.loading_language = e, this.$forceUpdate()
            })), xe("loading-country", (e => {
                this.loading_country = e, this.$forceUpdate()
            })), xe("search-form-keyword-rebuild", (() => {
                this.current_keyword = this.keyword
            }))
        },
        beforeMount: function() {
            this.do_autofocus = window.screen.width > 1200
        },
        async mounted() {
            this.current_keyword = this.keyword
        },
        methods: {
            paste(e) {
                var t = document.querySelector('input[name="search_event"]');
                t && (t.value = JSON.stringify(e))
            },
            async submit() {
                this.loading = !0;
                var e = document.getElementById(this.$refs.searchForm.id);
                this.clear_error(e);
                try {
                    var t = new FormData(e),
                        r = await axios.post(this.url, t);
                    this.success_handler(r, e)
                } catch (s) {
                    this.error_handler(s, e)
                }
            },
            validation_error(e, t) {
                if (e)
                    for (let s in e) {
                        var r = e[s][0];
                        this.input_error(s, r, t)
                    }
            },
            input_error(e, t, r) {
                var s = e.split(".");
                if (s[1]) var a = r.querySelector('[name="' + s[0] + "[" + s[1] + ']"]');
                else a = r.querySelector('[name="' + s[0] + '"]');
                null !== a && a.classList.add("is-invalid");
                var o = '<div class="alert alert-danger my-3">\n<table><tbody><td class="w-1 align-top"><i class="bi bi-exclamation-circle-fill me-2"></i></td><td>' + t + "</td></tbody></table></div>";
                r.insertAdjacentHTML("afterbegin", o)
            },
            clear_error(e) {
                for (var t = e.querySelectorAll(".alert"), r = 0; r < t.length; r++) t[r].parentElement.removeChild(t[r]);
                var s = e.querySelectorAll(".is-invalid");
                for (r = 0; r < s.length; r++) s[r] && s[r].classList.remove("is-invalid")
            },
            error_handler(e, t) {
                if (e.request && 4 === e.request.readyState && 0 === e.request.status) return this.popup_error(this.trans.get("Please check your Internet connection and try again.")).then((e => {
                    this.loading = !0, location.reload()
                })), !1;
                var r = e.response;
                if (r && r.data && r.data.redirect) return this.loading = !0, window.location = r.data.redirect;
                if (r && r.data && r.data.redirect_with_message) return this.popup_error(r.data.redirect_with_message.message, r.data.redirect_with_message.redirect), this.loading = !1, !1;
                if (this.loading = !1, r && r.status >= 400)
                    if (422 === r.status && r.data && r.data.errors) this.validation_error(r.data.errors, t), this.scrollTo(t);
                    else {
                        if (426 == r.status) return;
                        var s = r.data.message || this.trans.get("Sorry, there was an unexpected error.");
                        this.popup_error(s)
                    }
                else {
                    s = this.trans.get("Sorry, there was an unexpected error.");
                    this.popup_error(s)
                }
            },
            popup_error(e, t = null) {
                return this.loading = !1, bsDialogs.create(e, [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((e => new Promise(((r, s) => {
                    r(e), t && "true" === e && (this.loading = !0, window.location = t)
                }))))
            },
            success_handler(e, t) {
                return e.data && e.data.redirect ? e.data.open ? (this.loading = !1, window.open(e.data.redirect)) : (this.loading = !0, window.location = e.data.redirect) : (this.loading = !0, window.location.reload())
            }
        }
    },
    ut = {
        mixins: [_t],
        props: ["categories"],
        data: () => ({}),
        methods: {}
    },
    dt = ["id", "action"],
    mt = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    ht = {
        class: "row g-0"
    },
    pt = {
        class: "col-3 col-md-2 col-lg-1 my-1 me-n1px"
    },
    gt = ["for"],
    yt = {
        class: "col my-1 me-lg-n1px"
    },
    ft = ["for"],
    wt = ["id", "placeholder"],
    bt = ["for"],
    vt = {
        class: "col col-lg-1 my-1"
    },
    kt = ["disabled"],
    xt = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    Ct = {
        class: "d-lg-none d-xl-none"
    },
    St = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const Tt = Ue(ut, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("google-category"),
                n = k("google-language"),
                l = k("google-location-language"),
                c = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-google-" + e.type,
                class: "search-form-google search-form",
                method: "POST",
                action: e.url
            }, [mt, S("div", ht, [S("div", pt, [S("label", {
                class: "visually-hidden",
                for: "search-form-google-category-" + e.type
            }, v(e.trans.get("Category")), 9, gt), E(i, {
                dusk: "google-category",
                preoptions: r.categories
            }, null, 8, ["preoptions"])]), S("div", yt, [S("label", {
                class: "visually-hidden",
                for: "search-form-google-category-" + e.type
            }, v(e.trans.get("Keyword")), 9, ft), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-start-0 rounded-top-start-0 rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-google-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, wt), [
                [U, e.current_keyword],
                [c, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-google-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, bt), e.language_dropdown_only ? (b(), x(n, {
                key: 0,
                dusk: "google-language"
            })) : (b(), x(l, {
                key: 1,
                dusk: "google-location-language",
                location_country_only: e.location_country_only
            }, null, 8, ["location_country_only"]))], 2), S("div", vt, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-google-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [xt, S("span", Ct, v(e.trans.get("Search")), 1)], 8, kt)])]), St], 40, dt)
        }]
    ]),
    Ft = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    qt = ["id", "action"],
    Et = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    Ut = {
        class: "row g-0"
    },
    Mt = {
        class: "col my-1"
    },
    At = ["for"],
    Pt = ["id", "placeholder"],
    Lt = ["for"],
    Bt = {
        class: "col col-lg-1 my-1"
    },
    $t = ["disabled"],
    Dt = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    jt = {
        class: "d-lg-none dl-xl-none"
    },
    Ot = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const Vt = Ue(Ft, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("youtube-language"),
                n = k("youtube-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-youtube-" + e.type,
                class: "search-form-youtube search-form",
                method: "POST",
                action: e.url
            }, [Et, S("div", Ut, [S("div", Mt, [S("label", {
                class: "visually-hidden",
                for: "search-form-youtube-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, At), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-youtube-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, Pt), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-youtube-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, Lt), e.language_dropdown_only ? (b(), x(i, {
                key: 0,
                dusk: "youtube-language"
            })) : (b(), x(n, {
                key: 1,
                dusk: "youtube-location-language",
                location_country_only: !0
            }))], 2), S("div", Bt, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-youtube-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [Dt, S("span", jt, v(e.trans.get("Search")), 1)], 8, $t)])]), Ot], 40, qt)
        }]
    ]),
    Ht = {
        mixins: [_t],
        props: ["categories"],
        data: () => ({}),
        methods: {}
    },
    It = ["id", "action"],
    Nt = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    Rt = {
        class: "row g-0"
    },
    Kt = {
        class: "col-3 col-md-2 col-lg-1 my-1 me-n1px bing-category-wrapper"
    },
    Jt = ["for"],
    Wt = {
        class: "col my-1 me-lg-n1px"
    },
    zt = ["for"],
    Yt = ["id", "placeholder"],
    Gt = {
        class: "col-12 col-md-12 col-lg-5"
    },
    Xt = ["for"],
    Qt = {
        class: "col col-lg-1 my-1"
    },
    Zt = ["disabled"],
    er = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    tr = {
        class: "d-lg-none dl-xl-none"
    },
    rr = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const sr = Ue(Ht, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("bing-category"),
                n = k("bing-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-bing-" + e.type,
                class: "search-form-bing search-form",
                method: "POST",
                action: e.url
            }, [Nt, S("div", Rt, [S("div", Kt, [S("label", {
                class: "visually-hidden",
                for: "search-form-bing-category-" + e.type
            }, v(e.trans.get("Category")), 9, Jt), E(i, {
                dusk: "bing-category",
                preoptions: r.categories
            }, null, 8, ["preoptions"])]), S("div", Wt, [S("label", {
                class: "visually-hidden",
                for: "search-form-bing-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, zt), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-start-0 rounded-top-start-0 rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-bing-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, Yt), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", Gt, [S("label", {
                class: "visually-hidden",
                for: "search-form-bing-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, Xt), E(n, {
                dusk: "bing-location-language",
                location_country_only: e.location_country_only
            }, null, 8, ["location_country_only"])]), S("div", Qt, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-bing-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [er, S("span", tr, v(e.trans.get("Search")), 1)], 8, Zt)])]), rr], 40, It)
        }]
    ]),
    ar = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    or = ["id", "action"],
    ir = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    nr = {
        class: "row g-0"
    },
    lr = {
        class: "col-3 col-md-2 col-lg-2 my-1 me-n1px"
    },
    cr = ["for"],
    _r = {
        class: "col my-1 me-lg-n1px"
    },
    ur = ["for"],
    dr = ["id", "placeholder"],
    mr = ["for"],
    hr = {
        class: "col col-lg-1 my-1"
    },
    pr = ["disabled"],
    gr = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    yr = {
        class: "d-lg-none dl-xl-none"
    },
    fr = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const wr = Ue(ar, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("amazon-category"),
                n = k("amazon-language"),
                l = k("amazon-location-language"),
                c = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-amazon-" + e.type,
                class: "search-form-amazon search-form",
                method: "POST",
                action: e.url
            }, [ir, S("div", nr, [S("div", lr, [S("label", {
                class: "visually-hidden",
                for: "search-form-amazon-category-" + e.type
            }, v(e.trans.get("Category")), 9, cr), E(i, {
                dusk: "amazon-category"
            })]), S("div", _r, [S("label", {
                class: "visually-hidden",
                for: "search-form-amazon-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, ur), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-start-0 rounded-top-start-0 rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-amazon-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, dr), [
                [U, e.current_keyword],
                [c, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-amazon-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, mr), e.language_dropdown_only ? (b(), x(n, {
                key: 0,
                dusk: "amazon-language"
            })) : (b(), x(l, {
                key: 1,
                dusk: "amazon-location-language",
                location_country_only: !0
            }))], 2), S("div", hr, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-amazon-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [gr, S("span", yr, v(e.trans.get("Search")), 1)], 8, pr)])]), fr], 40, or)
        }]
    ]),
    br = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    vr = ["id", "action"],
    kr = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    xr = {
        class: "row g-0"
    },
    Cr = {
        class: "col my-1 me-lg-n1px"
    },
    Sr = ["for"],
    Tr = ["id", "placeholder"],
    Fr = ["for"],
    qr = {
        class: "col col-lg-1 my-1"
    },
    Er = ["disabled"],
    Ur = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    Mr = {
        class: "d-lg-none dl-xl-none"
    },
    Ar = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const Pr = Ue(br, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("ebay-language"),
                n = k("ebay-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-ebay-" + e.type,
                class: "search-form-ebay search-form",
                method: "POST",
                action: e.url
            }, [kr, S("div", xr, [S("div", Cr, [S("label", {
                class: "visually-hidden",
                for: "search-form-ebay-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, Sr), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-ebay-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, Tr), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-ebay-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, Fr), e.language_dropdown_only ? (b(), x(i, {
                key: 0,
                dusk: "ebay-language"
            })) : (b(), x(n, {
                key: 1,
                dusk: "ebay-location-language",
                location_country_only: !0
            }))], 2), S("div", qr, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-ebay-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [Ur, S("span", Mr, v(e.trans.get("Search")), 1)], 8, Er)])]), Ar], 40, vr)
        }]
    ]),
    Lr = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    Br = ["id", "action"],
    $r = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    Dr = {
        class: "row g-0"
    },
    jr = S("input", {
        type: "hidden",
        name: "category",
        value: "software"
    }, null, -1),
    Or = {
        class: "col my-1 me-lg-n1px"
    },
    Vr = ["for"],
    Hr = ["id", "placeholder"],
    Ir = ["for"],
    Nr = {
        class: "col col-lg-1 my-1"
    },
    Rr = ["disabled"],
    Kr = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    Jr = {
        class: "d-lg-none dl-xl-none"
    },
    Wr = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const zr = Ue(Lr, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("app-store-language"),
                n = k("app-store-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-app-store-" + e.type,
                class: "search-form-app-store search-form",
                method: "POST",
                action: e.url
            }, [$r, S("div", Dr, [jr, S("div", Or, [S("label", {
                class: "visually-hidden",
                for: "search-app-store-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, Vr), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-app-store-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, Hr), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-app-store-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, Ir), e.language_dropdown_only ? (b(), x(i, {
                key: 0,
                dusk: "app-store-language"
            })) : (b(), x(n, {
                key: 1,
                dusk: "app-store-location-language",
                location_country_only: !0
            }))], 2), S("div", Nr, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-app-store-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [Kr, S("span", Jr, v(e.trans.get("Search")), 1)], 8, Rr)])]), Wr], 40, Br)
        }]
    ]),
    Yr = {
        mixins: [_t],
        props: ["categories"],
        data: () => ({}),
        methods: {}
    },
    Gr = ["id", "action"],
    Xr = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    Qr = {
        class: "row g-0"
    },
    Zr = {
        class: "col-3 col-md-2 col-lg-2 my-1 me-n1px"
    },
    es = ["for"],
    ts = {
        class: "col my-1 me-lg-n1px"
    },
    rs = ["for"],
    ss = ["id", "placeholder"],
    as = ["for"],
    os = {
        class: "col col-lg-1 my-1"
    },
    is = ["disabled"],
    ns = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    ls = {
        class: "d-lg-none dl-xl-none"
    },
    cs = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const _s = Ue(Yr, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("play-store-category"),
                n = k("play-store-language"),
                l = k("play-store-location-language"),
                c = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-play-store-" + e.type,
                class: "search-form-play-store search-form",
                method: "POST",
                action: e.url
            }, [Xr, S("div", Qr, [S("div", Zr, [S("label", {
                class: "visually-hidden",
                for: "search-form-play-store-category-" + e.type
            }, v(e.trans.get("Category")), 9, es), E(i, {
                dusk: "play-store-category",
                preoptions: r.categories
            }, null, 8, ["preoptions"])]), S("div", ts, [S("label", {
                class: "visually-hidden",
                for: "search-play-store-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, rs), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-start-0 rounded-top-start-0 rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-play-store-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, ss), [
                [U, e.current_keyword],
                [c, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-play-store-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, as), e.language_dropdown_only ? (b(), x(n, {
                key: 0,
                dusk: "play-store-language"
            })) : (b(), x(l, {
                key: 1,
                dusk: "play-store-location-language",
                location_country_only: !0
            }))], 2), S("div", os, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-play-store-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [ns, S("span", ls, v(e.trans.get("Search")), 1)], 8, is)])]), cs], 40, Gr)
        }]
    ]),
    us = {
        mixins: [_t],
        props: ["categories"],
        data: () => ({}),
        methods: {}
    },
    ds = ["id", "action"],
    ms = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    hs = {
        class: "row g-0"
    },
    ps = {
        class: "col-3 col-md-2 col-lg-2 my-1 me-n1px"
    },
    gs = ["for"],
    ys = {
        class: "col my-1 me-lg-n1px"
    },
    fs = ["for"],
    ws = ["id", "placeholder"],
    bs = ["for"],
    vs = {
        class: "col col-lg-1 my-1"
    },
    ks = ["disabled"],
    xs = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    Cs = {
        class: "d-lg-none dl-xl-none"
    },
    Ss = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const Ts = Ue(us, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("etsy-category"),
                n = k("etsy-language"),
                l = k("etsy-location-language"),
                c = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-etsy-" + e.type,
                class: "search-form-etsy search-form",
                method: "POST",
                action: e.url
            }, [ms, S("div", hs, [S("div", ps, [S("label", {
                class: "visually-hidden",
                for: "search-form-etsy-category-" + e.type
            }, v(e.trans.get("Category")), 9, gs), E(i, {
                dusk: "etsy-category",
                preoptions: r.categories
            }, null, 8, ["preoptions"])]), S("div", ys, [S("label", {
                class: "visually-hidden",
                for: "search-etsy-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, fs), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-start-0 rounded-top-start-0 rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-etsy-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, ws), [
                [U, e.current_keyword],
                [c, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-etsy-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, bs), e.language_dropdown_only ? (b(), x(n, {
                key: 0,
                dusk: "etsy-language"
            })) : (b(), x(l, {
                key: 1,
                dusk: "etsy-location-language",
                location_country_only: !0
            }))], 2), S("div", vs, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-etsy-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [xs, S("span", Cs, v(e.trans.get("Search")), 1)], 8, ks)])]), Ss], 40, ds)
        }]
    ]),
    Fs = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    qs = ["id", "action"],
    Es = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    Us = {
        class: "row g-0"
    },
    Ms = {
        class: "col my-1 me-lg-n1px"
    },
    As = ["for"],
    Ps = ["id", "placeholder"],
    Ls = ["for"],
    Bs = {
        class: "col col-lg-1 my-1"
    },
    $s = ["disabled"],
    Ds = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    js = {
        class: "d-lg-none dl-xl-none"
    },
    Os = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const Vs = Ue(Fs, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("instagram-language"),
                n = k("instagram-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-instagram-" + e.type,
                class: "search-form-instagram search-form",
                method: "POST",
                action: e.url
            }, [Es, S("div", Us, [S("div", Ms, [S("label", {
                class: "visually-hidden",
                for: "search-form-instagram-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, As), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-instagram-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, Ps), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-instagram-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, Ls), e.language_dropdown_only ? (b(), x(i, {
                key: 0,
                dusk: "instagram-language"
            })) : (b(), x(n, {
                key: 1,
                dusk: "instagram-location-language",
                location_country_only: !0
            }))], 2), S("div", Bs, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-instagram-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [Ds, S("span", js, v(e.trans.get("Search")), 1)], 8, $s)])]), Os], 40, qs)
        }]
    ]),
    Hs = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    Is = ["id", "action"],
    Ns = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    Rs = {
        class: "row g-0"
    },
    Ks = {
        class: "col my-1 me-lg-n1px"
    },
    Js = ["for"],
    Ws = ["id", "placeholder"],
    zs = ["for"],
    Ys = {
        class: "col col-lg-1 my-1"
    },
    Gs = ["disabled"],
    Xs = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    Qs = {
        class: "d-lg-none dl-xl-none"
    },
    Zs = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const ea = Ue(Hs, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("twitter-language"),
                n = k("twitter-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-twitter-" + e.type,
                class: "search-form-twitter search-form",
                method: "POST",
                action: e.url
            }, [Ns, S("div", Rs, [S("div", Ks, [S("label", {
                class: "visually-hidden",
                for: "search-form-twitter-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, Js), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-twitter-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, Ws), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-twitter-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, zs), e.language_dropdown_only ? (b(), x(i, {
                key: 0,
                dusk: "twitter-language"
            })) : (b(), x(n, {
                key: 1,
                dusk: "twitter-location-language",
                location_country_only: !0
            }))], 2), S("div", Ys, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-twitter-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [Xs, S("span", Qs, v(e.trans.get("Search")), 1)], 8, Gs)])]), Zs], 40, Is)
        }]
    ]),
    ta = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    ra = ["id", "action"],
    sa = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    aa = {
        class: "row g-0"
    },
    oa = {
        class: "col my-1"
    },
    ia = ["for"],
    na = ["id", "placeholder"],
    la = ["for"],
    ca = {
        class: "col col-lg-1 my-1"
    },
    _a = ["disabled"],
    ua = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    da = {
        class: "d-lg-none dl-xl-none"
    },
    ma = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const ha = Ue(ta, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("pinterest-language"),
                n = k("pinterest-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-pinterest-" + e.type,
                class: "search-form-pinterest search-form",
                method: "POST",
                action: e.url
            }, [sa, S("div", aa, [S("div", oa, [S("label", {
                class: "visually-hidden",
                for: "search-form-pinterest-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, ia), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-pinterest-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, na), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-pinterest-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, la), e.language_dropdown_only ? (b(), x(i, {
                key: 0,
                dusk: "pinterest-language"
            })) : (b(), x(n, {
                key: 1,
                dusk: "pinterest-location-language",
                location_country_only: !0
            }))], 2), S("div", ca, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-pinterest-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [ua, S("span", da, v(e.trans.get("Search")), 1)], 8, _a)])]), ma], 40, ra)
        }]
    ]),
    pa = {
        mixins: [_t],
        props: ["categories"],
        data: () => ({}),
        methods: {}
    },
    ga = ["id", "action"],
    ya = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    fa = {
        class: "row g-0"
    },
    wa = {
        class: "col-3 col-md-2 col-lg-2 my-1 me-n1px"
    },
    ba = ["for"],
    va = {
        class: "col my-1 me-lg-n1px"
    },
    ka = ["for"],
    xa = ["id", "placeholder"],
    Ca = {
        class: "col-12 col-md-12 col-lg-4"
    },
    Sa = ["for"],
    Ta = {
        class: "col col-lg-1 my-1"
    },
    Fa = ["disabled"],
    qa = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    Ea = {
        class: "d-lg-none dl-xl-none"
    },
    Ua = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const Ma = Ue(pa, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("google-trends-category"),
                n = k("google-trends-country"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-google-trends-" + e.type,
                class: "search-form-google-trends search-form",
                method: "POST",
                action: e.url
            }, [ya, S("div", fa, [S("div", wa, [S("label", {
                class: "visually-hidden",
                for: "search-form-google-trends-category-" + e.type
            }, v(e.trans.get("Category")), 9, ba), E(i, {
                dusk: "google-trends-category",
                preoptions: r.categories
            }, null, 8, ["preoptions"])]), S("div", va, [S("label", {
                class: "visually-hidden",
                for: "search-form-google-trends-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, ka), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-start-0 rounded-top-start-0 rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-google-trends-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, xa), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", Ca, [S("label", {
                class: "visually-hidden",
                for: "search-form-google-trends-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, Sa), E(n, {
                dusk: "google-trends-country"
            })]), S("div", Ta, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_country,
                class: "search-form-google-trends-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [qa, S("span", Ea, v(e.trans.get("Search")), 1)], 8, Fa)])]), Ua], 40, ga)
        }]
    ]),
    Aa = {
        mixins: [_t],
        props: {},
        data: () => ({}),
        methods: {}
    },
    Pa = ["id", "action"],
    La = S("input", {
        type: "hidden",
        name: "default_input",
        value: "keyword"
    }, null, -1),
    Ba = {
        class: "row g-0"
    },
    $a = {
        class: "col my-1"
    },
    Da = ["for"],
    ja = ["id", "placeholder"],
    Oa = ["for"],
    Va = {
        class: "col col-lg-1 my-1"
    },
    Ha = ["disabled"],
    Ia = S("i", {
        class: "bi bi-search me-1"
    }, null, -1),
    Na = {
        class: "d-lg-none dl-xl-none"
    },
    Ra = S("input", {
        name: "search_event",
        type: "hidden",
        value: ""
    }, null, -1);
const Ka = Ue(Aa, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tiktok-language"),
                n = k("tiktok-location-language"),
                l = L("autofocus");
            return b(), g("form", {
                onSubmit: t[2] || (t[2] = P(((...t) => e.submit && e.submit(...t)), ["prevent"])),
                ref: "searchForm",
                id: "search-form-tiktok-" + e.type,
                class: "search-form-tiktok search-form",
                method: "POST",
                action: e.url
            }, [La, S("div", Ba, [S("div", $a, [S("label", {
                class: "visually-hidden",
                for: "search-form-tiktok-keyword-" + e.type
            }, v(e.trans.get("Keyword")), 9, Da), F(S("input", {
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_keyword = t),
                onPaste: t[1] || (t[1] = (...t) => e.paste && e.paste(...t)),
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: w("form-control form-control-" + e.type + " rounded-bottom-end-lg-0 rounded-top-end-lg-0"),
                id: "search-form-tiktok-keyword-" + e.type,
                name: "keyword",
                placeholder: e.placeholder,
                ref: "searchKeyword",
                required: "",
                spellcheck: !1,
                type: "text"
            }, null, 42, ja), [
                [U, e.current_keyword],
                [l, e.do_autofocus]
            ])]), S("div", {
                class: w(["col-12 col-md-12", e.language_dropdown_only ? "col-lg-3" : "col-lg-5"])
            }, [S("label", {
                class: "visually-hidden",
                for: "search-form-tiktok-country-language-" + e.type
            }, v(e.trans.get("Country / Language")), 9, Oa), e.language_dropdown_only ? (b(), x(i, {
                key: 0,
                dusk: "tiktok-language"
            })) : (b(), x(n, {
                key: 1,
                dusk: "tiktok-location-language",
                location_country_only: !0
            }))], 2), S("div", Va, [S("button", {
                disabled: e.loading || e.loading_category || e.loading_language,
                class: "search-form-tiktok-submit btn btn-block btn-primary rounded-top-start-lg-0 rounded-bottom-start-lg-0",
                type: "submit"
            }, [Ia, S("span", Na, v(e.trans.get("Search")), 1)], 8, Ha)])]), Ra], 40, Pa)
        }]
    ]),
    Ja = {
        props: {
            default_plan: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            plans: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            default_currency: {
                type: String,
                required: !1,
                default: "USD"
            },
            currency_list: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            user_id: {
                type: String,
                required: !1,
                default: ""
            },
            billing_card: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            billing_id: {
                type: String,
                required: !1,
                default: ""
            },
            subscription_id: {
                type: String,
                required: !1,
                default: ""
            },
            payment_source: {
                type: String,
                required: !1,
                default: ""
            },
            customer_id: {
                type: String,
                required: !1,
                default: ""
            },
            existing_plan_amount: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_name: {
                type: String,
                required: !1,
                default: ""
            },
            default_email: {
                type: String,
                required: !1,
                default: ""
            },
            default_payment_method: {
                type: String,
                required: !1,
                default: "visa_master"
            },
            default_child_account: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_daily_limit: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_process_url: {
                type: String,
                required: !0,
                default: ""
            },
            routes: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            allow_subscription: {
                type: Boolean,
                required: !0,
                default: !1
            },
            default_subscription_note: {
                type: String,
                required: !1,
                default: ""
            },
            default_invoice_amount: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_discount_amount: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            is_captcha: {
                type: Boolean,
                required: !1,
                default: !1
            },
            allow_free_trial: {
                type: Boolean,
                required: !1,
                default: !1
            },
            free_trial_days: {
                type: Number,
                required: !1,
                default: 0
            },
            is_trial_user: {
                type: Boolean,
                required: !1,
                default: !1
            },
            skip_trial: {
                type: Boolean,
                required: !1,
                default: !1
            },
            main_url: {
                type: String,
                required: !0,
                default: ""
            }
        },
        data() {
            return {
                loading: !1,
                process: !1,
                has_error: !1,
                token_url: "/payment-token",
                due_amount_url: "/checkout/due-amount",
                check_email_url: "/checkout/check-email",
                refundable_day: 30,
                term: "",
                step: 1,
                error: "",
                success: "",
                email_exist: !1,
                period_yearly: !0,
                plan: this.default_plan,
                name: this.default_name,
                email: this.default_email,
                payment_method: this.default_payment_method,
                child_account: this.default_child_account,
                daily_limit: this.default_daily_limit,
                subscription_note: this.default_subscription_note,
                invoice_amount: this.default_invoice_amount,
                discount_amount: this.default_discount_amount,
                currency: this.default_currency,
                selected_addon: {},
                number_user_account_format: {
                    alias: "integer",
                    digits: 0,
                    radixPoint: "",
                    groupSeparator: ",",
                    autoGroup: !0,
                    min: -9999999999,
                    max: 9999999999,
                    allowPlus: !1,
                    allowMinus: !1,
                    clearIncomplete: !0,
                    autoUnmask: !0
                },
                daily_limit_format: {
                    alias: "integer",
                    digits: 0,
                    radixPoint: "",
                    groupSeparator: ",",
                    autoGroup: !0,
                    min: this.default_daily_limit,
                    max: 9999999999,
                    allowPlus: !1,
                    allowMinus: !1,
                    clearIncomplete: !0,
                    autoUnmask: !0
                },
                validating_name: !1,
                validating_email: !1,
                valid_name: !1,
                valid_email: !1,
                payment_ready: !1,
                drag_daily_limit: 0,
                max_child_allocated: 150,
                max_api_requests_allocated: 5e3
            }
        },
        computed: {
            currency_symbol() {
                return this.currency_list[this.currency].symbol
            },
            child_account_list() {
                let e = [],
                    t = this.plan.child_account + 1;
                if (parseInt(this.default_child_account) > t && (t = parseInt(this.default_child_account)), t > 0)
                    for (let r = t; r <= this.max_child_allocated; r++) e.push({
                        id: r,
                        text: r
                    });
                return e
            },
            account_price() {
                let e = this.is_pro && this.plan && this.plan.account_price && this.plan.account_price[this.currency] ? this.plan.account_price[this.currency] : 0;
                return parseFloat(e)
            },
            quota_price() {
                let e = this.is_api && this.plan && this.plan.quota_price && this.plan.quota_price[this.currency] ? this.plan.quota_price[this.currency] : 0;
                return parseFloat(e)
            },
            addon_user_amount() {
                let e = 0;
                return this.is_pro && (e = this.account_price > 0 && this.child_account > this.plan.child_account ? (this.child_account - this.plan.child_account) * this.account_price : 0), parseFloat(e)
            },
            addon_quota_amount() {
                let e = 0;
                return this.is_api && (e = this.quota_price > 0 && this.daily_limit > this.plan.daily_limit ? (this.daily_limit - this.plan.daily_limit) * this.quota_price : 0), parseFloat(e)
            },
            addon_amount() {
                return parseFloat(this.addon_user_amount + this.addon_quota_amount)
            },
            sub_total_amount() {
                return parseFloat(this.plan.value[this.currency])
            },
            grand_total_amount() {
                return parseFloat(this.sub_total_amount + this.addon_amount - this.discount_amount)
            },
            due_amount() {
                let e = parseFloat("" !== this.invoice_amount ? this.invoice_amount : this.plan.value[this.currency] + this.addon_amount);
                return parseFloat(e - this.discount_amount)
            },
            is_api() {
                return this.plan && this.plan.code && this.plan.code.includes("api")
            },
            is_pro() {
                return this.plan && this.plan.code && this.plan.code.includes("pro")
            },
            trial_end_date() {
                let e = new Date;
                return e.setDate(e.getDate() + this.free_trial_days), e
            },
            process_url() {
                let e = this.default_process_url;
                e = this.period_yearly ? e.replace("monthly", "yearly") : e.replace("yearly", "monthly");
                let t = new URL(e);
                var r = t.searchParams;
                return r.set("currency", this.currency), t.search = r.toString(), e = t.toString(), e
            },
            is_change_period: () => "period" == window.param("query"),
            is_upgrade: () => "upgrade" == window.param("query"),
            is_addon: () => "addon" == window.param("query"),
            custom_child_account: () => parseInt(window.param("quantity")),
            custom_daily_limit: () => parseInt(window.param("api_requests"))
        },
        watch: {
            child_account: {
                async handler() {},
                deep: !0
            },
            daily_limit: {
                async handler() {},
                deep: !0
            },
            currency: {
                async handler() {
                    this.updateUrlCurrency()
                },
                deep: !0
            },
            period_yearly: {
                async handler(e, t) {
                    let r = e ? this.plan.code.replace("monthly", "yearly") : this.plan.code.replace("yearly", "monthly");
                    this.plan = this.plans[r], this.updateUrlPlan()
                },
                deep: !0
            },
            process: {
                async handler(e, t) {
                    if (e) {
                        let e = "creditcard",
                            t = this.trans.get("Payment is processing...");
                        this.is_trial_user && !this.skip_trial && (e = "arrowrepeat", t = this.trans.get("Subscription is processing..."));
                        let r = this.trans.get("Please do not close the browser tab, reload the page or press the back button as it might interfere with the payment processing.");
                        (this.allow_free_trial || this.is_trial_user && !this.skip_trial) && (r = this.trans.get("Please do not close the browser tab, reload the page or press the back button as it might interfere with the subscription processing.")), this.bsDialogs.create(r, [], t, e).then((e => {}))
                    } else this.bsDialogs.close()
                },
                deep: !0
            },
            name: {
                async handler(e, t) {
                    this.validating_name = !1, this.valid_name = !1, this.checkValidName()
                },
                deep: !0
            },
            email: {
                async handler() {
                    this.validating_email = !1, this.valid_email = !1
                },
                deep: !0
            },
            step: {
                async handler(e) {},
                deep: !0
            },
            selected_addon: {
                async handler(e) {
                    if (void 0 !== e.user_account && 1 == e.user_account) {
                        let e = this.plan.child_account + 1;
                        parseInt(this.default_child_account) > e && (e = parseInt(this.default_child_account)), this.child_account = e, this.custom_child_account > e && (this.child_account = this.custom_child_account)
                    } else if (void 0 !== e.daily_limit && 1 == e.daily_limit) {
                        let e = this.max_api_requests_allocated,
                            t = this.plan.daily_limit + 50;
                        parseInt(this.default_daily_limit) > t && (t = parseInt(this.default_daily_limit)), this.daily_limit = t, this.drag_daily_limit = t, this.custom_daily_limit > t && (this.daily_limit = this.custom_daily_limit, this.drag_daily_limit = this.daily_limit), this.$nextTick((() => {
                            let r = document.getElementById("daily-limit-range-slider");
                            r && ae(r, {
                                min: t,
                                max: e,
                                value: [t, this.daily_limit],
                                thumbsDisabled: [!0, !1],
                                rangeSlideDisabled: !0,
                                onThumbDragEnd: () => {
                                    this.daily_limit = this.drag_daily_limit
                                },
                                onInput: (e, t) => {
                                    t && (this.drag_daily_limit = e[1])
                                }
                            })
                        }))
                    }
                },
                deep: !0
            }
        },
        mounted() {
            this.$nextTick((() => {
                this.bsDialogs = new Dialogs({
                    keyboard: !1
                })
            })), this.routes && this.routes.page_terms_index && this.routes.page_policy_index && (this.term = this.trans.get('By continuing, you acknowledge that you understand and agree to Keyword Tool\'s <a href=":terms_of_service" target="_blank" rel="noopener">Terms of Service</a> and <a href=":privacy_policy" target="_blank" rel="noopener">Privacy Policy</a>.', {
                terms_of_service: this.routes.page_terms_index,
                privacy_policy: this.routes.page_policy_index
            })), 2 == this.payment_source ? "" != this.user_id && (this.step = 3) : "" != this.user_id && ("" == this.subscription_id && this.$isMobile() ? this.step = 3 : this.account_price > 0 || this.quota_price > 0 ? this.step = 2 : this.step = 3), (this.is_trial_user || this.skip_trial || this.is_change_period) && (this.step = 3), (this.custom_child_account > 0 || this.addon_user_amount > 0) && (this.selected_addon.user_account = !0), (this.custom_daily_limit > 0 || this.addon_quota_amount > 0) && (this.selected_addon.daily_limit = !0), this.plan && this.plan.code && this.plan.code.includes("monthly") ? this.period_yearly = !1 : this.period_yearly = !0
        },
        methods: {
            back() {
                if (2 == this.payment_source) return "" != this.user_id ? this.main() : (this.step = 1, !0);
                if (this.is_trial_user || this.skip_trial || this.is_change_period) return this.main();
                if (2 == this.step) {
                    if ("" == this.user_id) return this.step = 1, !0
                } else if (3 == this.step) {
                    if ("" == this.subscription_id && this.$isMobile()) return "" == this.user_id ? (this.step = 1, !0) : this.main();
                    if (this.account_price > 0 || this.quota_price > 0) return this.step = 2, !0;
                    if ("" == this.user_id) return this.step = 1, !0
                }
                return this.main()
            },
            main() {
                return this.loading = !0, window.location = this.main_url
            },
            checkValidName() {
                this.name.length > 0 ? this.valid_name = !0 : this.valid_name = !1, this.validating_name = !0
            },
            async checkEmailExist() {
                this.loading = !0;
                try {
                    var e = {
                            email: this.email
                        },
                        t = await axios.post(this.check_email_url, e, {
                            headers: {
                                "Content-Type": "application/json"
                            }
                        });
                    t && t.data && !0 === t.data.email_valid ? this.valid_email = !0 : this.valid_email = !1, t && t.data && !1 === t.data.email_exist ? this.email_exist = !1 : this.email_exist = !0
                } catch (r) {
                    this.email_exist = !1
                }
                this.loading = !1
            },
            async checkValidEmail() {
                this.email_exist = !1;
                /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(this.email) ? this.valid_email = !0 : this.valid_email = !1, this.validating_email = !0
            },
            validate() {
                return 1 == this.step ? this.validateStep1() : 2 == this.step ? this.validateStep2() : 3 == this.step && this.validateStep3()
            },
            validateStep1() {
                return this.validating_name || this.checkValidName(), this.validating_email || this.checkValidEmail(), this.valid_name && this.valid_email
            },
            validateStep2() {
                return !(this.selected_addon.child_account && this.default_child_account > this.child_account) && (!(this.selected_addon.daily_limit && this.default_daily_limit > this.daily_limit) && (this.validateStep1() && !this.email_exist))
            },
            validateStep3() {
                return this.validateStep2() && !this.has_error
            },
            async step1() {
                1 == this.validate() && (await this.checkEmailExist(), !this.email_exist && this.valid_email && (2 == this.payment_source || "" == this.subscription_id && this.$isMobile() ? this.step = 3 : this.account_price > 0 || this.quota_price > 0 ? this.step = 2 : this.step = 3))
            },
            async step2() {
                1 == this.validate() && (this.step = 3)
            },
            async step3() {
                1 == this.validate() && this.$refs.form.checkout()
            },
            hideError() {
                this.error = ""
            },
            showError(e = "") {
                this.error = e && "" != e ? e : this.trans.get("Unfortunately, we failed to process your payment just now. Please try again."), this.$nextTick((() => {
                    var e = document.getElementById("error-alert");
                    e && this.$root.scrollTo(e)
                }))
            },
            processSuccess(e) {
                return e && e.data && e.data.redirect ? e.data.open ? (this.loading = !1, this.process = !1, window.open(e.data.redirect)) : (this.loading = !0, this.process = !1, window.location = e.data.redirect) : e && e.data && e.data.redirect_with_message ? e.data.redirect_with_message.message && "" != e.data.redirect_with_message.message ? (this.loading = !1, this.process = !1, this.$nextTick((() => {
                    bsDialogs.create(e.data.redirect_with_message.message, [{
                        classes: "btn-success mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "success").then((t => {
                        "true" === t && (this.loading = !0, window.location = e.data.redirect_with_message.redirect)
                    }))
                })), !0) : (this.loading = !0, this.process = !1, window.location = e.data.redirect_with_message.redirect) : e && e.data && e.data.success ? (this.loading = !1, this.process = !1, this.success = e.data.success, void this.$nextTick((() => {
                    var e = document.getElementById("success-alert");
                    e && this.$root.scrollTo(e)
                }))) : (this.loading = !0, this.process = !1, window.location.reload())
            },
            processDueAmount(e) {
                this.invoice_amount = parseFloat(e)
            },
            processSubscriptionNote(e) {
                this.subscription_note = e
            },
            updateUrlPlan() {
                var e = new URL(window.location.href),
                    t = e.searchParams;
                t.set("plan", this.plan.code), e.search = t.toString();
                var r = e.toString();
                window.history.pushState(null, null, r)
            },
            updateUrlCurrency() {
                var e = new URL(window.location.href),
                    t = e.searchParams;
                t.set("currency", this.currency), e.search = t.toString();
                var r = e.toString();
                window.history.pushState(null, null, r)
            },
            updateUrlQuantity() {
                var e = new URL(window.location.href),
                    t = e.searchParams;
                this.is_api && this.quota_price > 0 ? t.set("api_requests", this.daily_limit) : this.is_pro && this.account_price > 0 ? t.set("quantity", this.child_account) : (t.delete("api_requests"), t.delete("quantity")), e.search = t.toString();
                var r = e.toString();
                window.history.pushState(null, null, r)
            },
            toggleAddon(e) {
                if (this.selected_addon[e]) switch (delete this.selected_addon[e], e) {
                    case "user_account":
                        this.child_account = this.default_child_account;
                        break;
                    case "daily_limit":
                        this.daily_limit = this.default_daily_limit
                } else this.selected_addon[e] = !0
            }
        }
    },
    Wa = S("i", {
        class: "bi bi-arrow-left me-1"
    }, null, -1),
    za = {
        class: "my-4 checkout-form"
    },
    Ya = {
        class: "row"
    },
    Ga = {
        class: "col-12 col-md-8"
    },
    Xa = {
        key: 0,
        class: "alert alert-warning",
        role: "alert"
    },
    Qa = ["innerHTML"],
    Za = {
        key: 1,
        class: "alert alert-warning",
        role: "alert"
    },
    eo = ["innerHTML"],
    to = {
        key: 0
    },
    ro = {
        class: "page-title mb-4"
    },
    so = {
        key: 1,
        class: "page-title mb-4"
    },
    ao = {
        key: 1
    },
    oo = {
        key: 0,
        class: "text-center"
    },
    io = {
        class: "page-title mb-4"
    },
    no = {
        class: "page-title mb-4"
    },
    lo = {
        key: 1,
        class: "text-center"
    },
    co = {
        class: "page-title mb-4"
    },
    _o = {
        class: "page-title mb-4"
    },
    uo = {
        class: "page-title mb-4"
    },
    mo = {
        key: 2
    },
    ho = {
        class: "page-title mb-4"
    },
    po = {
        class: "page-title mb-4"
    },
    go = {
        key: 0,
        class: "alert alert-warning",
        role: "alert"
    },
    yo = ["innerHTML"],
    fo = {
        class: "page-title mb-4"
    },
    wo = {
        key: 0
    },
    bo = {
        class: "first-step-section"
    },
    vo = {
        class: "mb-3"
    },
    ko = {
        class: "form-label",
        for: "name"
    },
    xo = S("span", {
        class: "text-danger"
    }, "*", -1),
    Co = ["placeholder", "disabled"],
    So = {
        key: 0,
        class: "invalid-feedback"
    },
    To = {
        class: "mb-4"
    },
    Fo = {
        class: "form-label",
        for: "email"
    },
    qo = S("span", {
        class: "text-danger"
    }, "*", -1),
    Eo = ["placeholder", "disabled"],
    Uo = {
        key: 0,
        class: "invalid-feedback"
    },
    Mo = {
        key: 1,
        class: "invalid-feedback"
    },
    Ao = ["innerHTML"],
    Po = ["disabled"],
    Lo = ["innerHTML"],
    Bo = {
        class: "second-step-section"
    },
    $o = {
        key: 0,
        class: "card child-account-addon"
    },
    Do = {
        class: "card-body"
    },
    jo = {
        class: "row"
    },
    Oo = {
        class: "col"
    },
    Vo = {
        class: "row"
    },
    Ho = {
        class: "col-12 col-md-8"
    },
    Io = ["innerHTML"],
    No = {
        class: "col-12 col-md-4"
    },
    Ro = ["disabled"],
    Ko = ["disabled"],
    Jo = S("div", {
        class: "col-12"
    }, [S("hr", {
        class: "mt-4"
    })], -1),
    Wo = {
        class: "col-12 col-md-8"
    },
    zo = {
        class: "row mb-0"
    },
    Yo = {
        for: "child_account",
        class: "col-sm-auto col-form-label form-label"
    },
    Go = {
        class: "col-sm-3"
    },
    Xo = {
        key: 1,
        class: "card daily-limit-addon"
    },
    Qo = {
        class: "card-body"
    },
    Zo = {
        class: "row"
    },
    ei = {
        class: "col"
    },
    ti = {
        class: "row"
    },
    ri = {
        class: "col-12 col-md-8"
    },
    si = ["innerHTML"],
    ai = {
        class: "col-12 col-md-4"
    },
    oi = ["disabled"],
    ii = ["disabled"],
    ni = S("div", {
        class: "col-12"
    }, [S("hr", {
        class: "mt-4"
    })], -1),
    li = {
        class: "col-12 col-md-8 mb-3"
    },
    ci = {
        class: "form-label",
        for: "daily_limit"
    },
    _i = {
        class: "col-12 col-md-4 mb-3"
    },
    ui = ["value"],
    di = S("div", {
        class: "col-12 mb-3"
    }, [S("div", {
        id: "daily-limit-range-slider",
        class: "kt-range-slider"
    })], -1),
    mi = {
        class: "third-step-section"
    },
    hi = {
        key: 0,
        class: "alert alert-danger my-3",
        role: "alert",
        id: "error-alert"
    },
    pi = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-exclamation-circle-fill me-2"
    })], -1),
    gi = ["innerHTML"],
    yi = {
        key: 1,
        class: "alert alert-success my-3",
        role: "alert",
        id: "success-alert"
    },
    fi = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-check-circle-fill me-1"
    })], -1),
    wi = ["innerHTML"],
    bi = {
        class: "row"
    },
    vi = {
        class: "col-12"
    },
    ki = {
        class: "mb-3"
    },
    xi = {
        key: 0
    },
    Ci = {
        class: "form-label"
    },
    Si = S("span", {
        class: "text-danger"
    }, "*", -1),
    Ti = {
        class: "d-flex justify-content-between mb-3"
    },
    Fi = {
        class: "w-50 me-2"
    },
    qi = ["disabled"],
    Ei = ["src"],
    Ui = ["src"],
    Mi = S("br", null, null, -1),
    Ai = {
        class: "w-50 ms-2"
    },
    Pi = ["disabled"],
    Li = ["src"],
    Bi = ["src"],
    $i = S("br", null, null, -1),
    Di = S("br", null, null, -1),
    ji = {
        key: 3,
        class: "row my-4"
    },
    Oi = {
        class: "col"
    },
    Vi = ["disabled"],
    Hi = ["disabled"],
    Ii = {
        key: 4,
        class: "row my-4"
    },
    Ni = {
        class: "col"
    },
    Ri = ["disabled"],
    Ki = {
        class: "col-12 col-md-4"
    },
    Ji = {
        key: 0
    },
    Wi = {
        key: 0,
        class: "card bg-light border-0 mb-4"
    },
    zi = {
        class: "card-header bg-light d-flex align-items-center lh-base border-0 pb-0 mt-2"
    },
    Yi = {
        class: "card-body"
    },
    Gi = {
        class: "row"
    },
    Xi = S("dt", {
        class: "col-1"
    }, [S("i", {
        class: "bi bi-check-lg text-success"
    })], -1),
    Qi = {
        class: "col-10"
    },
    Zi = S("dt", {
        class: "col-1"
    }, [S("i", {
        class: "bi bi-check-lg text-success"
    })], -1),
    en = {
        class: "col-10"
    },
    tn = S("dt", {
        class: "col-1"
    }, [S("i", {
        class: "bi bi-check-lg text-success"
    })], -1),
    rn = {
        class: "col-10"
    },
    sn = S("dt", {
        class: "col-1"
    }, [S("i", {
        class: "bi bi-check-lg text-success"
    })], -1),
    an = {
        class: "col-10"
    },
    on = S("dt", {
        class: "col-1"
    }, [S("i", {
        class: "bi bi-check-lg text-success"
    })], -1),
    nn = {
        class: "col-10"
    },
    ln = S("dt", {
        class: "col-1"
    }, [S("i", {
        class: "bi bi-check-lg text-success"
    })], -1),
    cn = {
        class: "col-10"
    },
    _n = {
        key: 1,
        class: "content-quote-1 blockquote mt-3 mt-lg-4 position-relative ps-5 clearfix"
    },
    un = S("span", {
        class: "position-absolute lh-1 top-0 start-0 display-1 ms-2 text-warning"
    }, "“", -1),
    dn = S("strong", null, "KeywordTool.io", -1),
    mn = S("strong", null, "identify SEO growth opportunities", -1),
    hn = S("footer", {
        class: "blockquote-footer mt-1"
    }, "Luis Rodriguez - Global Growth SEO Lead - Uber", -1),
    pn = {
        key: 1
    },
    gn = {
        class: "card bg-light border-0 mb-4"
    },
    yn = {
        class: "card-header bg-light d-flex align-items-center lh-base border-0 pb-0 mt-2"
    },
    fn = {
        class: "card-body"
    },
    wn = {
        key: 0,
        class: "mb-1 text-end"
    },
    bn = {
        class: "badge bg-success text-uppercase"
    },
    vn = S("hr", null, null, -1),
    kn = {
        class: "d-flex justify-content-between"
    },
    xn = {
        class: "text-muted"
    },
    Cn = S("hr", null, null, -1),
    Sn = {
        class: "d-flex justify-content-between"
    },
    Tn = S("hr", null, null, -1),
    Fn = {
        class: "d-flex justify-content-between"
    },
    qn = S("hr", null, null, -1),
    En = {
        class: "d-flex justify-content-between"
    },
    Un = S("hr", null, null, -1),
    Mn = {
        class: "d-flex justify-content-between"
    },
    An = {
        class: "d-flex justify-content-between fw-bold"
    },
    Pn = {
        key: 0,
        class: "d-flex justify-content-between fw-bold"
    },
    Ln = {
        class: "my-0"
    },
    Bn = {
        class: "my-0"
    },
    $n = {
        key: 1,
        class: "d-flex justify-content-between"
    },
    Dn = {
        class: "fw-bold my-0 me-1"
    },
    jn = {
        class: "fw-bold my-0"
    },
    On = {
        key: 2,
        class: "d-flex justify-content-between"
    },
    Vn = {
        class: "fw-bold my-0"
    },
    Hn = {
        class: "fw-bold my-0"
    },
    In = {
        key: 5,
        class: "my-4"
    },
    Nn = {
        key: 0
    },
    Rn = ["innerHTML"],
    Kn = ["data-bs-content"],
    Jn = {
        key: 1
    },
    Wn = ["innerHTML"];
const zn = Ue(Ja, [
        ["render", function(e, t, r, s, a, o) {
            var i, n, l, c, _, u;
            const d = k("loading-section"),
                m = k("tom-select"),
                h = k("braintree-payment"),
                p = k("stripe-payment"),
                f = k("vue-toggle"),
                C = k("select-currency");
            return b(), g("div", null, [a.process ? T("", !0) : (b(), x(d, {
                key: 0,
                loading: a.loading
            }, null, 8, ["loading"])), S("button", {
                class: "btn btn-light",
                onClick: t[0] || (t[0] = (...e) => o.back && o.back(...e))
            }, [Wa, A(" " + v(e.trans.get("Back")), 1)]), S("div", za, [S("div", Ya, [S("div", Ga, ["" == a.subscription_note || !o.is_upgrade && !o.is_addon || 0 != o.is_change_period || r.is_trial_user ? "" == a.subscription_note || r.allow_subscription ? T("", !0) : (b(), g("div", Za, [S("div", {
                innerHTML: a.subscription_note
            }, null, 8, eo)])) : (b(), g("div", Xa, [S("div", {
                innerHTML: a.subscription_note
            }, null, 8, Qa)])), r.allow_subscription ? (b(), g(y, {
                key: 2
            }, [1 == a.step ? (b(), g("div", to, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [S("h4", ro, v(e.trans.get("Try :plan For Free", {
                plan: a.plan.plan_shortname
            })), 1), S("p", null, v(e.trans.get("Start your free trial now, switch between plans anytime.")), 1)], 64)) : (b(), g("h4", so, v(e.trans.get("Enter Your Keyword Tool Account Details")), 1))])) : 2 == a.step ? (b(), g("div", ao, [o.account_price > 0 ? (b(), g("div", oo, [S("h4", io, v(e.trans.get("Have More Than :child_account People On Your Team?", {
                child_account: a.plan.child_account
            })), 1), S("h5", no, v(e.trans.get("Add More Users To Your Keyword Tool Subscription Now")), 1)])) : o.quota_price > 0 ? (b(), g("div", lo, [S("h4", co, v(e.trans.get("Need Over :daily_limit API Requests Per 24 Hours?", {
                daily_limit: a.plan.daily_limit
            })), 1), S("h5", _o, v(e.trans.get("Add More API Requests To Your Keyword Tool Subscription Now")), 1)])) : (b(), g(y, {
                key: 2
            }, [S("h4", uo, v(e.trans.get("Add-Ons")), 1), S("p", null, v(e.trans.get("Would you like to add more features?")), 1)], 64))])) : 3 == a.step ? (b(), g("div", mo, [r.skip_trial ? (b(), g(y, {
                key: 0
            }, [S("h4", ho, v(e.trans.get("Subscribe To :plan", {
                plan: a.plan.plan_shortname
            })), 1), S("p", null, v(e.trans.get("We are happy to hear that you are ready to upgrade!")), 1)], 64)) : T("", !0), o.is_change_period ? (b(), g(y, {
                key: 1
            }, [S("h4", po, v(e.trans.get("Adjust Billing Cycle")), 1), "" != a.subscription_note ? (b(), g("div", go, [S("div", {
                innerHTML: a.subscription_note
            }, null, 8, yo)])) : T("", !0)], 64)) : (b(), g(y, {
                key: 2
            }, [S("h4", fo, v(e.trans.get("Complete Subscription")), 1), r.allow_free_trial ? (b(), g("p", wo, v(e.trans.get("We won't charge anything now and will only bill you after your free trial ends.")), 1)) : T("", !0)], 64))])) : T("", !0), F(S("div", bo, [S("form", {
                onSubmit: t[3] || (t[3] = P((e => o.step1()), ["prevent"]))
            }, [S("div", vo, [S("label", ko, [A(v(e.trans.get("Full Name")) + " ", 1), xo]), F(S("input", {
                type: "text",
                id: "name",
                "onUpdate:modelValue": t[1] || (t[1] = e => a.name = e),
                class: w(["checkout-form-name-value form-control", [a.validating_name ? [a.valid_name ? "is-valid" : "is-invalid"] : ""]]),
                name: "name",
                placeholder: e.trans.get("e.g. John"),
                required: "",
                autofocus: "",
                disabled: "" != r.user_id
            }, null, 10, Co), [
                [U, a.name, void 0, {
                    trim: !0
                }]
            ]), 0 == a.valid_name ? (b(), g("div", So, v(e.trans.get("Full Name is required.")), 1)) : T("", !0)]), S("div", To, [S("label", Fo, [A(v(e.trans.get("Email Address")) + " ", 1), qo]), F(S("input", {
                type: "email",
                id: "email",
                "onUpdate:modelValue": t[2] || (t[2] = e => a.email = e),
                class: w(["checkout-form-email-value form-control", [a.validating_email ? [a.valid_email && !a.email_exist ? "is-valid" : "is-invalid"] : ""]]),
                name: "email",
                placeholder: e.trans.get("e.g. your@email.com"),
                required: "",
                disabled: "" != r.user_id
            }, null, 10, Eo), [
                [U, a.email, void 0, {
                    trim: !0
                }]
            ]), 0 == a.valid_email ? (b(), g("div", Uo, [a.email.length > 0 ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get('Sorry, it appears ":email" is not a valid email address.', {
                email: a.email
            })), 1)], 64)) : (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Email Address is required.")), 1)], 64))])) : 1 == a.email_exist ? (b(), g("div", Mo, [S("span", {
                innerHTML: e.trans.get("It looks like you already have a Keyword Tool Account. Please log in <a href=':loginUrl'>here</a>.", {
                    loginUrl: "/user/login"
                })
            }, null, 8, Ao)])) : T("", !0)]), S("button", {
                disabled: a.loading || !r.allow_subscription,
                type: "submit",
                class: "btn btn-block btn-primary btn-lg continue-email-button"
            }, v(e.trans.get("Create Keyword Tool Account")), 9, Po), S("small", {
                innerHTML: a.term,
                class: "d-block mt-3 text-muted"
            }, null, 8, Lo)], 32)], 512), [
                [B, 1 == a.step]
            ]), F(S("div", Bo, [o.account_price > 0 ? (b(), g("div", $o, [S("div", Do, [S("div", jo, [S("div", Oo, [S("h5", null, v(e.trans.get("Additional User Accounts")), 1)])]), S("div", Vo, [S("div", Ho, [S("p", {
                innerHTML: e.trans.get(":plan comes with <strong>:count</strong> user accounts. Select this add-on if you need more.", {
                    plan: a.plan.plan_shortname,
                    count: a.plan.child_account
                })
            }, null, 8, Io)]), S("div", No, [(o.is_addon || o.is_upgrade) && r.default_child_account > a.plan.child_account && r.allow_subscription ? T("", !0) : (b(), g(y, {
                key: 0
            }, [a.selected_addon.user_account ? (b(), g("button", {
                key: 0,
                disabled: (o.is_addon || o.is_upgrade) && r.default_child_account > a.plan.child_account || a.loading || !r.allow_subscription,
                type: "button",
                onClick: t[4] || (t[4] = e => o.toggleAddon("user_account")),
                class: "btn btn-danger btn-block"
            }, v(e.trans.get("Remove")), 9, Ro)) : (b(), g("button", {
                key: 1,
                disabled: a.loading || !r.allow_subscription,
                type: "button",
                onClick: t[5] || (t[5] = e => o.toggleAddon("user_account")),
                class: "btn btn-primary btn-block"
            }, v(e.trans.get("Add")), 9, Ko))], 64))]), a.selected_addon.user_account ? (b(), g(y, {
                key: 0
            }, [Jo, S("div", Wo, [S("div", zo, [S("label", Yo, v(e.trans.get("Total Number Of User Accounts")), 1), S("div", Go, [E(m, {
                disabled: a.loading || !r.allow_subscription,
                options: o.child_account_list,
                settings: {},
                class: "child-account-dropdown child-account-value",
                id: "child_account",
                name: "child_account",
                "onUpdate:modelValue": t[6] || (t[6] = e => a.child_account = e),
                "model-value": a.child_account
            }, null, 8, ["disabled", "options", "model-value"])])])])], 64)) : T("", !0)])])])) : o.quota_price > 0 ? (b(), g("div", Xo, [S("div", Qo, [S("div", Zo, [S("div", ei, [S("h5", null, v(e.trans.get("Additional API Requests")), 1)])]), S("div", ti, [S("div", ri, [S("p", {
                innerHTML: e.trans.get(":plan offers <strong>:count</strong> API requests every 24 hours. Select this add-on if you need more.", {
                    plan: a.plan.plan_shortname,
                    count: a.plan.daily_limit
                })
            }, null, 8, si)]), S("div", ai, [(o.is_addon || o.is_upgrade) && r.default_daily_limit > a.plan.daily_limit && r.allow_subscription ? T("", !0) : (b(), g(y, {
                key: 0
            }, [a.selected_addon.daily_limit ? (b(), g("button", {
                key: 0,
                disabled: o.is_addon || o.is_upgrade || r.default_daily_limit > a.plan.daily_limit || a.loading || !r.allow_subscription,
                type: "button",
                onClick: t[7] || (t[7] = e => o.toggleAddon("daily_limit")),
                class: "btn btn-danger btn-block"
            }, v(e.trans.get("Remove")), 9, oi)) : (b(), g("button", {
                key: 1,
                disabled: a.loading || !r.allow_subscription,
                type: "button",
                onClick: t[8] || (t[8] = e => o.toggleAddon("daily_limit")),
                class: "btn btn-primary btn-block"
            }, v(e.trans.get("Add")), 9, ii))], 64))]), a.selected_addon.daily_limit ? (b(), g(y, {
                key: 0
            }, [ni, S("div", li, [S("label", ci, v(e.trans.get("Total Number Of API Requests Per 24 hours")), 1)]), S("div", _i, [S("input", {
                disabled: "",
                type: "text",
                name: "daily_limit",
                id: "daily_limit",
                value: a.drag_daily_limit,
                class: "form-control"
            }, null, 8, ui)]), di], 64)) : T("", !0)])])])) : T("", !0)], 512), [
                [B, 2 == a.step]
            ]), F(S("div", mi, ["" != a.error ? (b(), g("div", hi, [S("table", null, [S("tbody", null, [S("tr", null, [pi, S("td", {
                innerHTML: a.error
            }, null, 8, gi)])])])])) : "" != a.success ? (b(), g("div", yi, [S("table", null, [S("tbody", null, [S("tr", null, [fi, S("td", {
                innerHTML: a.success
            }, null, 8, wi)])])])])) : T("", !0), S("div", bi, [S("div", vi, [S("div", ki, [!r.allow_subscription || "" != r.customer_id && "" != (null == (i = r.billing_card) ? void 0 : i.number) ? T("", !0) : F((b(), g("div", xi, [S("label", Ci, [A(v(e.trans.get("Select Card Type")) + " ", 1), Si]), S("div", Ti, [S("div", Fi, [S("button", {
                disabled: a.loading || !r.allow_subscription || "" != r.customer_id && "" != (null == (n = r.billing_card) ? void 0 : n.number),
                type: "button",
                onClick: t[9] || (t[9] = e => {
                    a.payment_method = "visa_master", a.payment_ready = !1
                }),
                class: w(["btn btn-block visa-master-option", ["visa_master" == a.payment_method ? "btn-primary" : "btn-outline-primary"]])
            }, [S("img", {
                class: "checkout-form-payment-method-visa border border-white me-1",
                src: "/images/payment-method-visa.png",
                height: "21",
                alt: "Visa",
                title: "Visa"
            }, null, 8, Ei), S("img", {
                class: "checkout-form-payment-method-mastercard border border-white me-1",
                src: "/images/payment-method-mastercard.png",
                height: "21",
                alt: "MasterCard",
                title: "MasterCard"
            }, null, 8, Ui), Mi, S("small", null, v(e.trans.get("Visa or Mastercard")), 1)], 10, qi)]), S("div", Ai, [S("button", {
                disabled: a.loading || !r.allow_subscription || "" != r.customer_id && "" != (null == (l = r.billing_card) ? void 0 : l.number),
                type: "button",
                onClick: t[10] || (t[10] = e => {
                    a.payment_method = "amex", a.payment_ready = !1
                }),
                class: w(["btn btn-block amex-option", ["amex" == a.payment_method ? "btn-primary" : "btn-outline-primary"]])
            }, [S("img", {
                class: "checkout-form-payment-method-amex border border-white me-1",
                src: "/images/payment-method-amex.png",
                height: "21",
                alt: "American Express",
                title: "American Express"
            }, null, 8, Li), S("img", {
                class: "checkout-form-payment-method-jcb border border-white me-1",
                src: "/images/payment-method-jcb.png",
                height: "21",
                alt: "Japan Credit Bureau",
                title: "Japan Credit Bureau"
            }, null, 8, Bi), $i, S("small", null, v(e.trans.get("American Express or JCB")), 1)], 10, Pi)])])], 512)), [
                [B, 2 != r.payment_source && ("" == r.customer_id || "" == (null == (c = r.billing_card) ? void 0 : c.number) || !o.is_change_period)]
            ]), "" != r.customer_id && 2 == r.payment_source ? (b(), x(h, {
                key: 1,
                dusk: "payment-method",
                ref: "form",
                onLoading: t[11] || (t[11] = e => a.loading = e),
                onProcess: t[12] || (t[12] = e => a.process = e),
                onHasError: t[13] || (t[13] = e => a.has_error = e),
                onPaymentReady: t[14] || (t[14] = e => a.payment_ready = e),
                onHideError: o.hideError,
                onShowError: o.showError,
                onProcessSuccess: o.processSuccess,
                is_subscribe: !0,
                plan: a.plan,
                payment_method: a.payment_method,
                currency: a.currency,
                billing_id: r.billing_id,
                default_payment_source: 2,
                customer_id: r.customer_id,
                billing_card: r.billing_card,
                name: a.name,
                email: a.email,
                token_url: a.token_url,
                due_amount_url: a.due_amount_url,
                process_url: o.process_url,
                routes: r.routes,
                allow_subscription: r.allow_subscription,
                due_amount: o.due_amount,
                child_account: a.child_account,
                daily_limit: a.daily_limit,
                subscription_id: r.subscription_id,
                free_trial: r.allow_free_trial,
                skip_trial: r.skip_trial
            }, null, 8, ["onHideError", "onShowError", "onProcessSuccess", "plan", "payment_method", "currency", "billing_id", "customer_id", "billing_card", "name", "email", "token_url", "due_amount_url", "process_url", "routes", "allow_subscription", "due_amount", "child_account", "daily_limit", "subscription_id", "free_trial", "skip_trial"])) : "amex" == a.payment_method ? (b(), x(p, {
                key: 2,
                dusk: "payment-method",
                ref: "form",
                onLoading: t[15] || (t[15] = e => a.loading = e),
                onProcess: t[16] || (t[16] = e => a.process = e),
                onHasError: t[17] || (t[17] = e => a.has_error = e),
                onPaymentReady: t[18] || (t[18] = e => a.payment_ready = e),
                onHideError: o.hideError,
                onShowError: o.showError,
                onProcessSuccess: o.processSuccess,
                onProcessDueAmount: o.processDueAmount,
                onProcessSubscriptionNote: o.processSubscriptionNote,
                is_subscribe: !0,
                plan: a.plan,
                payment_method: a.payment_method,
                currency: a.currency,
                billing_id: r.billing_id,
                default_payment_source: 4,
                customer_id: r.customer_id,
                billing_card: r.billing_card,
                name: a.name,
                email: a.email,
                token_url: a.token_url,
                due_amount_url: a.due_amount_url,
                process_url: o.process_url,
                routes: r.routes,
                allow_subscription: r.allow_subscription,
                is_captcha: r.is_captcha,
                due_amount: o.due_amount,
                child_account: a.child_account,
                daily_limit: a.daily_limit,
                subscription_id: r.subscription_id,
                free_trial: r.allow_free_trial,
                skip_trial: r.skip_trial,
                hide_form: !("" == r.customer_id || "" == (null == (_ = r.billing_card) ? void 0 : _.number) || !o.is_change_period)
            }, null, 8, ["onHideError", "onShowError", "onProcessSuccess", "onProcessDueAmount", "onProcessSubscriptionNote", "plan", "payment_method", "currency", "billing_id", "customer_id", "billing_card", "name", "email", "token_url", "due_amount_url", "process_url", "routes", "allow_subscription", "is_captcha", "due_amount", "child_account", "daily_limit", "subscription_id", "free_trial", "skip_trial", "hide_form"])) : (b(), x(p, {
                key: 3,
                dusk: "payment-method",
                ref: "form",
                onLoading: t[19] || (t[19] = e => a.loading = e),
                onProcess: t[20] || (t[20] = e => a.process = e),
                onHasError: t[21] || (t[21] = e => a.has_error = e),
                onPaymentReady: t[22] || (t[22] = e => a.payment_ready = e),
                onHideError: o.hideError,
                onShowError: o.showError,
                onProcessSuccess: o.processSuccess,
                onProcessDueAmount: o.processDueAmount,
                onProcessSubscriptionNote: o.processSubscriptionNote,
                is_subscribe: !0,
                plan: a.plan,
                payment_method: a.payment_method,
                currency: a.currency,
                billing_id: r.billing_id,
                default_payment_source: r.payment_source,
                customer_id: r.customer_id,
                billing_card: r.billing_card,
                name: a.name,
                email: a.email,
                token_url: a.token_url,
                due_amount_url: a.due_amount_url,
                process_url: o.process_url,
                routes: r.routes,
                allow_subscription: r.allow_subscription,
                is_captcha: r.is_captcha,
                due_amount: o.due_amount,
                child_account: a.child_account,
                daily_limit: a.daily_limit,
                subscription_id: r.subscription_id,
                free_trial: r.allow_free_trial,
                skip_trial: r.skip_trial,
                hide_form: !("" == r.customer_id || "" == (null == (u = r.billing_card) ? void 0 : u.number) || !o.is_change_period)
            }, null, 8, ["onHideError", "onShowError", "onProcessSuccess", "onProcessDueAmount", "onProcessSubscriptionNote", "plan", "payment_method", "currency", "billing_id", "default_payment_source", "customer_id", "billing_card", "name", "email", "token_url", "due_amount_url", "process_url", "routes", "allow_subscription", "is_captcha", "due_amount", "child_account", "daily_limit", "subscription_id", "free_trial", "skip_trial", "hide_form"]))])])])], 512), [
                [B, 3 == a.step]
            ]), Di, 2 == a.step ? (b(), g("div", ji, [S("div", Oi, [o.is_pro ? (b(), g("button", {
                key: 0,
                disabled: a.loading || 0 == o.validateStep2() || !r.allow_subscription || r.default_child_account == a.max_child_allocated || o.is_addon && r.default_child_account == a.child_account,
                type: "button",
                onClick: t[23] || (t[23] = e => o.step2()),
                class: "btn btn-block btn-primary btn-lg continue-payment-button"
            }, v(e.trans.get("Continue To Payment")), 9, Vi)) : o.is_api ? (b(), g("button", {
                key: 1,
                disabled: a.loading || 0 == o.validateStep2() || !r.allow_subscription || r.default_daily_limit == a.max_api_requests_allocated || o.is_addon && r.default_daily_limit == a.daily_limit,
                type: "button",
                onClick: t[24] || (t[24] = e => o.step2()),
                class: "btn btn-block btn-primary btn-lg continue-payment-button"
            }, v(e.trans.get("Continue To Payment")), 9, Hi)) : T("", !0)])])) : 3 == a.step ? (b(), g("div", Ii, [S("div", Ni, [S("button", {
                disabled: "" == r.customer_id && 0 == a.payment_ready || a.loading || 0 == o.validateStep3() || !r.allow_subscription,
                type: "button",
                onClick: t[25] || (t[25] = e => o.step3()),
                class: "btn btn-block btn-primary btn-lg subscription-button"
            }, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Start My :days Days Free Trial", {
                days: r.free_trial_days
            })), 1)], 64)) : o.is_change_period || o.is_upgrade || o.is_addon || r.is_trial_user && !r.skip_trial ? (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Update Subscription")), 1)], 64)) : (b(), g(y, {
                key: 2
            }, [A(v(e.trans.get("Start My Subscription")), 1)], 64))], 8, Ri)])])) : T("", !0)], 64)) : T("", !0)]), S("div", Ki, [r.allow_subscription ? (b(), g(y, {
                key: 0
            }, [1 == a.step ? (b(), g("div", Ji, [r.allow_free_trial ? (b(), g("div", Wi, [S("h6", zi, v(e.trans.get("What You Will Get in 7-Days Trial")), 1), S("div", Yi, [S("dl", Gi, [Xi, S("dd", Qi, v(e.trans.get("Access to all our features")), 1), Zi, S("dd", en, v(e.trans.get("Data for every city, country, and language supported by Google, Bing, and search engines.")), 1), tn, S("dd", rn, v(e.trans.get("Get precise monthly search volume data (and not ranges)")), 1), sn, S("dd", an, v(e.trans.get("Check Search Volume in bulk for any keyword list")), 1), on, S("dd", nn, v(e.trans.get("Switch between plans anytime")), 1), ln, S("dd", cn, v(e.trans.get("Limited keyword searches per day")), 1)])])])) : (b(), g("blockquote", _n, [un, dn, A(" has enabled us to quickly "), mn, A(", do keyword research at scale, and gather data at different geo levels. "), hn]))])) : 2 == a.step || 3 == a.step ? (b(), g("div", pn, [S("div", gn, [S("h5", yn, v(e.trans.get("Billing Summary")), 1), S("div", fn, [S("div", null, [E(f, {
                class: "justify-content-end",
                disabled: "" != r.customer_id && 2 == r.payment_source || !r.allow_subscription || o.is_change_period,
                "left-title": e.trans.get("Monthly Billing"),
                "right-title": e.trans.get("Annual Billing"),
                name: "period_yearly",
                toggled: a.period_yearly,
                onToggle: t[26] || (t[26] = e => a.period_yearly = e)
            }, null, 8, ["disabled", "left-title", "right-title", "toggled"])]), a.period_yearly ? (b(), g("div", wn, [S("span", bn, v(e.trans.get("Save :percentage", {
                percentage: "20%"
            })), 1)])) : T("", !0), "" == r.user_id && r.allow_subscription ? (b(), x(C, {
                key: 1,
                class: "mt-3",
                disabled: "" != r.user_id || !r.allow_subscription,
                onSelect: t[27] || (t[27] = e => a.currency = e),
                default_currency: a.currency,
                label: e.trans.get("Billing Currency")
            }, null, 8, ["disabled", "default_currency", "label"])) : T("", !0), vn, S("div", null, [S("div", kn, [S("div", null, v(a.plan.plan_shortname), 1), S("div", null, v(e.$filters.digit(a.plan.price[a.currency], o.currency_symbol)), 1)]), S("small", xn, v(a.plan.price_term[a.currency]), 1)]), o.addon_user_amount > 0 ? (b(), g(y, {
                key: 2
            }, [Cn, S("div", Sn, [S("div", null, v(e.trans.get("Additional User Accounts")), 1), S("div", null, v(e.$filters.digit(o.addon_user_amount, o.currency_symbol)), 1)])], 64)) : T("", !0), o.addon_quota_amount > 0 ? (b(), g(y, {
                key: 3
            }, [Tn, S("div", Fn, [S("div", null, v(e.trans.get("Additional API Requests")), 1), S("div", null, v(e.$filters.digit(o.addon_quota_amount, o.currency_symbol)), 1)])], 64)) : T("", !0), qn, a.discount_amount > 0 ? (b(), g(y, {
                key: 4
            }, [S("div", En, [S("div", null, v(e.trans.get("Discount")), 1), S("div", null, v(e.$filters.digit(a.discount_amount, o.currency_symbol)), 1)]), Un], 64)) : T("", !0), S("div", null, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [S("div", Mn, [S("div", null, v(e.trans.get("Total After Trial")), 1), S("div", null, v(e.$filters.digit(o.grand_total_amount, o.currency_symbol)), 1)]), S("div", An, [S("div", null, v(e.trans.get("Due Today")), 1), S("div", null, v(e.$filters.digit(0, o.currency_symbol)), 1)])], 64)) : (b(), g(y, {
                key: 1
            }, [r.skip_trial ? (b(), g("div", Pn, [S("div", null, [S("p", Ln, v(e.trans.get("Due Today")), 1)]), S("div", null, [S("p", Bn, v(e.$filters.digit(o.grand_total_amount, o.currency_symbol)), 1)])])) : r.existing_plan_amount > 0 ? (b(), g("div", $n, [S("div", null, [S("p", Dn, v(e.trans.get("New Billing Amount")), 1)]), S("div", null, [S("p", jn, v(e.$filters.digit(o.grand_total_amount, o.currency_symbol)) + " / " + v(a.period_yearly ? e.trans.get("year") : e.trans.get("month")), 1)])])) : (b(), g("div", On, [S("div", null, [S("p", Vn, v(e.trans.get("Due Now")), 1)]), S("div", null, [S("p", Hn, v(e.$filters.digit(o.grand_total_amount, o.currency_symbol)), 1)])]))], 64))]), 3 == a.step ? (b(), g("div", In, [r.allow_free_trial ? (b(), g("small", Nn, [S("span", {
                innerHTML: e.trans.get("You will be charged <strong>:due_amount</strong> after your free trial ends on :trial_end_date. See our", {
                    due_amount: e.$filters.digit(o.due_amount, a.currency + o.currency_symbol),
                    trial_end_date: o.trial_end_date.toLocaleDateString("en-US")
                })
            }, null, 8, Rn), A(), S("span", {
                class: "text-primary fw-bold cursor-pointer",
                "data-bs-content": e.trans.get("Your subscription can be canceled at any time inside your Keyword Tool account. You can request a full refund within :day days after making the first payment.", {
                    day: a.refundable_day
                }),
                "data-bs-toggle": "popover",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, v(e.trans.get(":day Days money back guarantee", {
                day: a.refundable_day
            })), 9, Kn), A(".")])) : o.is_change_period || o.is_upgrade || o.is_addon || r.is_trial_user && !r.skip_trial ? (b(), g("small", Jn)) : (b(), g("small", {
                key: 2,
                innerHTML: e.trans.get("Your subscription will start immediately. All the following payments will be automatically deducted using your preferred payment method. You can cancel your subscription at any time.")
            }, null, 8, Wn))])) : T("", !0)])])])) : T("", !0)], 64)) : T("", !0)])])])])
        }]
    ]),
    Yn = {
        props: {
            billing_card: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            billing_id: {
                type: String,
                required: !1,
                default: ""
            },
            card_id: {
                type: String,
                required: !1,
                default: ""
            },
            payment_source: {
                type: String,
                required: !1,
                default: ""
            },
            customer_id: {
                type: String,
                required: !1,
                default: ""
            },
            default_name: {
                type: String,
                required: !1,
                default: ""
            },
            default_email: {
                type: String,
                required: !1,
                default: ""
            },
            default_payment_method: {
                type: String,
                required: !1,
                default: "visa_master"
            },
            default_primary_payment: {
                type: Boolean,
                required: !1,
                default: !1
            },
            on_behalf: {
                type: Boolean,
                required: !1,
                default: !1
            },
            access_token: {
                type: String,
                required: !1,
                default: ""
            },
            process_url: {
                type: String,
                required: !0,
                default: ""
            },
            main_url: {
                type: String,
                required: !1,
                default: ""
            },
            is_captcha: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data() {
            return {
                loading: !0,
                process: !1,
                has_error: !1,
                token_url: "/payment-token",
                due_amount_url: "",
                name: this.default_name,
                email: this.default_email,
                payment_method: this.default_payment_method,
                primary_payment: this.default_primary_payment,
                error: "",
                success: ""
            }
        },
        watch: {
            process: {
                async handler(e, t) {
                    e ? this.bsDialogs.create(this.trans.get("Please do not close the browser tab, reload the page or press the back button, as it might interfere with the payment card processing."), [], this.trans.get("Payment card is processing..."), "creditcard").then((e => {})) : this.bsDialogs.close()
                },
                deep: !0
            }
        },
        created() {},
        mounted() {
            this.$nextTick((() => {
                this.bsDialogs = new Dialogs({
                    keyboard: !1
                }), this.bsDialogs2 = new Dialogs
            }))
        },
        methods: {
            submit() {
                this.loading || 0 != this.has_error || this.$refs.form.checkout()
            },
            hideError() {
                this.error = ""
            },
            showError(e = "") {
                this.error = e && "" != e ? e : this.trans.get("Unfortunately, we failed to updating your card details just now. Please try again."), this.$nextTick((() => {
                    var e = document.getElementById("error-alert");
                    e && this.$root.scrollTo(e)
                }))
            },
            processSuccess(e) {
                return e && e.data && e.data.redirect ? e.data.open ? (this.loading = !1, this.process = !1, window.open(e.data.redirect)) : (this.loading = !0, this.process = !1, window.location = e.data.redirect) : e && e.data && e.data.redirect_with_message ? e.data.redirect_with_message.message && "" != e.data.redirect_with_message.message ? (this.loading = !1, this.process = !1, this.$nextTick((() => {
                    this.bsDialogs2.create(e.data.redirect_with_message.message, [{
                        classes: "btn-success mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }]).then((t => {
                        "true" === t && (this.loading = !0, window.location = e.data.redirect_with_message.redirect)
                    }))
                })), !0) : (this.loading = !0, window.location = e.data.redirect_with_message.redirect) : e && e.data && e.data.success ? (this.loading = !1, this.process = !1, this.success = e.data.success, this.$refs.form.bindElements(), void this.$nextTick((() => {
                    var e = document.getElementById("success-alert");
                    e && this.$root.scrollTo(e)
                }))) : (this.loading = !0, this.process = !1, window.location.reload())
            }
        }
    },
    Gn = {
        key: 1,
        class: "alert alert-danger my-3",
        role: "alert",
        id: "error-alert"
    },
    Xn = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-exclamation-circle-fill me-2"
    })], -1),
    Qn = ["innerHTML"],
    Zn = {
        key: 2,
        class: "alert alert-success my-3",
        role: "alert",
        id: "success-alert"
    },
    el = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-check-circle-fill me-1"
    })], -1),
    tl = {
        class: "row"
    },
    rl = {
        class: "col-12 col-md-12"
    },
    sl = {
        class: "card overflow-hidden"
    },
    al = {
        class: "card-body"
    },
    ol = {
        id: "form-group-name",
        class: "mb-3"
    },
    il = {
        class: "form-label",
        for: "name"
    },
    nl = S("span", {
        class: "text-danger"
    }, "*", -1),
    ll = ["placeholder"],
    cl = {
        id: "form-group-email",
        class: "mb-4"
    },
    _l = {
        class: "form-label",
        for: "email"
    },
    ul = S("span", {
        class: "text-danger"
    }, "*", -1),
    dl = ["placeholder"],
    ml = {
        class: "mb-3"
    },
    hl = {
        class: "form-label"
    },
    pl = S("span", {
        class: "text-danger"
    }, "*", -1),
    gl = {
        class: "d-flex justify-content-between mb-3"
    },
    yl = {
        class: "w-50 me-2"
    },
    fl = ["disabled"],
    wl = ["src"],
    bl = ["src"],
    vl = S("br", null, null, -1),
    kl = {
        class: "w-50 ms-2"
    },
    xl = ["disabled"],
    Cl = ["src"],
    Sl = ["src"],
    Tl = S("br", null, null, -1),
    Fl = {
        class: "mb-3 d-flex justify-content-between"
    },
    ql = {
        class: "d-flex justify-content-end mb-0"
    },
    El = {
        class: "mx-1"
    },
    Ul = ["disabled"],
    Ml = {
        class: "mx-1"
    },
    Al = ["disabled"],
    Pl = ["disabled"],
    Ll = {
        class: "d-flex justify-content-between align-items-center"
    },
    Bl = {
        class: "text-muted"
    },
    $l = S("i", {
        class: "bi bi-lock me-1"
    }, null, -1);
const Dl = Ue(Yn, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("stripe-payment"),
                l = k("vue-toggle");
            return b(), g("div", null, [a.process ? T("", !0) : (b(), x(i, {
                key: 0,
                loading: a.loading
            }, null, 8, ["loading"])), "" != a.error ? (b(), g("div", Gn, [S("table", null, [S("tbody", null, [S("tr", null, [Xn, S("td", {
                innerHTML: a.error
            }, null, 8, Qn)])])])])) : "" != a.success ? (b(), g("div", Zn, [S("table", null, [S("tbody", null, [S("tr", null, [el, S("td", null, v(a.success), 1)])])])])) : T("", !0), S("div", tl, [S("div", rl, [S("div", sl, [S("div", al, [S("form", {
                onSubmit: t[16] || (t[16] = P((() => {}), ["prevent"])),
                id: "card-form",
                class: "card-form"
            }, [r.on_behalf ? (b(), g(y, {
                key: 0
            }, [S("div", ol, [S("label", il, [A(v(e.trans.get("Name")) + " ", 1), nl]), F(S("input", {
                type: "text",
                id: "name",
                "onUpdate:modelValue": t[0] || (t[0] = e => a.name = e),
                class: "checkout-form-name-value form-control",
                name: "name",
                placeholder: e.trans.get("e.g. John"),
                required: "",
                readonly: ""
            }, null, 8, ll), [
                [U, a.name]
            ])]), S("div", cl, [S("label", _l, [A(v(e.trans.get("Email")) + " ", 1), ul]), F(S("input", {
                type: "email",
                id: "email",
                "onUpdate:modelValue": t[1] || (t[1] = e => a.email = e),
                class: "checkout-form-email-value form-control",
                name: "email",
                placeholder: e.trans.get("e.g. your@email.com"),
                required: "",
                readonly: ""
            }, null, 8, dl), [
                [U, a.email]
            ])])], 64)) : (b(), g(y, {
                key: 1
            }, [F(S("input", {
                type: "hidden",
                "onUpdate:modelValue": t[2] || (t[2] = e => a.name = e),
                name: "name"
            }, null, 512), [
                [U, a.name]
            ]), F(S("input", {
                type: "hidden",
                "onUpdate:modelValue": t[3] || (t[3] = e => a.email = e),
                name: "email"
            }, null, 512), [
                [U, a.email]
            ])], 64)), S("div", ml, [S("label", hl, [A(v(e.trans.get("Select Card Type")) + " ", 1), pl]), S("div", gl, [S("div", yl, [S("button", {
                disabled: a.loading,
                type: "button",
                onClick: t[4] || (t[4] = e => {
                    a.payment_method = "visa_master", a.has_error = !1
                }),
                class: w(["btn btn-block visa-master-option", ["visa_master" == a.payment_method ? "btn-primary" : "btn-outline-primary"]])
            }, [S("img", {
                class: "checkout-form-payment-method-visa border border-white me-1",
                src: "/images/payment-method-visa.png",
                height: "21",
                alt: "Visa",
                title: "Visa"
            }, null, 8, wl), S("img", {
                class: "checkout-form-payment-method-mastercard border border-white me-1",
                src: "/images/payment-method-mastercard.png",
                height: "21",
                alt: "MasterCard",
                title: "MasterCard"
            }, null, 8, bl), vl, S("small", null, v(e.trans.get("Visa or Mastercard")), 1)], 10, fl)]), S("div", kl, [S("button", {
                disabled: a.loading,
                type: "button",
                onClick: t[5] || (t[5] = e => {
                    a.payment_method = "amex", a.has_error = !1
                }),
                class: w(["btn btn-block amex-option", ["amex" == a.payment_method ? "btn-primary" : "btn-outline-primary"]])
            }, [S("img", {
                class: "checkout-form-payment-method-amex border border-white me-1",
                src: "/images/payment-method-amex.png",
                height: "21",
                alt: "American Express",
                title: "American Express"
            }, null, 8, Cl), S("img", {
                class: "checkout-form-payment-method-jcb border border-white me-1",
                src: "/images/payment-method-jcb.png",
                height: "21",
                alt: "Japan Credit Bureau",
                title: "Japan Credit Bureau"
            }, null, 8, Sl), Tl, S("small", null, v(e.trans.get("American Express or JCB")), 1)], 10, xl)])]), "amex" == a.payment_method ? (b(), x(n, {
                key: 0,
                dusk: "payment-method",
                ref: "form",
                onLoading: t[6] || (t[6] = e => a.loading = e),
                onProcess: t[7] || (t[7] = e => a.process = e),
                onHasError: t[8] || (t[8] = e => a.has_error = e),
                onHideError: o.hideError,
                onShowError: o.showError,
                onProcessSuccess: o.processSuccess,
                is_subscribe: !1,
                access_token: r.access_token,
                payment_method: a.payment_method,
                billing_id: r.billing_id,
                card_id: r.card_id,
                default_payment_source: 4,
                customer_id: r.customer_id,
                billing_card: r.billing_card,
                name: a.name,
                email: a.email,
                primary_payment: a.primary_payment,
                token_url: a.token_url,
                due_amount_url: a.due_amount_url,
                process_url: r.process_url,
                is_captcha: r.is_captcha
            }, null, 8, ["onHideError", "onShowError", "onProcessSuccess", "access_token", "payment_method", "billing_id", "card_id", "customer_id", "billing_card", "name", "email", "primary_payment", "token_url", "due_amount_url", "process_url", "is_captcha"])) : (b(), x(n, {
                key: 1,
                dusk: "payment-method",
                ref: "form",
                onLoading: t[9] || (t[9] = e => a.loading = e),
                onProcess: t[10] || (t[10] = e => a.process = e),
                onHasError: t[11] || (t[11] = e => a.has_error = e),
                onHideError: o.hideError,
                onShowError: o.showError,
                onProcessSuccess: o.processSuccess,
                is_subscribe: !1,
                access_token: r.access_token,
                payment_method: a.payment_method,
                billing_id: r.billing_id,
                card_id: r.card_id,
                default_payment_source: r.payment_source,
                customer_id: r.customer_id,
                billing_card: r.billing_card,
                name: a.name,
                email: a.email,
                primary_payment: a.primary_payment,
                token_url: a.token_url,
                due_amount_url: a.due_amount_url,
                process_url: r.process_url,
                is_captcha: r.is_captcha
            }, null, 8, ["onHideError", "onShowError", "onProcessSuccess", "access_token", "payment_method", "billing_id", "card_id", "default_payment_source", "customer_id", "billing_card", "name", "email", "primary_payment", "token_url", "due_amount_url", "process_url", "is_captcha"]))]), S("div", Fl, [S("div", null, [r.default_primary_payment ? T("", !0) : (b(), x(l, {
                key: 0,
                "right-title": e.trans.get("Set as primary payment method"),
                name: "primary_payment",
                toggled: a.primary_payment,
                onToggle: t[12] || (t[12] = e => a.primary_payment = e)
            }, null, 8, ["right-title", "toggled"]))]), S("div", null, [S("div", ql, [S("div", El, [r.main_url ? (b(), g("a", {
                key: 0,
                href: "javascript:",
                onClick: t[13] || (t[13] = t => e.$root.redirect(r.main_url)),
                disabled: a.loading || a.has_error,
                class: "btn btn btn-light"
            }, v(e.trans.get("Cancel")), 9, Ul)) : T("", !0)]), S("div", Ml, [r.customer_id && r.card_id ? (b(), g("button", {
                key: 0,
                disabled: a.loading || a.has_error,
                onClick: t[14] || (t[14] = e => o.submit()),
                type: "button",
                class: "btn btn btn-primary update-card-button"
            }, v(e.trans.get("Update Now")), 9, Al)) : (b(), g("button", {
                key: 1,
                disabled: a.loading || a.has_error,
                onClick: t[15] || (t[15] = e => o.submit()),
                type: "button",
                class: "btn btn-block btn btn-primary add-card-button"
            }, v(e.trans.get("Add Now")), 9, Pl))])])])]), S("div", Ll, [S("small", Bl, [$l, A(" " + v(e.trans.get("We use Stripe to handle payments and card information securely. Stripe is a Validated Level 1 PCI DSS Compliant Service Provider. All pages on our website are secured with modern SSL/TLS encryption.")), 1)])])], 32)])])])])])
        }]
    ]),
    jl = {
        data: () => ({}),
        props: {
            type: {
                type: String,
                default: ""
            },
            plans: {
                type: Object,
                default: () => {}
            },
            allow_subscribe: {
                type: Boolean,
                default: !1
            },
            lock_currency: {
                type: Boolean,
                default: !1
            },
            currency: {
                type: String,
                default: ""
            },
            plan: {
                type: String,
                default: ""
            },
            period: {
                type: String,
                default: ""
            },
            query: {
                type: String,
                default: ""
            },
            url: {
                type: String,
                default: ""
            },
            allow_free_trial: {
                type: Boolean,
                required: !1,
                default: !1
            },
            is_trial_user: {
                type: Boolean,
                default: !1
            }
        },
        computed: {
            plan_code() {
                let e = "";
                return "" != this.plan && (e = this.plan.replaceAll("v2", "").replaceAll("1", "").replaceAll("monthly", "").replaceAll("yearly", "").replaceAll("_", "")), e
            }
        },
        mounted() {},
        methods: {
            price_term(e) {
                return this.trans.get(":price / month", {
                    price: this.plans[e + "_" + this.period].price_per_month[this.currency]
                })
            },
            checkout(e) {
                let t = "";
                if ("custom" == e) t = "/contact";
                else {
                    var r = new URLSearchParams({
                        query: this.query,
                        plan: e + "_" + this.period,
                        currency: this.currency
                    });
                    t = this.url + "?" + r.toString()
                }
                return t
            }
        }
    },
    Ol = {
        class: "mb-3 row row-eq-height"
    },
    Vl = {
        class: "card h-100"
    },
    Hl = {
        key: 0,
        class: "card-header p-1 text-center bg-transparent border-0 d-none d-md-block"
    },
    Il = [S("p", {
        class: "my-0 fw-normal text-uppercase"
    }, " ", -1)],
    Nl = {
        class: "card-body"
    },
    Rl = S("h4", null, "Pro Basic", -1),
    Kl = {
        class: "card-title pricing-card-title fw-bolder"
    },
    Jl = {
        key: 0,
        class: "mt-n1 text-muted"
    },
    Wl = {
        key: 1,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    zl = ["href"],
    Yl = {
        key: 3,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    Gl = ["href"],
    Xl = S("hr", {
        class: "my-4"
    }, null, -1),
    Ql = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Zl = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    ec = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    tc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    rc = {
        class: "card h-100"
    },
    sc = {
        class: "my-0 fw-normal text-uppercase"
    },
    ac = {
        class: "card-body"
    },
    oc = S("h4", null, "Pro Plus", -1),
    ic = {
        class: "card-title pricing-card-title fw-bolder"
    },
    nc = {
        key: 0,
        class: "mt-n1 text-muted"
    },
    lc = {
        key: 1,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    cc = ["href"],
    _c = {
        key: 3,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    uc = ["href"],
    dc = ["href"],
    mc = S("hr", {
        class: "my-4"
    }, null, -1),
    hc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    pc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    gc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    yc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    fc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    wc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    bc = {
        class: "card h-100"
    },
    vc = {
        key: 0,
        class: "card-header p-1 text-center bg-transparent border-0 d-none d-md-block"
    },
    kc = [S("p", {
        class: "my-0 fw-normal text-uppercase"
    }, " ", -1)],
    xc = {
        class: "card-body"
    },
    Cc = S("h4", null, "Pro Business", -1),
    Sc = {
        class: "card-title pricing-card-title fw-bolder"
    },
    Tc = {
        key: 0,
        class: "mt-n1 text-muted"
    },
    Fc = {
        key: 1,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    qc = ["href"],
    Ec = ["href"],
    Uc = ["href"],
    Mc = S("hr", {
        class: "my-4"
    }, null, -1),
    Ac = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Pc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Lc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Bc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    $c = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Dc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    jc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Oc = {
        class: "card h-100"
    },
    Vc = {
        class: "my-0 fw-normal text-uppercase"
    },
    Hc = {
        class: "card-body"
    },
    Ic = S("h4", null, "API Lite", -1),
    Nc = {
        class: "card-title pricing-card-title fw-bolder"
    },
    Rc = {
        key: 0,
        class: "mt-n1 text-muted"
    },
    Kc = {
        key: 1,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    Jc = ["href"],
    Wc = {
        key: 3,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    zc = ["href"],
    Yc = S("hr", {
        class: "my-4"
    }, null, -1),
    Gc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Xc = ["innerHTML"],
    Qc = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    Zc = ["innerHTML"],
    e_ = {
        class: "card h-100"
    },
    t_ = {
        key: 0,
        class: "card-header p-1 text-center bg-transparent border-0 d-none d-md-block"
    },
    r_ = [S("p", {
        class: "my-0 fw-normal text-uppercase"
    }, " ", -1)],
    s_ = {
        class: "card-body"
    },
    a_ = S("h4", null, "API Basic", -1),
    o_ = {
        class: "card-title pricing-card-title fw-bolder"
    },
    i_ = {
        key: 0,
        class: "mt-n1 text-muted"
    },
    n_ = {
        key: 1,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    l_ = ["href"],
    c_ = {
        key: 3,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    __ = ["href"],
    u_ = ["href"],
    d_ = S("hr", {
        class: "my-4"
    }, null, -1),
    m_ = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    h_ = ["innerHTML"],
    p_ = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    g_ = ["innerHTML"],
    y_ = {
        class: "card h-100"
    },
    f_ = {
        key: 0,
        class: "card-header p-1 text-center bg-transparent border-0 d-none d-md-block"
    },
    w_ = [S("p", {
        class: "my-0 fw-normal text-uppercase"
    }, " ", -1)],
    b_ = {
        class: "card-body"
    },
    v_ = S("h4", null, "API Plus", -1),
    k_ = {
        class: "card-title pricing-card-title fw-bolder"
    },
    x_ = {
        key: 0,
        class: "mt-n1 text-muted"
    },
    C_ = {
        key: 1,
        href: "#",
        class: "btn btn-lg btn-block btn-primary disabled"
    },
    S_ = ["href"],
    T_ = ["href"],
    F_ = ["href"],
    q_ = S("hr", {
        class: "my-4"
    }, null, -1),
    E_ = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    U_ = ["innerHTML"],
    M_ = S("td", {
        class: "align-text-top"
    }, [S("i", {
        class: "bi bi-check-lg text-success me-1"
    })], -1),
    A_ = ["innerHTML"],
    P_ = {
        key: 0,
        class: "content-custom-quote my-4"
    },
    L_ = {
        class: "content-body"
    },
    B_ = {
        class: "row"
    },
    $_ = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1),
    D_ = {
        class: "col-sm-12 col-md-12 col-lg-10"
    },
    j_ = {
        class: "card text-center"
    },
    O_ = {
        class: "card-body"
    },
    V_ = {
        class: "card-title"
    },
    H_ = {
        class: "row"
    },
    I_ = {
        class: "col-12 text-center"
    },
    N_ = {
        class: "card-text"
    },
    R_ = {
        class: "col-12 text-center"
    },
    K_ = ["href"],
    J_ = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1);
const W_ = Ue(jl, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", {
                class: w(["signup-table", ["signup-table-" + r.period, "signup-table-" + r.type]])
            }, [S("div", Ol, ["pro" == r.type ? (b(), g(y, {
                key: 0
            }, [!r.plan || r.allow_subscribe || !r.allow_subscribe && "probasic" == o.plan_code ? (b(), g("div", {
                key: 0,
                class: w([{
                    "col-md-4": r.allow_subscribe
                }, "probasic col-12 order-2 order-md-1 mb-3"])
            }, [S("div", Vl, [r.allow_subscribe ? (b(), g("div", Hl, Il)) : T("", !0), S("div", Nl, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [Rl, S("h3", Kl, v(o.price_term("pro_basic_v2")), 1), "yearly" == r.period ? (b(), g("p", Jl, v(e.trans.get("billed every 12 months")), 1)) : T("", !0), "probasic" == o.plan_code ? (b(), g("a", Wl, v(e.trans.get("Current Plan")), 1)) : r.is_trial_user ? (b(), g("a", {
                key: 2,
                href: o.checkout("pro_basic_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Change Plan")), 9, zl)) : "proplus" == o.plan_code || "probusiness" == o.plan_code ? (b(), g("a", Yl, v(e.trans.get("Not Available")), 1)) : (b(), g("a", {
                key: 4,
                href: o.checkout("pro_basic_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Start Your Free Trial")), 1)], 64)) : (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Subscribe Now")), 1)], 64))], 8, Gl)), Xl], 64)) : T("", !0), S("ul", {
                class: w(["list-unstyled my-0", {
                    row: !r.allow_subscribe
                }])
            }, [S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Ql, S("td", null, v(e.trans.get("Search Volume Data")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Zl, S("td", null, v(e.trans.get("More Keywords")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [ec, S("td", null, v(e.trans.get("Bulk Search Volume Analysis")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [tc, S("td", null, v(e.trans.get(":count User Account", {
                count: e.$filters.digit(1)
            })), 1)])])], 2)], 2)])])], 2)) : T("", !0), !r.plan || r.allow_subscribe || !r.allow_subscribe && "proplus" == o.plan_code ? (b(), g("div", {
                key: 1,
                class: w(["proplus col-12 order-1 order-md-2 mb-3", {
                    "border-primary col-md-4": r.allow_subscribe
                }])
            }, [S("div", rc, [r.allow_subscribe ? (b(), g("div", {
                key: 0,
                class: w(["card-header p-1 text-center", {
                    "bg-primary border-primary text-white": r.allow_subscribe,
                    "bg-transparent border-0": !r.allow_subscribe
                }])
            }, [S("p", sc, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Most Popular Plan")), 1)], 64)) : T("", !0)])], 2)) : T("", !0), S("div", ac, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [oc, S("h3", ic, v(o.price_term("pro_plus_v2")), 1), "yearly" == r.period ? (b(), g("p", nc, v(e.trans.get("billed every 12 months")), 1)) : T("", !0), "proplus" == o.plan_code ? (b(), g("a", lc, v(e.trans.get("Current Plan")), 1)) : r.is_trial_user ? (b(), g("a", {
                key: 2,
                href: o.checkout("pro_plus_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Change Plan")), 9, cc)) : "probusiness" == o.plan_code ? (b(), g("a", _c, v(e.trans.get("Not Available")), 1)) : "probasic" == o.plan_code ? (b(), g("a", {
                key: 4,
                href: o.checkout("pro_plus_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Upgrade Now")), 9, uc)) : (b(), g("a", {
                key: 5,
                href: o.checkout("pro_plus_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Start Your Free Trial")), 1)], 64)) : (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Subscribe Now")), 1)], 64))], 8, dc)), mc], 64)) : T("", !0), S("ul", {
                class: w(["list-unstyled my-0", {
                    row: !r.allow_subscribe
                }])
            }, [S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [hc, S("td", null, v(e.trans.get("Search Volume Data")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [pc, S("td", null, v(e.trans.get("Cost-Per-Click Data")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [gc, S("td", null, v(e.trans.get("Competition Data")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [yc, S("td", null, v(e.trans.get("More Keywords")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [fc, S("td", null, v(e.trans.get("Bulk Search Volume Analysis")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [wc, S("td", null, v(e.trans.get(":count User Accounts", {
                count: e.$filters.digit(5)
            })), 1)])])], 2)], 2)])])], 2)) : T("", !0), !r.plan || r.allow_subscribe || !r.allow_subscribe && "probusiness" == o.plan_code ? (b(), g("div", {
                key: 2,
                class: w([{
                    "col-md-4": r.allow_subscribe
                }, "probusiness col-12 order-3 order-md-3 mb-3"])
            }, [S("div", bc, [r.allow_subscribe ? (b(), g("div", vc, kc)) : T("", !0), S("div", xc, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [Cc, S("h3", Sc, v(o.price_term("pro_business_v2")), 1), "yearly" == r.period ? (b(), g("p", Tc, v(e.trans.get("billed every 12 months")), 1)) : T("", !0), "probusiness" == o.plan_code ? (b(), g("a", Fc, v(e.trans.get("Current Plan")), 1)) : r.is_trial_user ? (b(), g("a", {
                key: 2,
                href: o.checkout("pro_business_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Change Plan")), 9, qc)) : "probasic" == o.plan_code || "proplus" == o.plan_code ? (b(), g("a", {
                key: 3,
                href: o.checkout("pro_business_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Upgrade Now")), 9, Ec)) : (b(), g("a", {
                key: 4,
                href: o.checkout("pro_business_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Start Your Free Trial")), 1)], 64)) : (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Subscribe Now")), 1)], 64))], 8, Uc)), Mc], 64)) : T("", !0), S("ul", {
                class: w(["list-unstyled my-0", {
                    row: !r.allow_subscribe
                }])
            }, [S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Ac, S("td", null, v(e.trans.get("Search Volume Data")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Pc, S("td", null, v(e.trans.get("Cost-Per-Click Data")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Lc, S("td", null, v(e.trans.get("Competition Data")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Bc, S("td", null, v(e.trans.get("More Keywords")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [$c, S("td", null, v(e.trans.get("Bulk Search Volume Analysis")), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Dc, S("td", null, v(e.trans.get(":count API Requests Per Day", {
                count: e.$filters.digit(50)
            })), 1)])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [jc, S("td", null, v(e.trans.get(":count User Accounts", {
                count: e.$filters.digit(10)
            })), 1)])])], 2)], 2)])])], 2)) : T("", !0)], 64)) : "api" == r.type ? (b(), g(y, {
                key: 1
            }, [!r.plan || r.allow_subscribe || !r.allow_subscribe && "apilite" == o.plan_code ? (b(), g("div", {
                key: 0,
                class: w([{
                    "col-md-4": r.allow_subscribe
                }, "apilite col-12 order-1 order-md-1 mb-3"])
            }, [S("div", Oc, [r.allow_subscribe ? (b(), g("div", {
                key: 0,
                class: w(["card-header p-1 text-center", {
                    "bg-primary border-primary text-white": r.allow_subscribe,
                    "bg-transparent border-0": !r.allow_subscribe
                }])
            }, [S("p", Vc, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Most Popular Plan")), 1)], 64)) : T("", !0)])], 2)) : T("", !0), S("div", Hc, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [Ic, S("h3", Nc, v(o.price_term("api_v2_lite_v2")), 1), "yearly" == r.period ? (b(), g("p", Rc, v(e.trans.get("billed every 12 months")), 1)) : T("", !0), "apilite" == o.plan_code ? (b(), g("a", Kc, v(e.trans.get("Current Plan")), 1)) : r.is_trial_user ? (b(), g("a", {
                key: 2,
                href: o.checkout("api_v2_lite_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Change Plan")), 9, Jc)) : "apibasic" == o.plan_code || "apiplus" == o.plan_code ? (b(), g("a", Wc, v(e.trans.get("Not Available")), 1)) : (b(), g("a", {
                key: 4,
                href: o.checkout("api_v2_lite_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Start Your Free Trial")), 1)], 64)) : (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Subscribe Now")), 1)], 64))], 8, zc)), Yc], 64)) : T("", !0), S("ul", {
                class: w(["list-unstyled my-0", {
                    row: !r.allow_subscribe
                }])
            }, [S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Gc, S("td", null, [S("span", {
                innerHTML: e.trans.get("<strong>:count API requests</strong> / 24 hours", {
                    count: e.$filters.digit(100)
                })
            }, null, 8, Xc)])])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [Qc, S("td", null, [S("span", {
                innerHTML: e.trans.get("Get Data for <strong>:count keywords</strong> every 24 hours", {
                    count: e.$filters.digit(1e5)
                })
            }, null, 8, Zc)])])])], 2)], 2)])])], 2)) : T("", !0), !r.plan || r.allow_subscribe || !r.allow_subscribe && "apibasic" == o.plan_code ? (b(), g("div", {
                key: 1,
                class: w([{
                    "col-md-4": r.allow_subscribe
                }, "apibasic col-12 order-2 order-md-2 mb-3"])
            }, [S("div", e_, [r.allow_subscribe ? (b(), g("div", t_, r_)) : T("", !0), S("div", s_, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [a_, S("h3", o_, v(o.price_term("api_v2_basic_v2")), 1), "yearly" == r.period ? (b(), g("p", i_, v(e.trans.get("billed every 12 months")), 1)) : T("", !0), "apibasic" == o.plan_code ? (b(), g("a", n_, v(e.trans.get("Current Plan")), 1)) : r.is_trial_user ? (b(), g("a", {
                key: 2,
                href: o.checkout("api_v2_basic_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Change Plan")), 9, l_)) : "apiplus" == o.plan_code ? (b(), g("a", c_, v(e.trans.get("Not Available")), 1)) : "apilite" == o.plan_code ? (b(), g("a", {
                key: 4,
                href: o.checkout("api_v2_basic_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Upgrade Now")), 9, __)) : (b(), g("a", {
                key: 5,
                href: o.checkout("api_v2_basic_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Start Your Free Trial")), 1)], 64)) : (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Subscribe Now")), 1)], 64))], 8, u_)), d_], 64)) : T("", !0), S("ul", {
                class: w(["list-unstyled my-0", {
                    row: !r.allow_subscribe
                }])
            }, [S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [m_, S("td", null, [S("span", {
                innerHTML: e.trans.get("<strong>:count API requests</strong> / 24 hours", {
                    count: e.$filters.digit(400)
                })
            }, null, 8, h_)])])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [p_, S("td", null, [S("span", {
                innerHTML: e.trans.get("Get Data for <strong>:count keywords</strong> every 24 hours", {
                    count: e.$filters.digit(4e5)
                })
            }, null, 8, g_)])])])], 2)], 2)])])], 2)) : T("", !0), !r.plan || r.allow_subscribe || !r.allow_subscribe && "apiplus" == o.plan_code ? (b(), g("div", {
                key: 2,
                class: w(["apiplus col-12 order-3 order-md-3 mb-3", {
                    "border-primary col-md-4": r.allow_subscribe
                }])
            }, [S("div", y_, [r.allow_subscribe ? (b(), g("div", f_, w_)) : T("", !0), S("div", b_, [r.allow_subscribe ? (b(), g(y, {
                key: 0
            }, [v_, S("h3", k_, v(o.price_term("api_v2_plus_v2")), 1), "yearly" == r.period ? (b(), g("p", x_, v(e.trans.get("billed every 12 months")), 1)) : T("", !0), "apiplus" == o.plan_code ? (b(), g("a", C_, v(e.trans.get("Current Plan")), 1)) : r.is_trial_user ? (b(), g("a", {
                key: 2,
                href: o.checkout("api_v2_plus_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Change Plan")), 9, S_)) : "apilite" == o.plan_code || "apibasic" == o.plan_code ? (b(), g("a", {
                key: 3,
                href: o.checkout("api_v2_plus_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, v(e.trans.get("Upgrade Now")), 9, T_)) : (b(), g("a", {
                key: 4,
                href: o.checkout("api_v2_plus_v2"),
                class: "btn btn-lg btn-block btn-primary"
            }, [r.allow_free_trial ? (b(), g(y, {
                key: 0
            }, [A(v(e.trans.get("Start Your Free Trial")), 1)], 64)) : (b(), g(y, {
                key: 1
            }, [A(v(e.trans.get("Subscribe Now")), 1)], 64))], 8, F_)), q_], 64)) : T("", !0), S("ul", {
                class: w(["list-unstyled my-0", {
                    row: !r.allow_subscribe
                }])
            }, [S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [E_, S("td", null, [S("span", {
                innerHTML: e.trans.get("<strong>:count API requests</strong> / 24 hours", {
                    count: e.$filters.digit(800)
                })
            }, null, 8, U_)])])])], 2), S("li", {
                class: w({
                    "col-sm-6": !r.allow_subscribe
                })
            }, [S("table", null, [S("tr", null, [M_, S("td", null, [S("span", {
                innerHTML: e.trans.get("Get Data for <strong>:count keywords</strong> every 24 hours", {
                    count: e.$filters.digit(8e5)
                })
            }, null, 8, A_)])])])], 2)], 2)])])], 2)) : T("", !0)], 64)) : T("", !0)]), r.allow_subscribe ? (b(), g("div", P_, [S("div", L_, [S("div", B_, [$_, S("div", D_, [S("div", j_, [S("div", O_, [S("h5", V_, v(e.trans.get("Can Not Find A Match? Get Custom Quote")), 1), S("div", H_, [S("div", I_, [S("p", N_, v(e.trans.get("Contact our team, and we will tailor a special :plan plan to serve your unique requirements.", {
                plan: "api" == r.type ? "Keyword Tool API" : "Keyword Tool Pro"
            })), 1)]), S("div", R_, [S("a", {
                href: o.checkout("custom"),
                class: "btn btn-primary mt-3"
            }, v(e.trans.get("Contact Us")), 9, K_)])])])])]), J_])])])) : T("", !0)], 2)
        }]
    ]),
    z_ = {
        data: () => ({
            period_yearly: !0,
            currency: "USD",
            period: "yearly"
        }),
        props: {
            id: {
                type: String,
                default: se()
            },
            type: {
                type: String,
                default: ""
            },
            plan: {
                type: String,
                default: ""
            },
            plans: {
                type: Object,
                default: () => {}
            },
            allow_subscribe: {
                type: Boolean,
                default: !1
            },
            lock_currency: {
                type: Boolean,
                default: !1
            },
            default_currency: {
                type: String,
                default: ""
            },
            default_period: {
                type: String,
                default: ""
            },
            query: {
                type: String,
                default: ""
            },
            url: {
                type: String,
                default: ""
            },
            allow_free_trial: {
                type: Boolean,
                required: !1,
                default: !1
            },
            lock_period: {
                type: Boolean,
                default: !1
            },
            is_trial_user: {
                type: Boolean,
                default: !1
            }
        },
        computed: {},
        watch: {
            period_yearly: {
                handler(e, t) {
                    this.period = e ? "yearly" : "monthly"
                },
                deep: !0
            }
        },
        created() {
            this.currency = this.default_currency, "monthly" == this.default_period && (this.period_yearly = !1, this.period = "monthly")
        },
        mounted() {},
        methods: {}
    },
    Y_ = {
        class: "mb-4 mt-2 row"
    },
    G_ = {
        class: "col"
    },
    X_ = {
        class: "row justify-content-end justify-content-md-center"
    },
    Q_ = {
        class: "col-5 col-sm-auto"
    },
    Z_ = {
        class: "col-2 col-sm-auto px-0"
    },
    eu = {
        class: "col-5 col-sm-auto"
    },
    tu = {
        class: "col-12 col-sm-auto px-0"
    },
    ru = {
        class: "float-end float-sm-start mx-2 badge bg-success fs-6 text-uppercase"
    },
    su = {
        class: "col-12 col-md-auto"
    },
    au = {
        class: "d-flex justify-content-end align-items-center mt-4 mt-md-auto"
    };
const ou = Ue(z_, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("vue-toggle"),
                n = k("select-currency"),
                l = k("subscription-plan");
            return b(), g("div", {
                class: w(["signup-form", ["signup-form-" + a.period, "signup-form-" + r.type]])
            }, [S("div", Y_, [S("div", G_, [S("div", X_, [S("div", Q_, [S("span", {
                class: w(["fw-bold text-truncate", {
                    "text-muted": a.period_yearly
                }])
            }, v(e.trans.get("Monthly Billing")), 3)]), S("div", Z_, [E(i, {
                class: "subscription-period-option justify-content-center",
                name: "period_yearly",
                disabled: r.lock_period,
                toggled: a.period_yearly,
                onToggle: t[0] || (t[0] = e => a.period_yearly = e)
            }, null, 8, ["disabled", "toggled"])]), S("div", eu, [S("span", {
                class: w(["fw-bold text-truncate", {
                    "text-muted": !a.period_yearly
                }])
            }, v(e.trans.get("Annual Billing")), 3)]), S("div", tu, [S("span", ru, v(e.trans.get("Save :percentage", {
                percentage: "20%"
            })), 1)])])]), S("div", su, [S("div", au, [r.lock_currency ? T("", !0) : (b(), x(n, {
                key: 0,
                onSelect: t[1] || (t[1] = e => a.currency = e),
                default_currency: a.currency,
                id: r.id
            }, null, 8, ["default_currency", "id"]))])])]), E(l, {
                type: r.type,
                plan: r.plan,
                plans: r.plans,
                allow_subscribe: r.allow_subscribe,
                lock_currency: r.lock_currency,
                currency: a.currency,
                period: a.period,
                query: r.query,
                url: r.url,
                allow_free_trial: r.allow_free_trial,
                is_trial_user: r.is_trial_user
            }, null, 8, ["type", "plan", "plans", "allow_subscribe", "lock_currency", "currency", "period", "query", "url", "allow_free_trial", "is_trial_user"])], 2)
        }]
    ]),
    iu = {
        data: () => ({
            step: 1,
            subscriptions: [],
            reasons: [],
            explanation: "",
            explanation_max_char: 500,
            term1: !1,
            term2: !1,
            password: "",
            confirm_delete: "",
            validating_reasons: !1,
            validating_explaination: !1,
            validating_password: !1,
            validating_confirm_delete: !1
        }),
        props: {
            show_pro_checkbox: {
                type: Boolean,
                default: !1
            },
            show_api_checkbox: {
                type: Boolean,
                default: !1
            },
            checked_pro: {
                type: Boolean,
                default: !1
            },
            checked_api: {
                type: Boolean,
                default: !1
            },
            active_subscriptions: {
                type: Number,
                default: 0
            },
            pro_role: {
                type: String,
                default: ""
            },
            api_role: {
                type: String,
                default: ""
            },
            pro_role_name: {
                type: String,
                default: ""
            },
            api_role_name: {
                type: String,
                default: ""
            },
            submit_url: {
                type: String,
                default: ""
            },
            pause_url: {
                type: String,
                default: ""
            },
            main_url: {
                type: String,
                default: ""
            }
        },
        computed: {
            skip_delete_account() {
                return this.active_subscriptions - this.subscriptions.length > 0
            }
        },
        watch: {
            reasons: {
                async handler() {
                    this.validating_reasons = !0
                },
                deep: !0
            },
            explanation: {
                handler(e, t) {
                    this.validating_explaination = !0
                },
                deep: !0
            },
            confirm_delete: {
                handler(e, t) {
                    this.validating_confirm_delete = !0
                },
                deep: !0
            },
            password: {
                handler(e, t) {
                    this.validating_password = !0
                },
                deep: !0
            }
        },
        mounted() {
            this.checked_pro && this.pro_role && this.subscriptions.push(this.pro_role), this.checked_api && this.api_role && this.subscriptions.push(this.api_role), this.skip_delete_account && (this.step = 2)
        },
        methods: {
            back() {
                if (this.$root.clear_error(document.getElementById("app")), 2 == this.step) {
                    if (!this.skip_delete_account) return this.step = 1, !0
                } else if (3 == this.step) return this.password = "", this.$nextTick((() => {
                    this.validating_password = !1
                })), this.step = 2, !0;
                return this.main()
            },
            pause() {
                return this.$root.loading = !0, window.location = this.pause_url
            },
            main() {
                return this.$root.loading = !0, window.location = this.main_url
            },
            validate() {
                return 1 == this.step || (2 == this.step ? this.subscriptions.length > 0 && this.reasons.length > 0 && this.explanation.length > 0 && this.explanation.length <= this.explanation_max_char : 3 == this.step && (this.skip_delete_account ? this.term2 && this.password.length > 0 : this.term1 && this.term2 && this.password.length > 0 && this.confirm_delete.toLowerCase() == this.trans.get("delete my account")))
            },
            submit() {
                1 == this.step ? this.step1() : 2 == this.step ? this.step2() : 3 == this.step && this.step3()
            },
            step1() {
                1 == this.validate() && (this.step = 2)
            },
            step2() {
                this.validating_reasons = !0, this.validating_explaination = !0, 1 == this.validate() && (this.step = 3)
            },
            step3() {
                this.validating_password = !0, this.validating_confirm_delete = !0, 1 == this.validate() && this.$root.submit("cancel-form", !0)
            }
        }
    },
    nu = S("i", {
        class: "bi bi-arrow-left me-1"
    }, null, -1),
    lu = {
        class: "page-title mt-2 mb-4 my-lg-4 text-center"
    },
    cu = ["action"],
    _u = {
        class: "step-1-section row justify-content-center"
    },
    uu = {
        class: "col-auto text-center"
    },
    du = {
        class: "fw-bold"
    },
    mu = {
        class: "list-unstyled text-start m-3 m-md-5"
    },
    hu = S("i", {
        class: "bi bi-x text-danger me-2"
    }, null, -1),
    pu = ["innerHTML"],
    gu = S("i", {
        class: "bi bi-x text-danger me-2"
    }, null, -1),
    yu = ["innerHTML"],
    fu = S("i", {
        class: "bi bi-x text-danger me-2"
    }, null, -1),
    wu = ["innerHTML"],
    bu = S("i", {
        class: "bi bi-x text-danger me-2"
    }, null, -1),
    vu = ["innerHTML"],
    ku = {
        class: "fw-bold"
    },
    xu = {
        class: "step-2-section"
    },
    Cu = {
        class: "row"
    },
    Su = {
        class: "col"
    },
    Tu = {
        class: "mb-3"
    },
    Fu = {
        class: "form-label"
    },
    qu = S("span", {
        class: "text-danger"
    }, "*", -1),
    Eu = ["value"],
    Uu = {
        for: "pro_plan",
        class: "form-check-label"
    },
    Mu = ["value"],
    Au = {
        for: "api_plan",
        class: "form-check-label"
    },
    Pu = {
        key: 0,
        class: "invalid-feedback"
    },
    Lu = {
        class: "row"
    },
    Bu = {
        class: "col"
    },
    $u = {
        class: "mb-3"
    },
    Du = S("span", {
        class: "text-danger"
    }, "*", -1),
    ju = {
        class: "form-check"
    },
    Ou = {
        for: "reason-1",
        class: "form-check-label"
    },
    Vu = {
        class: "form-check"
    },
    Hu = {
        for: "reason-2",
        class: "form-check-label"
    },
    Iu = {
        class: "form-check"
    },
    Nu = {
        for: "reason-3",
        class: "form-check-label"
    },
    Ru = {
        class: "form-check"
    },
    Ku = {
        for: "reason-4",
        class: "form-check-label"
    },
    Ju = {
        class: "form-check"
    },
    Wu = {
        for: "reason-5",
        class: "form-check-label"
    },
    zu = {
        key: 0,
        class: "invalid-feedback"
    },
    Yu = {
        class: "row"
    },
    Gu = {
        class: "col"
    },
    Xu = {
        class: "mb-3"
    },
    Qu = {
        for: "explanation",
        class: "form-label fw-bold"
    },
    Zu = S("span", {
        class: "text-danger"
    }, "*", -1),
    ed = ["placeholder"],
    td = {
        class: "float-end"
    },
    rd = {
        key: 0,
        class: "invalid-feedback"
    },
    sd = {
        key: 1,
        class: "invalid-feedback"
    },
    ad = {
        class: "step-3-section"
    },
    od = {
        class: "text-center"
    },
    id = {
        class: "my-2 d-flex flex-row"
    },
    nd = {
        class: "me-2"
    },
    ld = ["innerHTML"],
    cd = {
        class: "row"
    },
    _d = {
        class: "col"
    },
    ud = {
        class: "mb-3 my-2"
    },
    dd = {
        for: "password",
        class: "form-label fw-bold"
    },
    md = S("span", {
        class: "text-danger"
    }, "*", -1),
    hd = {
        key: 0,
        class: "invalid-feedback"
    },
    pd = {
        class: "fw-bold"
    },
    gd = {
        class: "my-2 d-flex flex-row"
    },
    yd = {
        class: "me-2"
    },
    fd = ["innerHTML"],
    wd = {
        class: "my-2 d-flex flex-row"
    },
    bd = {
        class: "me-2"
    },
    vd = ["innerHTML"],
    kd = {
        class: "row"
    },
    xd = {
        class: "col"
    },
    Cd = {
        class: "mb-3 my-2"
    },
    Sd = {
        for: "password",
        class: "form-label fw-bold"
    },
    Td = S("span", {
        class: "text-danger"
    }, "*", -1),
    Fd = {
        key: 0,
        class: "invalid-feedback"
    },
    qd = {
        class: "row"
    },
    Ed = {
        class: "col"
    },
    Ud = {
        class: "mb-3 my-2"
    },
    Md = {
        for: "confirm_delete",
        class: "form-label fw-bold"
    },
    Ad = ["innerHTML"],
    Pd = S("span", {
        class: "text-danger"
    }, "*", -1),
    Ld = ["placeholder"],
    Bd = {
        key: 0,
        class: "invalid-feedback"
    },
    $d = {
        key: 1,
        class: "invalid-feedback"
    },
    Dd = {
        class: "mb-3 my-4 text-center"
    },
    jd = ["disabled"],
    Od = ["disabled"],
    Vd = ["disabled"];
const Hd = Ue(iu, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("vue-toggle");
            return b(), g(y, null, [S("button", {
                class: "btn btn-light",
                onClick: t[0] || (t[0] = (...e) => o.back && o.back(...e))
            }, [nu, A(" " + v(e.trans.get("Back")), 1)]), S("h4", lu, v(e.trans.get("Keyword Tool Subscription Cancellation")), 1), S("form", {
                enctype: "multipart/form-data",
                onSubmit: t[21] || (t[21] = P(((...e) => o.submit && o.submit(...e)), ["prevent"])),
                action: r.submit_url,
                role: "form",
                method: "post",
                id: "cancel-form",
                "accept-charset": "UTF-8"
            }, [F(S("div", _u, [S("div", uu, [S("p", du, v(e.trans.get("Upon canceling your subscription, you will lose:")), 1), S("ul", mu, [S("li", null, [hu, S("span", {
                innerHTML: e.trans.get("Access to <b>ALL :plan</b> features", {
                    plan: r.checked_api && r.api_role ? "Keyword Tool API" : "Keyword Tool Pro"
                })
            }, null, 8, pu)]), S("li", null, [gu, S("span", {
                innerHTML: e.trans.get("<b>ALL</b> your account <b>information</b> and settings")
            }, null, 8, yu)]), S("li", null, [fu, S("span", {
                innerHTML: e.trans.get("<b>ALL</b> payment details on file, which will be <b>deleted</b>")
            }, null, 8, wu)]), S("li", null, [bu, S("span", {
                innerHTML: e.trans.get("<b>ALL</b> invited account users will be <b>removed</b>")
            }, null, 8, vu)])]), S("p", ku, v(e.trans.get("This action is irreversible. Do you wish to proceed?")), 1)])], 512), [
                [B, 1 == a.step]
            ]), F(S("div", xu, [S("p", null, v(e.trans.get("We are sorry to see you go. To help us improve, could you please let us know why you are cancelling your Keyword Tool subscription? Your feedback will help us make Keyword Tool better for you and others.")), 1), F(S("div", Cu, [S("div", Su, [S("div", Tu, [S("label", Fu, [A(v(e.trans.get("Which Subscription Would You Like To Cancel?")) + " ", 1), qu]), F(S("div", {
                class: w(["form-check", {
                    "is-invalid": a.subscriptions.length <= 0
                }])
            }, [F(S("input", {
                id: "pro_plan",
                "onUpdate:modelValue": t[1] || (t[1] = e => a.subscriptions = e),
                class: "form-check-input",
                name: "subscriptions[]",
                type: "checkbox",
                value: r.pro_role
            }, null, 8, Eu), [
                [q, a.subscriptions]
            ]), S("label", Uu, v(r.pro_role_name), 1)], 2), [
                [B, r.show_pro_checkbox]
            ]), F(S("div", {
                class: w(["form-check", {
                    "is-invalid": a.subscriptions.length <= 0
                }])
            }, [F(S("input", {
                id: "api_plan",
                "onUpdate:modelValue": t[2] || (t[2] = e => a.subscriptions = e),
                class: "form-check-input",
                name: "subscriptions[]",
                type: "checkbox",
                value: r.api_role
            }, null, 8, Mu), [
                [q, a.subscriptions]
            ]), S("label", Au, v(r.api_role_name), 1)], 2), [
                [B, r.show_api_checkbox]
            ]), a.subscriptions.length <= 0 ? (b(), g("div", Pu, v(e.trans.get("Please select a subscription that you wish to cancel.")), 1)) : T("", !0)])])], 512), [
                [B, r.show_pro_checkbox || r.show_api_checkbox]
            ]), S("div", Lu, [S("div", Bu, [S("div", $u, [S("label", {
                class: w(["form-label", {
                    "is-invalid": a.reasons.length <= 0
                }])
            }, [A(v(e.trans.get("Which of the following best describes your reason(s) for cancelling Keyword Tool subscription? You can select one or more of the options below:")) + " ", 1), Du], 2), S("div", ju, [F(S("input", {
                id: "reason-1",
                "onUpdate:modelValue": t[3] || (t[3] = e => a.reasons = e),
                class: "form-check-input reasons-checkbox",
                name: "reasons[]",
                value: "not_enough_functionality",
                type: "checkbox"
            }, null, 512), [
                [q, a.reasons]
            ]), S("label", Ou, v(e.trans.get("Not enough functionality")), 1)]), S("div", Vu, [F(S("input", {
                id: "reason-2",
                "onUpdate:modelValue": t[4] || (t[4] = e => a.reasons = e),
                class: "form-check-input reasons-checkbox",
                name: "reasons[]",
                value: "performance_issues",
                type: "checkbox"
            }, null, 512), [
                [q, a.reasons]
            ]), S("label", Hu, v(e.trans.get("Performance issues")), 1)]), S("div", Iu, [F(S("input", {
                id: "reason-3",
                "onUpdate:modelValue": t[5] || (t[5] = e => a.reasons = e),
                class: "form-check-input reasons-checkbox",
                name: "reasons[]",
                value: "the_price_is_too_high",
                type: "checkbox"
            }, null, 512), [
                [q, a.reasons]
            ]), S("label", Nu, v(e.trans.get("The price is too high")), 1)]), S("div", Ru, [F(S("input", {
                id: "reason-4",
                "onUpdate:modelValue": t[6] || (t[6] = e => a.reasons = e),
                class: "form-check-input reasons-checkbox",
                name: "reasons[]",
                value: "found_another_alternative",
                type: "checkbox"
            }, null, 512), [
                [q, a.reasons]
            ]), S("label", Ku, v(e.trans.get("I have found another alternative")), 1)]), S("div", Ju, [F(S("input", {
                id: "reason-5",
                "onUpdate:modelValue": t[7] || (t[7] = e => a.reasons = e),
                class: "form-check-input reasons-checkbox",
                name: "reasons[]",
                value: "not_used_often_enough",
                type: "checkbox"
            }, null, 512), [
                [q, a.reasons]
            ]), S("label", Wu, v(e.trans.get("The tool was not used often enough")), 1)]), a.validating_reasons && a.reasons.length <= 0 ? (b(), g("div", zu, v(e.trans.get("Please provide answers for the required questions.")), 1)) : T("", !0)])])]), S("div", Yu, [S("div", Gu, [S("div", Xu, [S("label", Qu, [A(v(e.trans.get("If none of the previous options describe your reason for cancelling the subscription, please let us know if there is something else that you can share with us. We value your feedback and would appreciate any information you can provide to help us improve our services.")) + " ", 1), Zu]), F(S("textarea", {
                id: "explanation",
                "onUpdate:modelValue": t[8] || (t[8] = e => a.explanation = e),
                name: "explanation",
                cols: "60",
                rows: "5",
                placeholder: e.trans.get("Please, elaborate. Feel free to share any specific issues or concerns you had while using Keyword Tool or any suggestions you have for how we can make it better. Thank you for taking the time to help us improve!"),
                class: w(["form-textarea form-control", {
                    "is-invalid": a.validating_explaination && (a.explanation.length <= 0 || a.explanation.length > a.explanation_max_char)
                }]),
                required: ""
            }, null, 10, ed), [
                [U, a.explanation, void 0, {
                    trim: !0
                }]
            ]), S("p", td, v(a.explanation.length) + " / " + v(a.explanation_max_char) + " " + v(e.trans.get("characters")), 1), a.explanation.length <= 0 ? (b(), g("div", rd, v(e.trans.get("Additional Reason is required.")), 1)) : T("", !0), a.explanation.length > a.explanation_max_char ? (b(), g("div", sd, v(e.trans.get("Additional Reason cannot exceed :count characters.", {
                count: a.explanation_max_char
            })), 1)) : T("", !0)])])])], 512), [
                [B, 2 == a.step]
            ]), F(S("div", ad, [S("p", od, v(e.trans.get("We are sorry to see you go. We hope you will consider using Keyword Tool again in the future")), 1), o.skip_delete_account ? (b(), g(y, {
                key: 0
            }, [S("div", id, [S("div", nd, [E(i, {
                class: "term2-checkbox",
                name: "term2",
                onToggle: t[9] || (t[9] = e => a.term2 = e)
            })]), S("div", {
                innerHTML: e.trans.get("I acknowledge that my subscription will be <b>automatically canceled</b>")
            }, null, 8, ld)]), S("div", cd, [S("div", _d, [S("div", ud, [S("label", dd, [A(v(e.trans.get("Current Password")) + " ", 1), md]), F(S("input", {
                type: "password",
                id: "password",
                "onUpdate:modelValue": t[10] || (t[10] = e => a.password = e),
                name: "password",
                class: w(["form-control", {
                    "is-invalid": a.validating_password && a.password.length <= 0
                }]),
                required: ""
            }, null, 2), [
                [U, a.password]
            ]), a.password.length <= 0 ? (b(), g("div", hd, v(e.trans.get("Current Password is required.")), 1)) : T("", !0)])])])], 64)) : (b(), g(y, {
                key: 1
            }, [S("p", pd, v(e.trans.get("To delete your account, please confirm the following:")), 1), S("div", gd, [S("div", yd, [E(i, {
                class: "term1-checkbox",
                name: "term1",
                onToggle: t[11] || (t[11] = e => a.term1 = e)
            })]), S("div", {
                innerHTML: e.trans.get("I acknowledge and understand that my account settings and any other data associated with my account will be <b>permanently deleted</b>")
            }, null, 8, fd)]), S("div", wd, [S("div", bd, [E(i, {
                class: "term2-checkbox",
                name: "term2",
                onToggle: t[12] || (t[12] = e => a.term2 = e)
            })]), S("div", {
                innerHTML: e.trans.get("I acknowledge that my subscription will be <b>automatically canceled</b>")
            }, null, 8, vd)]), F(S("div", null, [S("div", kd, [S("div", xd, [S("div", Cd, [S("label", Sd, [A(v(e.trans.get("Current Password")) + " ", 1), Td]), F(S("input", {
                onKeyup: t[13] || (t[13] = M(P(((...e) => o.step3 && o.step3(...e)), ["prevent"]), ["enter"])),
                type: "password",
                id: "password",
                "onUpdate:modelValue": t[14] || (t[14] = e => a.password = e),
                name: "password",
                class: w(["form-control", {
                    "is-invalid": a.validating_password && a.password.length <= 0
                }]),
                required: ""
            }, null, 34), [
                [U, a.password]
            ]), a.password.length <= 0 ? (b(), g("div", Fd, v(e.trans.get("Current Password is required.")), 1)) : T("", !0)])])]), S("div", qd, [S("div", Ed, [S("div", Ud, [S("label", Md, [S("span", {
                innerHTML: e.trans.get('Confirm By Typing <strong translate=no>"delete my account"</strong> Below')
            }, null, 8, Ad), A(), Pd]), F(S("input", {
                onKeyup: t[15] || (t[15] = M(P(((...e) => o.step3 && o.step3(...e)), ["prevent"]), ["enter"])),
                type: "text",
                id: "confirm_delete",
                "onUpdate:modelValue": t[16] || (t[16] = e => a.confirm_delete = e),
                name: "confirm_delete",
                placeholder: e.trans.get("Enter confirmation sentence"),
                class: w(["form-control", {
                    "is-invalid": a.validating_confirm_delete && (a.confirm_delete.toLowerCase() != e.trans.get("delete my account") || a.confirm_delete.length <= 0),
                    "is-valid": a.validating_confirm_delete && a.confirm_delete == e.trans.get("delete my account")
                }]),
                required: ""
            }, null, 42, Ld), [
                [U, a.confirm_delete, void 0, {
                    trim: !0
                }]
            ]), a.password.length <= 0 ? (b(), g("div", Bd, v(e.trans.get("Please enter confirmation sentence.")), 1)) : a.confirm_delete.toLowerCase() != e.trans.get("delete my account") ? (b(), g("div", $d, v(e.trans.get("Confirmation sentence incorrect.")), 1)) : T("", !0)])])])], 512), [
                [B, a.term1 && a.term2]
            ])], 64))], 512), [
                [B, 3 == a.step]
            ]), S("div", Dd, ["" != r.pause_url ? (b(), g("button", {
                key: 0,
                type: "button",
                class: "btn btn-primary pause-button my-1 me-2",
                onClick: t[17] || (t[17] = (...e) => o.pause && o.pause(...e))
            }, v(e.trans.get("Pause Subscription Instead")), 1)) : T("", !0), 1 == a.step ? (b(), g("button", {
                key: 1,
                type: "button",
                disabled: 0 == o.validate(),
                class: "btn btn-danger cancel-button my-1",
                onClick: t[18] || (t[18] = e => o.step1())
            }, v(e.trans.get("Proceed With Cancellation")), 9, jd)) : 2 == a.step ? (b(), g("button", {
                key: 2,
                type: "button",
                disabled: 0 == o.validate(),
                class: "btn btn-danger cancel-button my-1",
                onClick: t[19] || (t[19] = e => o.step2())
            }, v(e.trans.get("Proceed With Cancellation")), 9, Od)) : 3 == a.step ? (b(), g("button", {
                key: 3,
                type: "button",
                disabled: 0 == o.validate(),
                class: "btn btn-danger cancel-button my-1",
                onClick: t[20] || (t[20] = e => o.step3())
            }, v(e.trans.get("Cancel Subscription")), 9, Vd)) : T("", !0)])], 40, cu)], 64)
        }]
    ]),
    Id = {
        data: () => ({
            pause_type: "",
            duration: 0,
            start_date: "",
            validating_pause_type: !1,
            validating_end_date: !1
        }),
        props: {
            subscription_id: {
                type: String,
                default: ""
            },
            submit_url: {
                type: String,
                default: ""
            },
            main_url: {
                type: String,
                default: ""
            }
        },
        computed: {
            end_date() {
                if (this.duration > 0) {
                    let e = new Date;
                    return "scheduled" == this.pause_type && "" != this.start_date && (e = new Date(this.start_date)), e.setMonth(e.getMonth() + this.duration), e
                }
            },
            end_date_formatted() {
                if (this.end_date) return this.end_date.getDate() + " " + this.end_date.toLocaleString("en-US", {
                    month: "short"
                }) + " " + this.end_date.getFullYear()
            }
        },
        watch: {
            pause_type: {
                async handler() {
                    this.validating_pause_type = !0
                },
                deep: !0
            },
            end_date: {
                async handler() {
                    this.validating_end_date = !0
                },
                deep: !0
            }
        },
        mounted() {},
        methods: {
            back() {
                return this.main()
            },
            main() {
                return this.$root.loading = !0, window.location = this.main_url
            },
            validate() {
                return ("scheduled" != this.pause_type || !("" == this.start_date || new Date >= new Date(this.start_date))) && (this.pause_type.length > 0 && this.duration > 0)
            },
            submit() {
                this.validating_pause_type = !0, this.validating_end_date = !0, 1 == this.validate() && this.$root.submit("pause-form", !0)
            },
            getMinDate: () => (new Date).toJSON().slice(0, 10)
        }
    },
    Nd = S("i", {
        class: "bi bi-arrow-left me-1"
    }, null, -1),
    Rd = {
        class: "page-title mt-2 mb-4 my-lg-4"
    },
    Kd = ["action"],
    Jd = {
        class: "mb-3"
    },
    Wd = {
        class: "form-label"
    },
    zd = S("span", {
        class: "text-danger"
    }, "*", -1),
    Yd = ["value"],
    Gd = {
        class: "row"
    },
    Xd = {
        class: "col-auto my-3 pe-0"
    },
    Qd = {
        class: "col-auto my-3 px-0"
    },
    Zd = {
        class: "col-auto my-3 px-0"
    },
    em = ["min"],
    tm = {
        key: 0,
        class: "text-danger"
    },
    rm = {
        key: 1,
        class: "text-danger"
    },
    sm = {
        key: 2,
        class: "text-danger"
    },
    am = {
        class: "mb-3"
    },
    om = {
        class: "form-label"
    },
    im = S("span", {
        class: "text-danger"
    }, "*", -1),
    nm = S("br", null, null, -1),
    lm = ["value"],
    cm = {
        class: "row"
    },
    _m = {
        class: "col-auto my-3 pe-0"
    },
    um = {
        class: "col-auto my-3 px-0"
    },
    dm = {
        class: "col-auto my-3 px-0"
    },
    mm = {
        key: 0,
        class: "text-muted"
    },
    hm = {
        key: 1,
        class: "text-danger"
    },
    pm = {
        class: "mb-3 my-4"
    },
    gm = ["disabled"];
const ym = Ue(Id, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g(y, null, [S("button", {
                class: "btn btn-light",
                onClick: t[0] || (t[0] = (...e) => o.back && o.back(...e))
            }, [Nd, A(" " + v(e.trans.get("Back")), 1)]), S("h4", Rd, v(e.trans.get("Pause Subscription")), 1), S("p", null, v(e.trans.get("When your subscription is paused, you will not be able to access any features and will not be charged. Your subscription will automatically resume after duration ends.")), 1), S("form", {
                enctype: "multipart/form-data",
                action: r.submit_url,
                role: "form",
                method: "post",
                id: "pause-form",
                "accept-charset": "UTF-8"
            }, [S("div", Jd, [S("label", Wd, [A(v(e.trans.get("When Would You Like To Pause?")) + " ", 1), zd]), S("input", {
                value: r.subscription_id,
                type: "hidden",
                id: "subscription_id",
                name: "subscription_id"
            }, null, 8, Yd), F(S("input", {
                "onUpdate:modelValue": t[1] || (t[1] = e => a.pause_type = e),
                type: "hidden",
                id: "pause_type",
                name: "pause_type"
            }, null, 512), [
                [U, a.pause_type]
            ]), S("div", Gd, [S("div", Xd, [S("button", {
                type: "button",
                class: w(["btn me-2 immediately-pause-option", ["immediately" == a.pause_type ? "btn-outline-primary" : "btn-outline-secondary"]]),
                onClick: t[2] || (t[2] = e => a.pause_type = "immediately")
            }, v(e.trans.get("Immediately")), 3)]), S("div", Qd, [S("button", {
                type: "button",
                class: w(["btn me-2 scheduled-pause-option", ["scheduled" == a.pause_type ? "btn-outline-primary" : "btn-outline-secondary"]]),
                onClick: t[3] || (t[3] = e => a.pause_type = "scheduled")
            }, v(e.trans.get("On Scheduled Date")), 3)]), S("div", Zd, ["scheduled" == a.pause_type ? F((b(), g("input", {
                key: 0,
                class: "form-control w-auto",
                type: "date",
                "onUpdate:modelValue": t[4] || (t[4] = e => a.start_date = e),
                name: "start_date",
                id: "start_date",
                min: o.getMinDate()
            }, null, 8, em)), [
                [U, a.start_date]
            ]) : T("", !0)])]), a.validating_pause_type ? (b(), g(y, {
                key: 0
            }, [a.pause_type.length <= 0 ? (b(), g("p", tm, v(e.trans.get("Please choose when would you like to pause.")), 1)) : "scheduled" == a.pause_type && "" == a.start_date ? (b(), g("p", rm, v(e.trans.get("Please set a scheduled date you like to pause.")), 1)) : "scheduled" == a.pause_type && new Date >= new Date(this.start_date) ? (b(), g("p", sm, v(e.trans.get("Scheduled date must be more than current :date.", {
                date: (new Date).toLocaleDateString("en-US")
            })), 1)) : T("", !0)], 64)) : T("", !0)]), S("div", am, [S("label", om, [A(v(e.trans.get("Choose The Duration")) + " ", 1), im]), nm, F(S("input", {
                "onUpdate:modelValue": t[5] || (t[5] = e => a.duration = e),
                type: "hidden",
                id: "duration",
                name: "duration"
            }, null, 512), [
                [U, a.duration]
            ]), S("input", {
                type: "hidden",
                id: "end_date",
                name: "end_date",
                value: o.end_date ? o.end_date.toISOString() : ""
            }, null, 8, lm), S("div", cm, [S("div", _m, [S("button", {
                type: "button",
                class: w(["btn me-2 one-month-duration", [1 == a.duration ? "btn-outline-primary" : "btn-outline-secondary"]]),
                onClick: t[6] || (t[6] = e => a.duration = 1)
            }, v(e.trans.get(":count Month", {
                count: 1
            })), 3)]), S("div", um, [S("button", {
                type: "button",
                class: w(["btn me-2 two-month-duration", [2 == a.duration ? "btn-outline-primary" : "btn-outline-secondary"]]),
                onClick: t[7] || (t[7] = e => a.duration = 2)
            }, v(e.trans.get(":count Months", {
                count: 2
            })), 3)]), S("div", dm, [S("button", {
                type: "button",
                class: w(["btn me-2 three-month-duration", [3 == a.duration ? "btn-outline-primary" : "btn-outline-secondary"]]),
                onClick: t[8] || (t[8] = e => a.duration = 3)
            }, v(e.trans.get(":count Months", {
                count: 3
            })), 3)])]), a.validating_end_date ? (b(), g(y, {
                key: 0
            }, [o.end_date ? (b(), g("p", mm, v(e.trans.get("End date is :date.", {
                date: o.end_date_formatted
            })), 1)) : (b(), g("p", hm, v(e.trans.get("Please choose duration would you like to pause.")), 1))], 64)) : T("", !0)]), S("div", pm, [S("button", {
                type: "button",
                class: "btn btn-outline-dark me-2",
                onClick: t[9] || (t[9] = (...e) => o.main && o.main(...e))
            }, v(e.trans.get("Cancel")), 1), S("button", {
                type: "button",
                class: "btn btn-primary pause-button",
                disabled: 0 == o.validate(),
                onClick: t[10] || (t[10] = e => o.submit())
            }, v(e.trans.get("Pause My Subscription")), 9, gm)])], 8, Kd)], 64)
        }]
    ]),
    fm = {
        components: {},
        emits: ["loading", "process", "paymentReady", "hasError", "hideError", "showError", "processSuccess"],
        props: {
            token_url: {
                type: String,
                required: !0,
                default: ""
            },
            payment_method: {
                type: String,
                required: !1,
                default: "visa_master"
            },
            currency: {
                type: String,
                required: !1,
                default: "USD"
            },
            billing_card: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            billing_id: {
                type: String,
                required: !1,
                default: ""
            },
            subscription_id: {
                type: String,
                required: !1,
                default: ""
            },
            card_id: {
                type: String,
                required: !1,
                default: ""
            },
            default_payment_source: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            customer_id: {
                type: String,
                required: !1,
                default: ""
            },
            name: {
                type: String,
                required: !1,
                default: ""
            },
            email: {
                type: String,
                required: !1,
                default: ""
            },
            is_subscribe: {
                type: Boolean,
                required: !0,
                default: !1
            },
            plan: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            access_token: {
                type: String,
                required: !1,
                default: ""
            },
            process_url: {
                type: String,
                required: !0,
                default: ""
            },
            routes: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            allow_subscription: {
                type: Boolean,
                required: !1,
                default: !1
            },
            due_amount: {
                type: Number,
                required: !1,
                default: 0
            },
            child_account: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            daily_limit: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            due_amount_url: {
                type: String,
                required: !0,
                default: ""
            },
            free_trial: {
                type: Boolean,
                required: !1,
                default: !1
            },
            skip_trial: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            braintree_token: "",
            braintree_three_d_secure_instance: null,
            braintree_hosted_instance: null,
            device_data: "",
            error: null,
            loading: !0,
            process: !1,
            nouce: "",
            hasError: !1,
            enable_3d: !1,
            payment_source: "",
            paymentReady: !1,
            card_holder_name: "",
            valid_card_holder_name: !0,
            valid_card_number: !0,
            valid_card_expiry: !0,
            valid_card_cvv: !0,
            validating_card_holder_name: !1,
            validating_card_number: !1
        }),
        watch: {
            loading: {
                handler(e) {
                    this.$emit("loading", e)
                },
                deep: !0
            },
            process: {
                handler(e) {
                    this.$emit("process", e)
                },
                deep: !0
            },
            hasError: {
                handler(e) {
                    this.$emit("hasError", e)
                },
                deep: !0
            },
            paymentReady: {
                handler(e) {
                    this.$emit("paymentReady", e)
                },
                deep: !0
            },
            braintree_token: {
                handler(e) {
                    e && this.bindElements()
                },
                deep: !0
            },
            card_holder_name: {
                async handler() {
                    this.valid_card_holder_name = this.validCardHolderName()
                },
                deep: !0
            }
        },
        beforeUnmount() {
            this.braintree_hosted_instance.teardown()
        },
        async mounted() {
            this.loading = !0, this.$emit("loading", !0);
            let e = {
                payment_gateway: "braintree"
            };
            this.customer_id && (e = {
                payment_gateway: "braintree",
                payment_source: this.default_payment_source
            });
            var t = await axios.post(this.token_url, e, {
                headers: {
                    "Content-Type": "application/json"
                }
            });
            this.loading = !1, t.data && (t.data.token && (this.braintree_token = t.data.token), t.data.payment_source && (this.payment_source = t.data.payment_source))
        },
        methods: {
            validCardHolderName() {
                return this.validating_card_holder_name = !0, this.card_holder_name.length > 0
            },
            bindElements() {
                X.create({
                    authorization: this.braintree_token
                }).then((e => {
                    var t;
                    if (this.is_subscribe && "" != this.customer_id && "" != (null == (t = this.billing_card) ? void 0 : t.number)) return Promise.all([Q.create({
                        client: e,
                        kount: !0
                    }).then((e => {
                        this.device_data = e.deviceData
                    }))]);
                    var r = {
                        client: e,
                        styles: {
                            input: {
                                color: "#444",
                                "font-size": "1rem",
                                "line-height": "1.5"
                            },
                            ":focus": {},
                            ".valid": {}
                        },
                        fields: {
                            number: {
                                selector: "#card-number-braintree"
                            },
                            cvv: {
                                selector: "#card-cvv-braintree"
                            },
                            expirationDate: {
                                selector: "#card-expiry-braintree",
                                placeholder: "MM / YYYY"
                            }
                        }
                    };
                    return Promise.all([Z.create({
                        authorization: this.braintree_token,
                        version: 2
                    }).then((e => {
                        this.braintree_three_d_secure_instance = e
                    })), ee.create(r).then((e => {
                        this.braintree_hosted_instance = e;
                        let t = document.querySelectorAll("#card-number-braintree, #card-expiry-braintree, #card-cvv-braintree");
                        for (var r = 0; r < t.length; r++) t[r].classList.remove("is-invalid"), t[r].classList.remove("is-valid");
                        this.braintree_hosted_instance.on("blur", (e => {
                            if (!e.fields.number.isEmpty) {
                                var t = e.fields[e.emittedBy],
                                    r = e.cards[0] ?? "";
                                this.hostedFieldsValidate(t, r)
                            }
                        })), this.braintree_hosted_instance.on("inputSubmitRequest", (e => {
                            this.checkout()
                        })), this.braintree_hosted_instance.on("empty", (e => {
                            var t = e.fields[e.emittedBy];
                            document.getElementById(t.container.id).classList.remove("is-invalid"), document.getElementById(t.container.id).classList.remove("is-valid"), this.checkHasError()
                        }))
                    })), Q.create({
                        client: e,
                        kount: !0
                    }).then((e => {
                        this.device_data = e.deviceData
                    }))])
                })).then((() => {
                    this.loading = !1
                })).catch((e => {
                    this.loading = !1, bsDialogs.create(e, [{
                        classes: "btn-danger mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "error").then((e => {}))
                }))
            },
            hostedFieldsValidate(e, t) {
                if (this.hideError(), "card-number-braintree" == e.container.id && (this.validating_card_number = !0), !e.isEmpty && e.isValid && t && "american-express" == t.type && t.supported) {
                    switch (document.getElementById(e.container.id).classList.remove("is-invalid"), document.getElementById(e.container.id).classList.add("is-valid"), e.container.id) {
                        case "card-number-braintree":
                            this.valid_card_number = !0;
                            break;
                        case "card-cvv-braintree":
                            this.valid_card_cvv = !0;
                            break;
                        case "card-expiry-braintree":
                            this.valid_card_expiry = !0
                    }
                    this.checkHasError()
                } else switch (document.getElementById(e.container.id).classList.remove("is-valid"), document.getElementById(e.container.id).classList.add("is-invalid"), this.paymentReady = !1, e.container.id) {
                    case "card-number-braintree":
                        this.valid_card_number = !1;
                        break;
                    case "card-cvv-braintree":
                        this.valid_card_cvv = !1;
                        break;
                    case "card-expiry-braintree":
                        this.valid_card_expiry = !1
                }
            },
            checkHasError() {
                this.$nextTick((() => {
                    let e = document.querySelectorAll("#checkout-form .is-invalid");
                    if (!e || e.length <= 0) {
                        let e = document.querySelectorAll("#checkout-form .is-valid");
                        e && 4 == e.length && this.valid_card_holder_name && this.valid_card_number && this.valid_card_expiry && this.valid_card_cvv ? this.paymentReady = !0 : this.paymentReady = !1
                    } else this.paymentReady = !1
                }))
            },
            async checkout() {
                var e;
                if (this.braintree_token)
                    if (this.is_subscribe && "" != this.customer_id && "" != (null == (e = this.billing_card) ? void 0 : e.number)) {
                        this.loading = !0, this.process = !0;
                        try {
                            var t = {
                                    billing_id: this.billing_id,
                                    name: this.name,
                                    email: this.email,
                                    device_data: this.device_data,
                                    token: this.access_token,
                                    payment_source: this.payment_source,
                                    currency: this.currency
                                },
                                r = await axios.post(this.process_url, t, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    }
                                });
                            this.processSuccess(r), this.loading = !1, this.process = !1
                        } catch (o) {
                            this.loading = !1, this.process = !1, this.catchError(o)
                        }
                    } else {
                        if (!this.paymentReady) return !1;
                        if (this.braintree_hosted_instance) {
                            var s = this.braintree_hosted_instance.getState(),
                                a = !1;
                            this.valid_card_holder_name && (a = Object.keys(s.fields).every((e => (this.hostedFieldsValidate(s.fields[e], s.cards[0] ?? ""), !this.hasError)))), a && (this.loading = !0, this.braintree_hosted_instance.tokenize({
                                cardholderName: this.card_holder_name
                            }).then((async e => {
                                if (this.enable_3d && this.due_amount > 0) this.braintree_three_d_secure_instance.on("lookup-complete", (async (e, t) => {
                                    t()
                                })), this.braintree_three_d_secure_instance.verifyCard({
                                    amount: this.due_amount,
                                    nonce: e.nonce,
                                    bin: e.details.bin,
                                    email: this.email,
                                    billingAddress: {
                                        surname: this.name
                                    }
                                }).then((async e => {
                                    if (!e.liabilityShifted && !e.liabilityShiftPossible) return this.loading = !1, this.showError(), !1;
                                    try {
                                        this.process = !0;
                                        var t = {
                                                billing_id: this.billing_id,
                                                card_id: this.card_id,
                                                name: this.name,
                                                email: this.email,
                                                braintree_token: e.nonce,
                                                device_data: this.device_data,
                                                token: this.access_token,
                                                payment_source: this.payment_source,
                                                currency: this.currency
                                            },
                                            r = await axios.post(this.process_url, t, {
                                                headers: {
                                                    "Content-Type": "application/json"
                                                }
                                            });
                                        this.processSuccess(r)
                                    } catch (o) {
                                        this.loading = !1, this.process = !1, this.catchError(o)
                                    }
                                })).catch((e => {
                                    this.loading = !1, this.showError()
                                }));
                                else try {
                                    this.process = !0;
                                    var t = {
                                            billing_id: this.billing_id,
                                            card_id: this.card_id,
                                            name: this.name,
                                            email: this.email,
                                            braintree_token: e.nonce,
                                            device_data: this.device_data,
                                            token: this.access_token,
                                            payment_source: this.payment_source,
                                            currency: this.currency
                                        },
                                        r = await axios.post(this.process_url, t, {
                                            headers: {
                                                "Content-Type": "application/json"
                                            }
                                        });
                                    this.processSuccess(r)
                                } catch (o) {
                                    this.loading = !1, this.process = !1, this.catchError(o)
                                }
                            })).catch((e => {
                                this.loading = !1, this.showError()
                            })))
                        } else this.bindElements(), this.showError()
                    }
                else this.showError()
            },
            hideError() {
                this.$emit("hideError")
            },
            showError(e = "") {
                this.$emit("showError", e)
            },
            processSuccess(e) {
                this.$emit("processSuccess", e)
            },
            catchError(e) {
                this.$nextTick((() => {
                    if (this.loading = !1, e.response)
                        if (e.response.data.errors) {
                            var t = e.response.data.errors;
                            for (var r in t) t.hasOwnProperty(r) && t[r].forEach((e => {
                                this.error += "<li>" + e + "</li>"
                            }))
                        } else e.response.data.message ? this.error = e.response.data.message : e.response.statusText ? this.error = e.response.statusText : this.error = e.response.data;
                    else e.request ? this.error = e.request : this.error = e.message;
                    this.error && (417 == e.response.status ? this.showError(this.error) : bsDialogs.create(this.error, [{
                        classes: "btn-danger mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "error").then((e => {})))
                }))
            }
        }
    },
    wm = {
        key: 0,
        class: "checkout-form-current-card-details my-3"
    },
    bm = {
        class: "row"
    },
    vm = {
        key: 0,
        class: "checkout-form-current-card-number mb-3 col-md-12"
    },
    km = {
        class: "form-label",
        for: "card-holder-name-braintree"
    },
    xm = S("span", {
        class: "text-danger"
    }, "*", -1),
    Cm = ["value"],
    Sm = {
        class: "checkout-form-current-card-number mb-3 col-md-8"
    },
    Tm = {
        class: "form-label",
        for: "card-number-braintree"
    },
    Fm = S("span", {
        class: "text-danger"
    }, "*", -1),
    qm = ["value"],
    Em = {
        class: "checkout-form-current-card-expiration-date mb-3 col-md-4"
    },
    Um = {
        class: "form-label",
        for: "card-expiry-braintree"
    },
    Mm = S("span", {
        class: "text-danger"
    }, "*", -1),
    Am = ["value"],
    Pm = {
        key: 1,
        class: "checkout-form-new-payment-details"
    },
    Lm = {
        key: 0,
        class: "alert alert-danger",
        role: "alert"
    },
    Bm = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-exclamation-circle-fill me-2"
    })], -1),
    $m = {
        class: "checkout-form-card-holder mb-3 position-relative"
    },
    Dm = {
        class: "form-label",
        for: "card-holder-name-braintree"
    },
    jm = S("span", {
        class: "text-danger"
    }, "*", -1),
    Om = {
        key: 0,
        class: "invalid-feedback"
    },
    Vm = {
        class: "checkout-form-card-number mb-3 position-relative"
    },
    Hm = {
        class: "form-label",
        for: "card-number-braintree"
    },
    Im = S("span", {
        class: "text-danger"
    }, "*", -1),
    Nm = S("div", {
        id: "card-number-braintree",
        class: "checkout-form-card-number-value form-control form-control"
    }, null, -1),
    Rm = {
        key: 0,
        class: "invalid-feedback"
    },
    Km = {
        class: "checkout-form-card-expiration-date row"
    },
    Jm = {
        class: "mb-3 col-md-6"
    },
    Wm = {
        class: "form-label",
        for: "card-expiry-braintree"
    },
    zm = S("span", {
        class: "text-danger"
    }, "*", -1),
    Ym = S("div", {
        id: "card-expiry-braintree",
        class: "checkout-form-card-expiration-date-value form-control form-control"
    }, null, -1),
    Gm = {
        key: 0,
        class: "invalid-feedback"
    },
    Xm = {
        class: "checkout-form-card-cvv mb-3 col-md-6"
    },
    Qm = S("label", {
        class: "form-label",
        for: "card-cvv-braintree"
    }, [A("CVV "), S("span", {
        class: "text-danger"
    }, "*")], -1),
    Zm = S("div", {
        id: "card-cvv-braintree",
        class: "checkout-form-card-cvv-value form-control form-control"
    }, null, -1),
    eh = {
        key: 0,
        class: "invalid-feedback"
    },
    th = {
        key: 2,
        class: "d-flex justify-content-between align-items-center"
    },
    rh = {
        class: "text-muted"
    },
    sh = S("i", {
        class: "bi bi-lock me-1"
    }, null, -1);
const ah = Ue(fm, [
        ["render", function(e, t, r, s, a, o) {
            var i;
            return b(), g("div", null, [S("form", {
                id: "checkout-form",
                onSubmit: t[2] || (t[2] = P(((...e) => o.checkout && o.checkout(...e)), ["prevent"])),
                role: "form",
                method: "post",
                "accept-charset": "UTF-8",
                class: "checkout-form-braintree checkout-form"
            }, [r.is_subscribe && "" != r.customer_id && "" != (null == (i = r.billing_card) ? void 0 : i.number) ? (b(), g("div", wm, [S("div", bm, [r.billing_card.name && "" != r.billing_card.name ? (b(), g("div", vm, [S("label", km, [A(v(e.trans.get("Name On Card")) + " ", 1), xm]), S("input", {
                maxlength: "24",
                disabled: "disabled",
                value: r.billing_card.name,
                type: "text",
                class: "checkout-form-current-card-holder-name-value form-control form-control"
            }, null, 8, Cm)])) : T("", !0), S("div", Sm, [S("label", Tm, [A(v(e.trans.get("Card Number")) + " " + v("visa_master" == r.payment_method ? "(Visa or Mastercard)" : "(American Express)") + " ", 1), Fm]), S("input", {
                disabled: "disabled",
                value: r.billing_card.number,
                type: "text",
                class: "checkout-form-current-card-number-value form-control form-control"
            }, null, 8, qm)]), S("div", Em, [S("label", Um, [A(v(e.trans.get("Expiration")) + " ", 1), Mm]), S("input", {
                disabled: "disabled",
                value: r.billing_card.expired,
                type: "text",
                class: "checkout-form-current-card-expiration-date-value form-control form-control"
            }, null, 8, Am)])])])) : (b(), g("div", Pm, [a.hasError ? (b(), g("div", Lm, [S("table", null, [S("tbody", null, [Bm, S("td", null, v(e.trans.get("Please verify that you have entered the correct payment details.")), 1)])])])) : T("", !0), S("div", $m, [S("label", Dm, [A(v(e.trans.get("Name On Card")) + " ", 1), jm]), F(S("input", {
                maxlength: "24",
                onKeyup: t[0] || (t[0] = M(P(((...e) => o.checkout && o.checkout(...e)), ["prevent"]), ["enter"])),
                autocomplete: "cc-name",
                type: "text",
                id: "card-holder-name-braintree",
                "onUpdate:modelValue": t[1] || (t[1] = e => a.card_holder_name = e),
                class: w(["checkout-form-card-holder-name-value form-control", [a.validating_card_holder_name ? [a.valid_card_holder_name ? "is-valid" : "is-invalid"] : ""]]),
                name: "card_holder_name",
                required: ""
            }, null, 34), [
                [U, a.card_holder_name, void 0, {
                    trim: !0
                }]
            ]), a.validating_card_holder_name && 0 == a.valid_card_holder_name ? (b(), g("div", Om, v(e.trans.get("Card holder name is required")), 1)) : T("", !0)]), S("div", Vm, [S("label", Hm, [A(v(e.trans.get("Card Number")) + " " + v("visa_master" == r.payment_method ? "(Visa or Mastercard)" : "(American Express)") + " ", 1), Im]), Nm, 0 == a.valid_card_number ? (b(), g("div", Rm, v(e.trans.get("Sorry, the provided card number appears to be invalid.")), 1)) : T("", !0)]), F(S("div", Km, [S("div", Jm, [S("label", Wm, [A(v(e.trans.get("Expiration")) + " ", 1), zm]), Ym, 0 == a.valid_card_expiry ? (b(), g("div", Gm, v(e.trans.get("Card expiry is invalid.")), 1)) : T("", !0)]), S("div", Xm, [Qm, Zm, 0 == a.valid_card_cvv ? (b(), g("div", eh, v(e.trans.get("Card CVV is invalid.")), 1)) : T("", !0)])], 512), [
                [B, a.validating_card_number && a.valid_card_number]
            ])])), r.is_subscribe ? (b(), g("div", th, [S("small", rh, [sh, A(" " + v(e.trans.get("We use Braintree to handle payments and card information securely. Braintree is a Validated Level 1 PCI DSS Compliant Service Provider. All pages on our website are secured with modern SSL/TLS encryption.")), 1)])])) : T("", !0)], 32)])
        }]
    ]),
    oh = {
        components: {},
        emits: ["loading", "process", "paymentReady", "hasError", "hideError", "showError", "processSuccess", "processDueAmount", "processSubscriptionNote"],
        props: {
            token_url: {
                type: String,
                required: !0,
                default: ""
            },
            payment_method: {
                type: String,
                required: !1,
                default: "visa_master"
            },
            currency: {
                type: String,
                required: !1,
                default: "USD"
            },
            billing_card: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            billing_id: {
                type: String,
                required: !1,
                default: ""
            },
            subscription_id: {
                type: String,
                required: !1,
                default: ""
            },
            card_id: {
                type: String,
                required: !1,
                default: ""
            },
            default_payment_source: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            customer_id: {
                type: String,
                required: !1,
                default: ""
            },
            name: {
                type: String,
                required: !1,
                default: ""
            },
            email: {
                type: String,
                required: !1,
                default: ""
            },
            primary_payment: {
                type: Boolean,
                required: !1,
                default: !1
            },
            is_subscribe: {
                type: Boolean,
                required: !0,
                default: !1
            },
            plan: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            access_token: {
                type: String,
                required: !1,
                default: ""
            },
            process_url: {
                type: String,
                required: !0,
                default: ""
            },
            routes: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            is_captcha: {
                type: Boolean,
                required: !1,
                default: !1
            },
            allow_subscription: {
                type: Boolean,
                required: !1,
                default: !1
            },
            due_amount: {
                type: Number,
                required: !1,
                default: 0
            },
            child_account: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            daily_limit: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            due_amount_url: {
                type: String,
                required: !0,
                default: ""
            },
            free_trial: {
                type: Boolean,
                required: !1,
                default: !1
            },
            skip_trial: {
                type: Boolean,
                required: !1,
                default: !1
            },
            hide_form: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            stripe_token: "",
            card_number: null,
            card_expiry: null,
            card_cvc: null,
            device_data: "",
            error: null,
            loading: !0,
            process: !1,
            nouce: "",
            stripe_instance: null,
            hasError: !1,
            secure_url: "",
            captcha_id: "",
            captcha_token: "",
            invalid_card_url: "/invalid-card",
            payment_source: "",
            paymentReady: !1,
            card_holder_name: "",
            valid_card_holder_name: !0,
            valid_card_number: !0,
            valid_card_expiry: !0,
            valid_card_cvv: !0,
            validating_card_holder_name: !1,
            validating_card_number: !1,
            validating_card_expiry: !1,
            validating_card_cvv: !1
        }),
        watch: {
            loading: {
                handler(e) {
                    this.$emit("loading", e)
                },
                deep: !0
            },
            process: {
                handler(e) {
                    this.$emit("process", e)
                },
                deep: !0
            },
            hasError: {
                handler(e) {
                    this.$emit("hasError", e)
                },
                deep: !0
            },
            paymentReady: {
                handler(e) {
                    this.$emit("paymentReady", e)
                },
                deep: !0
            },
            stripe_token: {
                async handler(e) {
                    var t;
                    e && (this.is_subscribe && "" != this.customer_id && "" != (null == (t = this.billing_card) ? void 0 : t.number) ? this.loading = !1 : this.bindElements())
                },
                deep: !0
            },
            plan: {
                async handler() {
                    this.loading = !0, await this.calculateDueAmount(), this.loading = !1
                },
                deep: !0
            },
            child_account: {
                async handler() {
                    this.loading = !0, await this.calculateDueAmount(), this.loading = !1
                },
                deep: !0
            },
            daily_limit: {
                async handler() {
                    this.loading = !0, await this.calculateDueAmount(), this.loading = !1
                },
                deep: !0
            },
            card_holder_name: {
                async handler() {
                    this.valid_card_holder_name = this.validCardHolderName(), this.checkHasError()
                },
                deep: !0
            }
        },
        async mounted() {
            this.loading = !0, this.$emit("loading", !0);
            const e = document.createElement("script");
            e.src = "https://challenges.example.com/turnstile/v0/api.js", this.is_captcha && (e.src += "?onload=onloadTurnstileCallback", window.onloadTurnstileCallback = this.captcha), e.async = !0, e.defer = !0, document.head.appendChild(e), await this.loadToken(), window.addEventListener("message", this.handleMessage, !1)
        },
        methods: {
            validCardHolderName() {
                return this.validating_card_holder_name = !0, this.card_holder_name.length > 0
            },
            calculateDueAmount() {
                return new Promise((async (e, t) => {
                    try {
                        if (this.is_subscribe && this.payment_source)
                            if (this.customer_id && this.subscription_id) {
                                var r = {
                                        payment_source: this.payment_source,
                                        plan: this.plan.code,
                                        child_account: this.child_account,
                                        daily_limit: this.daily_limit,
                                        subscription_id: this.subscription_id,
                                        currency: this.currency,
                                        customer_id: this.customer_id
                                    },
                                    s = await axios.post(this.due_amount_url, r, {
                                        headers: {
                                            "Content-Type": "application/json"
                                        }
                                    });
                                s.data && void 0 !== s.data.due_amount && (this.processDueAmount(s.data.due_amount), this.processSubscriptionNote(s.data.subscription_note))
                            } else if (this.plan && this.plan.code && this.plan.code.includes("api") && this.daily_limit > 100) {
                            var a = this.plan.value[this.currency],
                                o = this.plan.quota_price[this.currency];
                            this.daily_limit >= this.plan.daily_limit ? a += (this.daily_limit - this.plan.daily_limit) * o : a -= (this.plan.daily_limit - this.daily_limit) * o, this.processDueAmount(a)
                        } else if (this.plan && this.plan.code && this.plan.code.includes("pro") && this.child_account > 1) {
                            a = this.plan.value[this.currency];
                            var i = this.plan.account_price[this.currency];
                            this.child_account >= this.plan.child_account ? a += (this.child_account - this.plan.child_account) * i : a -= (this.plan.child_account - this.child_account) * i, this.processDueAmount(a)
                        }
                        e(!0)
                    } catch (n) {
                        t(Error(n))
                    }
                }))
            },
            captcha() {
                this.captcha_id ? turnstile.reset(this.captcha_id) : this.captcha_id = turnstile.render("#cf-turnstile", {
                    sitekey: window.turnstile_key,
                    action: "checkout",
                    callback: e => {
                        this.captcha_token = e
                    },
                    "expired-callback": () => {
                        turnstile.reset(this.captcha_id)
                    }
                })
            },
            removeCaptcha() {
                this.captcha_id && (turnstile.remove(this.captcha_id), this.captcha_id = "")
            },
            async loadToken() {
                var e = {
                    payment_gateway: "stripe"
                };
                ("amex" == this.payment_method || this.customer_id) && (e = {
                    payment_gateway: "stripe",
                    payment_source: this.default_payment_source
                });
                var t = await axios.post(this.token_url, e, {
                    headers: {
                        "Content-Type": "application/json"
                    }
                });
                t.data && (t.data.token && (this.stripe_token = t.data.token), t.data.payment_source && (this.payment_source = t.data.payment_source))
            },
            bindElements() {
                this.stripe_instance = Stripe(this.stripe_token);
                let e = document.querySelectorAll("#card-number-stripe, #card-expiry-stripe, #card-cvv-stripe");
                for (var t = 0; t < e.length; t++) e[t].classList.remove("is-invalid"), e[t].classList.remove("is-valid");
                var r = this.stripe_instance.elements(),
                    s = {
                        style: {
                            base: {
                                color: "#444",
                                fontSize: "16px",
                                lineHeight: "1.5"
                            },
                            invalid: {
                                color: "#444"
                            }
                        }
                    },
                    a = r.create("cardNumber", {
                        ...s,
                        placeholder: ""
                    });
                a.mount("#card-number-stripe"), a.addEventListener("ready", (e => {
                    this.loading = !1, e.error && e.empty || (this.paymentReady = !1)
                })), a.addEventListener("change", (e => {
                    this.elementsFieldValidate("card-number-stripe", e)
                })), a.addEventListener("focus", (e => {
                    this.elementsFieldFocus("card-number-stripe", e)
                })), this.card_number = a;
                var o = r.create("cardExpiry", s);
                o.mount("#card-expiry-stripe"), o.addEventListener("change", (e => {
                    this.elementsFieldValidate("card-expiry-stripe", e)
                })), o.addEventListener("focus", (e => {
                    this.elementsFieldFocus("card-expiry-stripe", e)
                })), this.card_expiry = o;
                var i = r.create("cardCvc", {
                    ...s,
                    placeholder: ""
                });
                i.mount("#card-cvv-stripe"), i.addEventListener("change", (e => {
                    this.elementsFieldValidate("card-cvv-stripe", e)
                })), i.addEventListener("focus", (e => {
                    this.elementsFieldFocus("card-cvv-stripe", e)
                })), this.card_cvc = i
            },
            elementsFieldFocus(e, t) {
                switch (e) {
                    case "card-number-stripe":
                        this.validating_card_number = !1;
                        break;
                    case "card-expiry-stripe":
                        this.validating_card_expiry = !1;
                        break;
                    case "card-cvv-stripe":
                        this.validating_card_cvv = !1
                }
            },
            elementsFieldBlur(e, t) {
                var r = !1;
                switch (e) {
                    case "card-number-stripe":
                        this.validating_card_number = !0, this.valid_card_number && (r = !0);
                        break;
                    case "card-expiry-stripe":
                        this.validating_card_expiry = !0, this.valid_card_expiry && (r = !0);
                        break;
                    case "card-cvv-stripe":
                        this.validating_card_cvv = !0, this.valid_card_cvv && (r = !0)
                }
                r ? (document.getElementById(e).classList.remove("is-invalid"), document.getElementById(e).classList.add("is-valid"), this.checkHasError()) : (document.getElementById(e).classList.remove("is-valid"), document.getElementById(e).classList.add("is-invalid"), this.paymentReady = !1)
            },
            elementsFieldValidate(e, t) {
                if (this.hideError(), "card-number-stripe" == e && ("amex" == this.payment_method && "amex" != t.brand && "jcb" != t.brand || "amex" != this.payment_method && ("amex" == t.brand || "jcb" == t.brand))) return this.card_number.addEventListener("blur", (e => {
                    this.elementsFieldBlur("card-number-stripe", e)
                })), this.valid_card_number = !1, void(this.paymentReady = !1);
                if (t.empty || !t.complete || t.error) {
                    switch (e) {
                        case "card-number-stripe":
                            this.card_number.addEventListener("blur", (e => {
                                this.elementsFieldBlur("card-number-stripe", e)
                            })), this.valid_card_number = !1;
                            break;
                        case "card-expiry-stripe":
                            this.card_expiry.addEventListener("blur", (e => {
                                this.elementsFieldBlur("card-expiry-stripe", e)
                            })), this.valid_card_expiry = !1;
                            break;
                        case "card-cvv-stripe":
                            this.card_cvc.addEventListener("blur", (e => {
                                this.elementsFieldBlur("card-cvv-stripe", e)
                            })), this.valid_card_cvv = !1
                    }
                    this.paymentReady = !1
                } else {
                    switch (e) {
                        case "card-number-stripe":
                            this.valid_card_number = !0, document.getElementById(e).classList.remove("is-invalid"), document.getElementById(e).classList.add("is-valid");
                            break;
                        case "card-expiry-stripe":
                            this.valid_card_expiry = !0, document.getElementById(e).classList.remove("is-invalid"), document.getElementById(e).classList.add("is-valid");
                            break;
                        case "card-cvv-stripe":
                            this.valid_card_cvv = !0, document.getElementById(e).classList.remove("is-invalid"), document.getElementById(e).classList.add("is-valid")
                    }
                    this.checkHasError()
                }
            },
            checkHasError() {
                this.$nextTick((() => {
                    let e = document.querySelectorAll("#checkout-form .is-invalid");
                    if (!e || e.length <= 0) {
                        let e = document.querySelectorAll("#checkout-form .is-valid");
                        e && 4 == e.length && this.valid_card_holder_name && this.valid_card_number && this.valid_card_expiry && this.valid_card_cvv ? this.paymentReady = !0 : this.paymentReady = !1
                    } else this.paymentReady = !1
                }))
            },
            async checkout() {
                var e;
                if (this.hideError(), this.stripe_token)
                    if (this.is_subscribe && "" != this.customer_id && "" != (null == (e = this.billing_card) ? void 0 : e.number)) {
                        this.loading = !0, this.process = !0;
                        try {
                            var t = {
                                    billing_id: this.billing_id,
                                    name: this.name,
                                    email: this.email,
                                    stripe_token: this.stripe_token,
                                    token: this.access_token,
                                    payment_source: this.payment_source,
                                    primary_payment: this.primary_payment,
                                    currency: this.currency,
                                    child_account: this.child_account,
                                    daily_limit: this.daily_limit,
                                    skip_trial: this.skip_trial
                                },
                                r = await axios.post(this.process_url, t, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    }
                                });
                            r.data.secure_url ? (this.loading = !1, this.process = !1, this.$nextTick((() => {
                                this.secure_url = r.data.secure_url
                            }))) : r.data.switch_gateway ? (this.loading = !1, this.process = !1, this.stripe_token = r.data.switch_gateway.token, this.payment_source = r.data.switch_gateway.payment_source, this.showError()) : (this.processSuccess(r), this.loading = !1, this.process = !1)
                        } catch (s) {
                            await this.loadToken(), this.loading = !1, this.process = !1, this.catchError(s)
                        }
                    } else {
                        if (!this.paymentReady) return !1;
                        this.stripe_instance ? (this.loading = !0, this.stripe_instance.createToken(this.card_number, {
                            name: this.card_holder_name
                        }).then((async e => {
                            if (void 0 !== e.error && e.error) {
                                var t = {
                                    "Content-Type": "application/json"
                                };
                                (r = await axios.post(this.invalid_card_url, {}, {
                                    headers: t
                                })) && r.data && r.data.captcha && this.captcha(), this.loading = !1;
                                let e = "";
                                return this.showError(e), !1
                            }
                            try {
                                this.process = !0;
                                var r, a = {
                                    billing_id: this.billing_id,
                                    card_id: this.card_id,
                                    name: this.name,
                                    email: this.email,
                                    stripe_token: e.token.id,
                                    token: this.access_token,
                                    payment_source: this.payment_source,
                                    primary_payment: this.primary_payment,
                                    currency: this.currency,
                                    captcha_token: this.captcha_token,
                                    child_account: this.child_account,
                                    daily_limit: this.daily_limit,
                                    free_trial: this.free_trial
                                };
                                t = {
                                    "Content-Type": "application/json"
                                };
                                (r = await axios.post(this.process_url, a, {
                                    headers: t
                                })).data.secure_url ? (this.loading = !1, this.process = !1, this.$nextTick((() => {
                                    this.secure_url = r.data.secure_url
                                }))) : r.data.switch_gateway ? (this.loading = !1, this.process = !1, this.stripe_token = r.data.switch_gateway.token, this.payment_source = r.data.switch_gateway.payment_source, this.showError()) : this.processSuccess(r)
                            } catch (s) {
                                await this.loadToken(), this.loading = !1, this.process = !1, this.catchError(s), this.captcha_id && (s.response && 424 != s.response.status ? this.removeCaptcha() : this.captcha())
                            }
                        }))) : (await this.loadToken(), this.bindElements(), this.showError())
                    }
                else this.showError()
            },
            hideError() {
                this.$emit("hideError")
            },
            showError(e = "") {
                this.$emit("showError", e)
            },
            processSuccess(e) {
                this.$emit("processSuccess", e)
            },
            processDueAmount(e) {
                this.$emit("processDueAmount", e)
            },
            processSubscriptionNote(e) {
                this.$emit("processSubscriptionNote", e)
            },
            catchError(e) {
                this.$nextTick((() => {
                    if (this.loading = !1, e.response)
                        if (e.response.data.errors) {
                            var t = e.response.data.errors;
                            for (var r in t) t.hasOwnProperty(r) && t[r].forEach((e => {
                                this.error += "<li>" + e + "</li>"
                            }))
                        } else e.response.data.message ? this.error = e.response.data.message : e.response.statusText ? this.error = e.response.statusText : this.error = e.response.data;
                    else e.request ? this.error = e.request : this.error = e.message;
                    this.error && (e.response && 417 == e.response.status ? this.showError(this.error) : bsDialogs.create(this.error, [{
                        classes: "btn-danger mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "error").then((e => {})))
                }))
            },
            async handleMessage(e) {
                if (e.data) {
                    if ("3DS-authentication-complete" === e.data.type) return e.data.redirect ? (this.loading = !0, window.location.replace(e.data.redirect)) : e.data.redirect_with_message ? e.data.redirect_with_message.message && "" != e.data.redirect_with_message.message ? (this.secure_url = "", bsDialogs.create(e.data.redirect_with_message.message, [{
                        classes: "btn-success mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "success").then((t => {
                        if ("true" === t) return this.loading = !0, window.location.replace(e.data.redirect_with_message.redirect)
                    })), !0) : (this.loading = !0, window.location.replace(e.data.redirect_with_message.redirect)) : (this.loading = !0, window.location.reload());
                    if ("3DS-authentication-process" === e.data.type) {
                        this.secure_url = "", this.loading = !0, this.process = !0;
                        try {
                            var t = {
                                    payment_intent: e.data.payment_intent,
                                    payment_source: e.data.payment_source,
                                    token: e.data.token
                                },
                                r = await axios.post(e.data.url, t, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    }
                                });
                            return r.data.redirect ? window.location.replace(r.data.redirect) : r.data.redirect_with_message ? r.data.redirect_with_message.message && "" != r.data.redirect_with_message.message ? (this.loading = !1, this.process = !1, this.$nextTick((() => {
                                bsDialogs.create(r.data.redirect_with_message.message, [{
                                    classes: "btn-success mx-auto",
                                    text: this.trans.get("OK"),
                                    value: !0
                                }], "", "success").then((e => {
                                    if ("true" === e) return this.loading = !0, window.location.replace(r.data.redirect_with_message.redirect)
                                }))
                            })), !0) : (this.loading = !0, this.process = !1, window.location.replace(r.data.redirect_with_message.redirect)) : (this.loading = !0, this.process = !1, window.location.reload())
                        } catch (s) {
                            this.loading = !1, this.process = !1, this.catchError(s)
                        }
                    } else "3DS-authentication-error" === e.data.type && (this.secure_url = "", this.showError(e.data.message ?? ""))
                }
            }
        },
        beforeUnmount() {
            window.removeEventListener("message", this.handleMessage, !1)
        }
    },
    ih = {
        key: 0,
        class: "checkout-form-current-card-details my-3"
    },
    nh = {
        class: "form-row"
    },
    lh = {
        key: 0,
        class: "checkout-form-current-card-number mb-3 col-md-12"
    },
    ch = {
        class: "form-label",
        for: "card-holder-name-stripe"
    },
    _h = S("span", {
        class: "text-danger"
    }, "*", -1),
    uh = ["value"],
    dh = {
        class: "checkout-form-current-card-number mb-3 col-md-8"
    },
    mh = {
        class: "form-label",
        for: "card-number-stripe"
    },
    hh = S("span", {
        class: "text-danger"
    }, "*", -1),
    ph = ["value"],
    gh = {
        class: "checkout-form-current-card-expiration-date mb-3 col-md-4"
    },
    yh = {
        class: "form-label",
        for: "card-expiry-stripe"
    },
    fh = S("span", {
        class: "text-danger"
    }, "*", -1),
    wh = ["value"],
    bh = {
        key: 1,
        class: "checkout-form-new-payment-details"
    },
    vh = {
        key: 0,
        class: "alert alert-danger",
        role: "alert"
    },
    kh = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-exclamation-circle-fill me-2"
    })], -1),
    xh = {
        class: "checkout-form-card-holder mb-3 position-relative"
    },
    Ch = {
        class: "form-label",
        for: "card-holder-name-stripe"
    },
    Sh = S("span", {
        class: "text-danger"
    }, "*", -1),
    Th = {
        key: 0,
        class: "invalid-feedback"
    },
    Fh = {
        class: "checkout-form-card-number mb-3 position-relative"
    },
    qh = {
        class: "form-label",
        for: "card-number-stripe"
    },
    Eh = S("span", {
        class: "text-danger"
    }, "*", -1),
    Uh = S("div", {
        id: "card-number-stripe",
        class: "checkout-form-card-number-value form-control form-control"
    }, null, -1),
    Mh = {
        key: 0,
        class: "invalid-feedback"
    },
    Ah = {
        class: "checkout-form-card-expiration-date row"
    },
    Ph = {
        class: "mb-3 col-md-6"
    },
    Lh = {
        class: "form-label",
        for: "card-expiry-stripe"
    },
    Bh = S("span", {
        class: "text-danger"
    }, "*", -1),
    $h = S("div", {
        id: "card-expiry-stripe",
        class: "checkout-form-card-expiration-date-value form-control form-control"
    }, null, -1),
    Dh = {
        key: 0,
        class: "invalid-feedback"
    },
    jh = {
        class: "checkout-form-card-cvv mb-3 col-md-6"
    },
    Oh = S("label", {
        class: "form-label",
        for: "card-cvv-stripe"
    }, [A("CVV "), S("span", {
        class: "text-danger"
    }, "*")], -1),
    Vh = S("div", {
        id: "card-cvv-stripe",
        class: "checkout-form-card-cvv-value form-control form-control"
    }, null, -1),
    Hh = {
        key: 0,
        class: "invalid-feedback"
    },
    Ih = {
        key: 2,
        class: "d-flex justify-content-between align-items-center"
    },
    Nh = {
        class: "text-muted"
    },
    Rh = S("i", {
        class: "bi bi-lock me-1"
    }, null, -1),
    Kh = ["width", "src"];
const Jh = Ue(oh, [
    ["render", function(e, t, r, s, a, o) {
        var i;
        const n = k("modal");
        return b(), g("div", null, [F(S("form", {
            id: "checkout-form",
            onSubmit: t[2] || (t[2] = P(((...e) => o.checkout && o.checkout(...e)), ["prevent"])),
            role: "form",
            method: "post",
            "accept-charset": "UTF-8",
            class: "checkout-form-stripe checkout-form"
        }, [r.is_subscribe && "" != r.customer_id && "" != (null == (i = r.billing_card) ? void 0 : i.number) ? (b(), g("div", ih, [S("div", nh, [r.billing_card.name && "" != r.billing_card.name ? (b(), g("div", lh, [S("label", ch, [A(v(e.trans.get("Name On Card")) + " ", 1), _h]), S("input", {
            maxlength: "24",
            disabled: "disabled",
            value: r.billing_card.name,
            type: "text",
            class: "checkout-form-current-card-holder-name-value form-control form-control"
        }, null, 8, uh)])) : T("", !0), S("div", dh, [S("label", mh, [A(v(e.trans.get("Card Number")) + " " + v("visa_master" == r.payment_method ? "(Visa or Mastercard)" : "(American Express or JCB)") + " ", 1), hh]), S("input", {
            disabled: "disabled",
            value: r.billing_card.number,
            type: "text",
            class: "checkout-form-current-card-number-value form-control form-control"
        }, null, 8, ph)]), S("div", gh, [S("label", yh, [A(v(e.trans.get("Expiration")) + " ", 1), fh]), S("input", {
            disabled: "disabled",
            value: r.billing_card.expired,
            type: "text",
            class: "checkout-form-current-card-expiration-date-value form-control form-control"
        }, null, 8, wh)])])])) : (b(), g("div", bh, [a.hasError ? (b(), g("div", vh, [S("table", null, [S("tbody", null, [kh, S("td", null, v(e.trans.get("Please verify that you have entered the correct payment details.")), 1)])])])) : T("", !0), S("div", xh, [S("label", Ch, [A(v(e.trans.get("Name On Card")) + " ", 1), Sh]), F(S("input", {
            maxlength: "24",
            onKeyup: t[0] || (t[0] = M(P(((...e) => o.checkout && o.checkout(...e)), ["prevent"]), ["enter"])),
            autocomplete: "cc-name",
            type: "text",
            id: "card-holder-name-stripe",
            "onUpdate:modelValue": t[1] || (t[1] = e => a.card_holder_name = e),
            class: w(["checkout-form-card-holder-name-value form-control", [a.validating_card_holder_name ? [a.valid_card_holder_name ? "is-valid" : "is-invalid"] : ""]]),
            name: "card_holder_name",
            required: ""
        }, null, 34), [
            [U, a.card_holder_name, void 0, {
                trim: !0
            }]
        ]), a.validating_card_holder_name && 0 == a.valid_card_holder_name ? (b(), g("div", Th, v(e.trans.get("Card holder name is required")), 1)) : T("", !0)]), S("div", Fh, [S("label", qh, [A(v(e.trans.get("Card Number")) + " " + v("visa_master" == r.payment_method ? "(Visa or Mastercard)" : "(American Express or JCB)") + " ", 1), Eh]), Uh, a.validating_card_number && 0 == a.valid_card_number ? (b(), g("div", Mh, v(e.trans.get("Sorry, the provided card number appears to be invalid.")), 1)) : T("", !0)]), S("div", Ah, [S("div", Ph, [S("label", Lh, [A(v(e.trans.get("Expiration")) + " ", 1), Bh]), $h, a.validating_card_expiry && 0 == a.valid_card_expiry ? (b(), g("div", Dh, v(e.trans.get("Card expiry is invalid.")), 1)) : T("", !0)]), S("div", jh, [Oh, Vh, a.validating_card_cvv && 0 == a.valid_card_cvv ? (b(), g("div", Hh, v(e.trans.get("Card CVV is invalid.")), 1)) : T("", !0)])])])), r.is_subscribe ? (b(), g("div", Ih, [S("small", Nh, [Rh, A(" " + v(e.trans.get("We use Stripe to handle payments and card information securely. Stripe is a Validated Level 1 PCI DSS Compliant Service Provider. All pages on our website are secured with modern SSL/TLS encryption.")), 1)])])) : T("", !0)], 544), [
            [B, !r.hide_form]
        ]), a.secure_url ? (b(), x(n, {
            key: 0,
            width: e.$isMobile() ? "290px" : "425px",
            height: "450px"
        }, {
            body: C((() => [S("iframe", {
                width: e.$isMobile() ? "250px" : "390px",
                height: "400px",
                src: a.secure_url
            }, null, 8, Kh)])),
            _: 1
        }, 8, ["width"])) : T("", !0)])
    }]
]);
oe.register(ie, ne, le, ce, _e, ue);
const Wh = Ue({
        components: {
            Bar: $
        },
        props: {
            charttitle: {
                type: String,
                default: ""
            },
            chartdata: {
                type: Array,
                default: () => []
            },
            chartlabels: {
                type: Array,
                default: () => []
            },
            chartid: {
                type: String,
                default: "bar-chart"
            },
            width: {
                type: Number,
                default: 400
            },
            height: {
                type: Number,
                default: 400
            },
            cssClasses: {
                type: String,
                default: ""
            },
            styles: {
                type: Object,
                default: () => {}
            },
            aspectRatio: {
                type: Number,
                default: 2
            },
            maintainAspectRatio: {
                type: Boolean,
                default: !0
            }
        },
        data: () => ({}),
        computed: {
            chartData() {
                return {
                    labels: this.chartlabels,
                    datasets: this.chartdata
                }
            },
            chartOptions() {
                var e = {
                    scales: {
                        x: {
                            grid: {
                                display: !1
                            },
                            ticks: {
                                maxTicksLimit: 6
                            }
                        },
                        y: {
                            min: 0,
                            ticks: {
                                beginAtZero: !0,
                                callback: (e, t, r) => de(e).format("0.0a").replace(".0", ""),
                                maxTicksLimit: 6
                            }
                        }
                    },
                    aspectRatio: this.aspectRatio,
                    responsive: !0,
                    maintainAspectRatio: this.maintainAspectRatio,
                    plugins: {
                        legend: {
                            display: !1
                        },
                        title: {
                            display: !1,
                            text: ""
                        },
                        tooltip: {
                            callbacks: {
                                label: this.tooltiplabel,
                                title: this.tooltiptitle
                            }
                        }
                    }
                };
                return this.charttitle && (e.plugins.title = {
                    display: !0,
                    font: {
                        size: 20
                    },
                    text: this.charttitle
                }), e
            }
        },
        async created() {
            oe.defaults.animation = !1, oe.defaults.color = "#444", oe.defaults.font.family = "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'", oe.defaults.font.size = 16, oe.defaults.plugins.title.lineHeight = 1.5, oe.defaults.plugins.title.fontSize = 20, oe.defaults.plugins.title.fontStyle = "bold", oe.defaults.elements.arc.borderColor = "rgba(255, 255, 255)", oe.defaults.elements.arc.borderWidth = 0, oe.defaults.elements.bar.borderColor = "rgba(0, 0, 0, 0.1)", oe.defaults.elements.bar.borderWidth = 0, oe.defaults.plugins.tooltip.external = e => {
                let t = document.getElementById("chartjs-tooltip");
                t || (t = document.createElement("div"), t.id = "chartjs-tooltip", t.className = "popover fade show bs-popover-top", t.attributes.role = "tooltip", t.innerHTML = '<div class="popover-arrow" style="position: absolute; left: 45%;"></div><h3 class="popover-header"></h3><div class="popover-body"></div>', document.body.appendChild(t));
                const r = e.tooltip;
                if (0 === r.opacity) return void(t.style.opacity = 0);
                if (t.classList.remove("above", "below", "no-transform"), r.yAlign ? t.classList.add(r.yAlign) : t.classList.add("no-transform"), r.body) {
                    let e = r.title || [],
                        s = r.body.map((function(e) {
                            return e.lines
                        })),
                        a = "";
                    e.forEach((e => {
                        a += e
                    }));
                    let o = t.querySelector(".popover-header");
                    o && (o.textContent = a);
                    let i = "";
                    s.forEach((e => {
                        i += e
                    }));
                    let n = t.querySelector(".popover-body");
                    n && (n.textContent = i)
                }
                const s = e.chart.canvas.getBoundingClientRect();
                t.style.font = r.options.bodyFont.string, t.style.left = s.left - .5 * t.offsetWidth + window.pageXOffset + r.caretX + "px", t.style.opacity = 1, t.style.padding = r.options.padding + "px " + r.options.padding + "px", t.style.pointerEvents = "none", t.style.position = "absolute", t.style.top = s.top - t.offsetHeight - 20 + window.pageYOffset + r.caretY + "px"
            }, oe.defaults.plugins.tooltip.enabled = !1, oe.defaults.plugins.tooltip.padding = 0
        },
        methods: {
            tooltiplabel(e) {
                return this.trans.get(":count searches", {
                    count: de(e.raw).format("0,0")
                })
            },
            tooltiptitle(e) {
                var t = e[0].label;
                return e[0].dataset[e[0].datasetIndex] && e[0].dataset[e[0].datasetIndex].label && (t += " (" + e[0].dataset[e[0].datasetIndex].label + ")"), t
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("Bar");
            return b(), x(i, {
                "chart-data": o.chartData,
                "chart-options": o.chartOptions,
                chartId: r.chartid,
                height: r.height,
                width: r.width,
                cssClasses: r.cssClasses,
                styles: r.styles
            }, null, 8, ["chart-data", "chart-options", "chartId", "height", "width", "cssClasses", "styles"])
        }]
    ]),
    zh = {
        options: {
            delimiter: ",",
            fill: ["#4D89F9"],
            height: 16,
            min: 0,
            padding: .1,
            width: 32
        },
        draw(e) {
            for (var t = this.values(), r = Math.max.apply(Math, void 0 === e.max ? t : t.concat(e.max)), s = Math.min.apply(Math, void 0 === e.min ? t : t.concat(e.min)), a = this.prepare(e.width, e.height), o = a.getBoundingClientRect(), i = o.width, n = o.height, l = r - s, c = e.padding, _ = this.fill(), u = this.x = e => e * i / t.length, d = this.y = e => n - (l ? (e - s) / l * n : 1), m = 0; m < t.length; m++) {
                var h, p = u(m + c),
                    g = u(m + 1 - c) - p,
                    y = t[m],
                    f = d(y),
                    w = f,
                    b = f;
                l ? y < 0 ? w = d(Math.min(r, 0)) : b = d(Math.max(s, 0)) : h = 1, 0 === (h = b - w) && (h = 1, r > 0 && l && w--), a.appendChild(this.svgElement("rect", {
                    fill: _.call(this, y, m, t),
                    x: p,
                    y: w,
                    width: g,
                    height: h
                }))
            }
        }
    },
    Yh = {
        options: {
            delimiter: ",",
            fill: "#c6d9fd",
            height: 16,
            min: 0,
            stroke: "#4d89f9",
            strokeWidth: 1,
            width: 32
        },
        draw(e) {
            var t = this.values();
            1 === t.length && t.push(t[0]);
            for (var r = Math.max.apply(Math, void 0 === e.max ? t : t.concat(e.max)), s = Math.min.apply(Math, void 0 === e.min ? t : t.concat(e.min)), a = this.prepare(e.width, e.height), o = a.getBoundingClientRect(), i = e.strokeWidth, n = o.width, l = o.height - i, c = r - s, _ = this.x = e => e * (n / (t.length - 1)), u = this.y = e => {
                    var t = l;
                    return c && (t -= (e - s) / c * l), t + i / 2
                }, d = u(Math.max(s, 0)), m = [0, d], h = 0; h < t.length; h++) m.push(_(h), u(t[h]));
            m.push(n, d), e.fill && a.appendChild(this.svgElement("polygon", {
                fill: e.fill,
                points: m.join(" ")
            })), i && a.appendChild(this.svgElement("polyline", {
                fill: "none",
                points: m.slice(2, m.length - 2).join(" "),
                stroke: e.stroke,
                "stroke-width": i,
                "stroke-linecap": "square"
            }))
        }
    },
    Gh = {
        options: {
            fill: ["#ff9900", "#fff4dd", "#ffc66e"],
            radius: 8
        },
        draw(e) {
            if (!e.delimiter) {
                var t = this.raw.match(/[^0-9\.]/);
                e.delimiter = t ? t[0] : ","
            }
            var r = this.values().map((e => e > 0 ? e : 0));
            if ("/" === e.delimiter) {
                var s = r[0],
                    a = r[1];
                r = [s, Math.max(0, a - s)]
            }
            for (var o = 0, i = r.length, n = 0; o < i; o++) n += r[o];
            n || (i = 2, n = 1, r = [0, 1]);
            var l = 2 * e.radius,
                c = this.prepare(e.width || l, e.height || l),
                _ = c.getBoundingClientRect(),
                u = _.width,
                d = _.height,
                m = u / 2,
                h = d / 2,
                p = Math.min(m, h),
                g = e.innerRadius;
            "donut" !== this.type || g || (g = .5 * p);
            var y = Math.PI,
                f = this.fill(),
                w = this.scale = (e, t) => {
                    var r = e / n * y * 2 - y / 2;
                    return [t * Math.cos(r) + m, t * Math.sin(r) + h]
                },
                b = 0;
            for (o = 0; o < i; o++) {
                var v, k = r[o],
                    x = k / n;
                if (0 !== x) {
                    if (1 === x)
                        if (g) {
                            var C = m - .01,
                                S = h - p,
                                T = h - g;
                            v = this.svgElement("path", {
                                d: ["M", m, S, "A", p, p, 0, 1, 1, C, S, "L", C, T, "A", g, g, 0, 1, 0, m, T].join(" ")
                            })
                        } else v = this.svgElement("circle", {
                            cx: m,
                            cy: h,
                            r: p
                        });
                    else {
                        var F = b + k,
                            q = ["M"].concat(w(b, p), "A", p, p, 0, x > .5 ? 1 : 0, 1, w(F, p), "L");
                        g ? q = q.concat(w(F, g), "A", g, g, 0, x > .5 ? 1 : 0, 0, w(b, g)) : q.push(m, h), b += k, v = this.svgElement("path", {
                            d: q.join(" ")
                        })
                    }
                    v.setAttribute("fill", f.call(this, k, o, r)), c.appendChild(v)
                }
            }
        }
    },
    Xh = (e, t) => {
        let r = document.createElementNS("http://www.w3.org/2000/svg", e);
        for (let s in t) r.setAttribute(s, t[s]);
        return r
    };
let Qh = class e {
    constructor(e, t, r, s) {
        this.$el = e, this.type = t, this.raw = r, this.options = Object.assign({}, Zh.defaults[this.type], s)
    }
    svgElement(...e) {
        return Xh(...e)
    }
    prepare(e, t) {
        return this.$svg || (this.$el.style.display = "none", this.$svg = Xh("svg", {
            class: "peity"
        }), this.$el.parentNode.insertBefore(this.$svg, this.$el)), this.$svg.innerHTML = "", this.$svg.setAttribute("width", e), this.$svg.setAttribute("height", t), this.$svg
    }
    fill() {
        let e = this.options.fill;
        return "function" == typeof e ? e : function(t, r) {
            return e[r % e.length]
        }
    }
    draw() {
        e.graphers[this.type].call(this, this.options)
    }
    values() {
        return this.raw.split(this.options.delimiter).map((e => parseFloat(e)))
    }
};
Qh.defaults = {}, Qh.graphers = {}, Qh.register = (e, t) => {
    Qh.defaults[e] = t.options, Qh.graphers[e] = t.draw
}, Qh.register("bar", zh), Qh.register("donut", Gh), Qh.register("line", Yh), Qh.register("pie", Gh);
const Zh = Qh,
    ep = ["line", "bar", "pie", "donut"];
const tp = ["id"],
    rp = {
        class: "chart-popover-body"
    },
    sp = ["id"],
    ap = ["width", "height", "id"],
    op = ["id"],
    ip = {
        class: "popover-body"
    };
const np = Ue({
        components: {
            PeityChart: Ue({
                props: {
                    type: {
                        type: String,
                        required: !0,
                        validator: e => ep.indexOf(e) > -1
                    },
                    data: {
                        type: String,
                        required: !0
                    },
                    options: {
                        type: Object,
                        default: () => ({})
                    }
                },
                data: () => ({
                    chart: null
                }),
                mounted() {
                    this.chart = new Zh(this.$el, this.type, this.data, this.options), this.chart.draw()
                },
                watch: {
                    data(e) {
                        this.$nextTick((() => {
                            this.chart.raw = e, this.chart.draw()
                        }))
                    }
                }
            }, [
                ["render", function(e, t, r, s, a, o) {
                    return b(), g("span")
                }]
            ])
        },
        props: ["data", "height", "keyword_id", "popup", "title", "width"],
        data: () => ({
            id: "",
            ispopup: !1,
            popupheight_multiply: 1,
            popupleft: 0,
            popuptop: 0,
            popupwidth_multiply: 1,
            timer: "",
            ispopupchart: !1,
            popupclass: "bs-popover-top",
            popupstyle: {},
            popupcaretstyle: {
                left: "50%"
            }
        }),
        computed: {
            linedata() {
                return this.data ? this.data.toString() : ""
            },
            lineoptions() {
                return {
                    delimiter: ",",
                    fill: "#f5e1be",
                    height: this.height ? this.height : 16,
                    max: null,
                    min: 0,
                    padding: 0,
                    stroke: "#efa31d",
                    strokeWidth: 2,
                    width: this.width ? this.width : 64
                }
            },
            popuptitle() {
                return this.popup && this.popup.title ? this.popup.title : ""
            },
            popuplabels() {
                return this.popup && this.popup.labels ? this.popup.labels : []
            },
            popupdata() {
                return this.popup && this.popup.data ? this.popup.data : []
            },
            popupwidth() {
                return (this.popup && this.popup.width ? this.popup.width : 600) * this.popupwidth_multiply + 20
            },
            popupheight() {
                return (this.popup && this.popup.height ? this.popup.height : 260) * this.popupheight_multiply + 20
            },
            chartpopupwidth() {
                return (this.popup && this.popup.width ? this.popup.width : 600) * this.popupwidth_multiply
            },
            chartpopupheight() {
                return (this.popup && this.popup.height ? this.popup.height : 260) * this.popupheight_multiply
            }
        },
        async created() {
            this.id = this.keyword_id ? this.keyword_id : se()
        },
        async mounted() {
            this.resizepopup(), window.addEventListener("resize", this.resizepopup)
        },
        methods: {
            resizepopup() {
                var e = this.popup && this.popup.width ? this.popup.width : 600,
                    t = window.innerWidth > 0 ? window.innerWidth / (e / .5) : 0,
                    r = window.innerWidth > 0 ? window.innerWidth / (e / .7) : 0;
                t > 1 ? t = 1 : t < .5 && (t = .5), r > 1 ? r = 1 : r < .7 && (r = .7), this.popupwidth_multiply = t, this.popupheight_multiply = r
            },
            checkposition() {
                return new Promise((async (e, t) => {
                    try {
                        var r = document.getElementById("chart-popover-panel-" + this.id),
                            s = r.closest(".search-results-keywords"),
                            a = r.getBoundingClientRect(),
                            o = r.ownerDocument.defaultView,
                            i = {
                                top: a.top + o.pageYOffset,
                                left: a.left + o.pageXOffset
                            },
                            n = (a = s.getBoundingClientRect(), o = s.ownerDocument.defaultView, {
                                top: a.top + o.pageYOffset,
                                left: a.left + o.pageXOffset
                            });
                        if (s.offsetWidth - i.left < .5 * this.popupwidth) this.popupclass = "bs-popover-start";
                        else(l = i.top - n.top) < (c = this.popupheight) && (this.popupclass = "bs-popover-bottom");
                        if ("bs-popover-start" == this.popupclass) {
                            var l = i.top - n.top,
                                c = .5 * this.popupheight,
                                _ = i.top - .5 * this.popupheight,
                                u = i.top + .5 * this.popupheight,
                                d = (g = window.scrollY) + window.innerHeight;
                            this.popupcaretstyle = l < c || _ < g ? {
                                left: "100%",
                                top: "3%"
                            } : u > d ? {
                                left: "100%",
                                top: "85%"
                            } : {
                                left: "100%",
                                top: "50%"
                            }
                        } else this.popupcaretstyle = {
                            left: "50%"
                        };
                        var m = document.getElementById("linechart" + this.id).offsetWidth,
                            h = -1 * (this.popupheight + 5),
                            p = -1 * (.5 * this.popupwidth - .5 * m + 10);
                        if ("bs-popover-bottom" == this.popupclass) h = 45;
                        else if ("bs-popover-start" == this.popupclass) {
                            var g;
                            l = i.top - n.top, c = .5 * this.popupheight, _ = i.top - .5 * this.popupheight, u = i.top + .5 * this.popupheight, d = (g = window.scrollY) + window.innerHeight;
                            h = l < c || _ < g ? 5 : u > d ? -1 * (this.popupheight - 40) : .5 * this.popupheight * -1, p = -1 * (this.popupwidth + 15)
                        }
                        this.popuptop = h, this.popupleft = p, this.popupstyle = {
                            position: "absolute",
                            top: this.popuptop + "px",
                            left: this.popupleft + "px",
                            zIndex: "1050",
                            maxHeight: this.popupheight + "px",
                            maxWidth: this.popupwidth + "px"
                        }, e(!0)
                    } catch (y) {
                        t(Error(y))
                    }
                }))
            },
            async showpopup() {
                await this.checkposition(), this.ispopup = !0, this.$nextTick((() => {
                    if ("bs-popover-top" == this.popupclass) {
                        var e = -1 * (document.getElementById("popup-chart-" + this.id).getBoundingClientRect().height + 5);
                        this.popupstyle.top = e + "px"
                    }
                }))
            },
            closepopup() {
                this.ispopup = !1
            },
            mouseover: function() {
                let e = this;
                this.timer = setTimeout((function() {
                    e.showpopup()
                }), 300)
            },
            mouseout: function() {
                let e = this;
                clearTimeout(e.timer), this.timer = setTimeout((function() {
                    e.ispopupchart || e.closepopup()
                }), 300)
            },
            mouseover_popup: function() {
                this.ispopupchart = !0
            },
            mouseout_popup: function() {
                this.ispopupchart = !1, this.mouseout()
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("peity-chart"),
                n = k("bar-chart");
            return b(), g("div", {
                id: "chart-popover-panel-" + a.id,
                class: "chart-popover-panel"
            }, [S("div", rp, [o.linedata ? (b(), g("button", {
                key: 0,
                id: "linechart" + a.id,
                onMouseover: t[0] || (t[0] = (...e) => o.mouseover && o.mouseover(...e)),
                onMouseout: t[1] || (t[1] = (...e) => o.mouseout && o.mouseout(...e)),
                class: "btn-trend-mini-chart btn btn-link cursor-pointer mx-0 my-1 p-1"
            }, [E(i, {
                type: "line",
                options: o.lineoptions,
                data: o.linedata
            }, null, 8, ["options", "data"])], 40, sp)) : T("", !0), o.linedata && a.ispopup ? (b(), g("div", {
                key: 1,
                class: w(["chart-popover popover shadow", a.popupclass]),
                style: D(a.popupstyle),
                width: o.popupwidth,
                height: o.popupheight,
                id: "popup-chart-" + a.id,
                tabindex: "-1",
                transition: "fade",
                onMouseover: t[2] || (t[2] = (...e) => o.mouseover_popup && o.mouseover_popup(...e)),
                onMouseout: t[3] || (t[3] = (...e) => o.mouseout_popup && o.mouseout_popup(...e))
            }, [S("div", {
                id: "caret" + a.id,
                class: "position-absolute popover-arrow",
                style: D(a.popupcaretstyle)
            }, null, 12, op), S("div", ip, [a.ispopup ? (b(), x(n, {
                key: 0,
                width: o.chartpopupwidth,
                height: o.chartpopupheight,
                aspectRatio: 2.5,
                charttitle: o.popuptitle,
                chartlabels: o.popuplabels,
                chartdata: o.popupdata
            }, null, 8, ["width", "height", "charttitle", "chartlabels", "chartdata"])) : T("", !0)])], 46, ap)) : T("", !0)])], 8, tp)
        }]
    ]),
    lp = ["id"];
const cp = Ue({
        components: {},
        props: ["id", "keywords", "geo", "time", "type"],
        async mounted() {
            let e = this.keywords;
            e = e.split(",");
            const t = this.geo ? this.geo : "US",
                r = this.time ? this.time : "all",
                s = this.type ? this.type : "TIMESERIES";
            let a = [];
            for (let i = 0; i < e.length; i++) a.push({
                keyword: e[i],
                geo: t,
                time: r
            });
            const o = document.createElement("script");
            o.src = "https://ssl.gstatic.com/trends_nrtr/1015_RC10/embed_loader.js", o.async = !0, document.head.appendChild(o), e = e.join(","), e = e.match(/\[(.+)\]/)[1], o.onload = () => {
                var o = document.getElementById(this.id);
                trends.embed.renderExploreWidgetTo(o, s, {
                    comparisonItem: a,
                    category: 0,
                    property: ""
                }, {
                    exploreQuery: "q=" + e + "&date=" + r + "&geo=" + t,
                    guestPath: "https://trends.google.com:443/trends/embed/"
                })
            }
        },
        methods: {
            catchError(e) {
                if (this.loading = !1, e.response)
                    if (e.response.data.errors) {
                        var t = e.response.data.errors;
                        for (var r in t) t.hasOwnProperty(r) && t[r].forEach((e => {
                            this.error += "<li>" + e + "</li>"
                        }))
                    } else e.response.data.message ? this.error = e.response.data.message : e.response.statusText ? this.error = e.response.statusText : this.error = e.response.data;
                else e.request ? this.error = e.request : this.error = e.message;
                this.error && bsDialogs.create(this.error, [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((e => {}))
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", null, [S("div", {
                id: r.id
            }, null, 8, lp)])
        }]
    ]),
    _p = {
        components: {},
        data: () => ({
            category: "",
            id: null,
            loading: !0,
            options: [],
            settings: {},
            country: null,
            search_type: null,
            container_css_class: "",
            categories_url: "",
            rebuild_event: "",
            cookie: ""
        }),
        computed: {
            placeholder() {
                return this.loading ? "Loading..." : ""
            }
        },
        async created() {
            this.id = se(), this.country = window.param("country"), this.search_type = window.param("search_type"), this.settings = {
                containerCssClass: this.container_css_class + " category-dropdown form-control rounded-top-end-0 rounded-bottom-end-0 pe-3"
            }, "function" == typeof this.allowHtml && (this.settings.escapeMarkup = this.allowHtml), "function" == typeof this.templateResult && (this.settings.templateResult = this.templateResult), "function" == typeof this.templateSelection && (this.settings.templateSelection = this.templateSelection), this.rebuild_event && xe(this.rebuild_event, (e => {
                this.search_type = e, this.build()
            })), this.build()
        },
        methods: {
            async build() {
                this.options = [], this.loading = !0, this.category = "";
                let e = "";
                if (Ce("loading-category", !0), "" != this.categories_url) {
                    let t = await axios.get(this.categories_url, {
                        params: {
                            search_type: this.search_type,
                            country: this.country
                        }
                    });
                    this.options = t.data && t.data.categories ? t.data.categories : [], e = t.data && t.data.default_category ? t.data.default_category : ""
                } else this.options = this.options_data.categories ? this.options_data.categories : [], this.options.length > 0 && (e = this.options[0].id);
                let t = window.param("category");
                if ("" != t)
                    for (let r = 0; r < this.options.length; r++)
                        if (this.options[r].id == t) {
                            this.category = t;
                            break
                        } if ("" == this.category) {
                    let e = this.$cookies.get(this.cookie) && this.$cookies.get(this.cookie).category ? this.$cookies.get(this.cookie).category : "";
                    for (let t = 0; t < this.options.length; t++)
                        if (this.options[t].id == e) {
                            this.category = e;
                            break
                        }
                }
                "" != this.category && 2 != this.search_type && 11 != this.search_type || (this.category = e), this.loading = !1, Ce("loading-category", !1)
            }
        }
    };
const up = Ue({
        mixins: [_p],
        components: {},
        data: () => ({
            container_css_class: "amazon-category-select2",
            categories_url: "/search/keywords/amazon/categories",
            cookie: "amazon_search_engine"
        }),
        async created() {
            xe("amazon-category-rebuild", ((e, t) => {
                this.country = t, this.search_type = e, this.build()
            }))
        },
        methods: {
            templateResult: e => "aps" === e.id ? "<strong>" + e.text + "</strong>" : e.text,
            templateSelection: e => "aps" === e.id ? e.short : e.text,
            allowHtml: e => e
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), x(i, {
                disabled: e.loading || 11 == e.search_type,
                id: "category_" + e.id,
                options: e.options,
                required: !0,
                settings: e.settings,
                name: "category",
                "model-value": e.category,
                class: w("rounded-top-end-0 rounded-bottom-end-0"),
                placeholder: e.trans.get("Type a category")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])
        }]
    ]),
    dp = ["'", "(", ")", ".config", "_cmdshell"],
    mp = {
        components: {},
        props: {
            search_engine: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            keyword: {
                type: String,
                required: !0,
                default: ""
            },
            time: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            resource: {
                type: String,
                required: !0,
                default: ""
            },
            scrape_urls: {
                type: [Array, Object],
                required: !1,
                default: function() {
                    return []
                }
            },
            token: {
                type: String,
                required: !0,
                default: ""
            },
            tabs: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            default_tab: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            export_url: {
                type: String,
                required: !0,
                default: ""
            },
            filter_url: {
                type: String,
                required: !0,
                default: ""
            },
            locations_url: {
                type: String,
                required: !1,
                default: ""
            },
            default_metrics_is_estimated: {
                type: [String],
                required: !1,
                default: ""
            },
            default_metrics_is_default_location: {
                type: [String],
                required: !1,
                default: ""
            },
            default_metrics_location: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            default_metrics_currency: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_metrics_language: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            default_metrics_network: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_filter_currency: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_filter_location: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_filter_language: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            default_keyword_result_period: {
                type: [String],
                required: !1,
                default: function() {
                    var e = new Date,
                        t = "" + (e.getMonth() + 1),
                        r = e.getFullYear();
                    return t.length < 2 && (t = "0" + t), [r, t].join("-")
                }
            },
            metrics_is_estimated: {
                type: [String],
                required: !1,
                default: ""
            },
            metrics_is_default_location: {
                type: [String],
                required: !1,
                default: ""
            },
            metrics_default_location: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            metrics_location: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            selected_metrics_location_name: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            metrics_currency: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            metrics_language: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            metrics_network: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_keywords: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            filter_keywords_limit: {
                type: [Number],
                required: !0,
                default: 0
            },
            filter_keywords_partial_match: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_search_volume_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_search_volume_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_search_volume_trend_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_search_volume_trend_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_average_cpc_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_average_cpc_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_low_top_page_bid_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_low_top_page_bid_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_high_top_page_bid_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_high_top_page_bid_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_competition_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_competition_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_competition: {
                type: String,
                required: !1,
                default: ""
            },
            filter_price_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_price_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_posts_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_posts_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_followings_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_followings_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_followers_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_followers_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_heart_count_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_heart_count_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_video_count_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_video_count_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_digg_count_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_digg_count_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_view_count_min: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_view_count_max: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_full_name: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            filter_is_private: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_is_verified: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_currency: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_location: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            filter_language: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            negative_keywords: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            negative_keywords_limit: {
                type: [Number],
                required: !0,
                default: 0
            },
            currency_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            language_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            network_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            selected_country_language_id: {
                type: String,
                required: !1,
                default: ""
            },
            selected_country_language_name: {
                type: String,
                required: !1,
                default: ""
            },
            selected_language: {
                type: String,
                required: !1,
                default: ""
            },
            country_language_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            geo: {
                type: String,
                required: !1,
                default: ""
            },
            property: {
                type: String,
                required: !1,
                default: ""
            },
            permissions: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            routes: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            free_results: {
                type: Number,
                required: !1,
                default: 0
            },
            captcha_url: {
                type: String,
                required: !1,
                default: ""
            },
            basket_keywords_limit: {
                type: [Number],
                required: !1,
                default: 0
            },
            basket_keywords_limit_paid: {
                type: [Number],
                required: !1,
                default: 0
            },
            save_basket_url: {
                type: String,
                required: !1,
                default: ""
            },
            delete_basket_url: {
                type: String,
                required: !1,
                default: ""
            },
            clear_basket_url: {
                type: String,
                required: !1,
                default: ""
            },
            keyword_result_periods: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            google_metrics_periods: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            bing_metrics_periods: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            instagram_metrics_periods: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            google_trends_metrics_periods: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            keyword_result_period: {
                type: String,
                required: !1,
                default: ""
            },
            filter_is_on: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            appliedFilter: !1,
            loading: !0,
            error: null,
            error_fields: {},
            has_error: !1,
            has_all_error: !1,
            has_keywords: !1,
            current_time: null,
            has_metrics: !1,
            metrics_url: null,
            breakdown_url: null,
            device_breakdown_url: null,
            device_breakdown_data: null,
            breakdown_cancel_token: null,
            current_tab: "",
            all_keywords: [],
            all_keywords_data: {},
            allow_storage_basket: !1,
            user_is_paid: !1,
            keywords: [],
            summaries: {},
            pie_summaries: {},
            show_pie_chart: !1,
            selected: [],
            selected_all: !1,
            has_more: !1,
            sort_by: "",
            sort_direction: "",
            current_location_list: [],
            current_currency_list: [],
            current_language_list: [],
            current_network_list: [],
            location_loading: !1,
            current_metrics_location: [],
            current_metrics_is_default_location: !0,
            current_metrics_is_estimated: !1,
            current_metrics_currency: "",
            current_metrics_language: [],
            current_metrics_network: null,
            current_filter_keywords: null,
            current_filter_keywords_partial_match: null,
            current_filter_search_volume_min: null,
            current_filter_search_volume_max: null,
            current_filter_search_volume_trend_min: null,
            current_filter_search_volume_trend_max: null,
            current_filter_average_cpc_min: null,
            current_filter_average_cpc_max: null,
            current_filter_competition_min: null,
            current_filter_competition_max: null,
            current_filter_competition: [],
            current_filter_low_top_page_bid_min: null,
            current_filter_low_top_page_bid_max: null,
            current_filter_high_top_page_bid_min: null,
            current_filter_high_top_page_bid_max: null,
            current_filter_price_min: null,
            current_filter_price_max: null,
            current_filter_posts_min: null,
            current_filter_posts_max: null,
            current_filter_followings_min: null,
            current_filter_followings_max: null,
            current_filter_followers_min: null,
            current_filter_followers_max: null,
            current_filter_heart_count_min: null,
            current_filter_heart_count_max: null,
            current_filter_video_count_min: null,
            current_filter_video_count_max: null,
            current_filter_digg_count_min: null,
            current_filter_digg_count_max: null,
            current_filter_view_count_min: null,
            current_filter_view_count_max: null,
            current_filter_full_name: [],
            current_filter_is_private: null,
            current_filter_is_verified: "",
            current_filter_currency: "",
            current_filter_location: null,
            current_filter_language: null,
            current_negative_keywords: null,
            current_filter_keyword_result_period: null,
            current_filter_is_on: !1,
            prepend_current_metrics_location: [],
            show_metrics_is_default_location: !1,
            show_metrics_is_estimated: !1,
            show_current_metrics_location: [],
            show_current_metrics_language: [],
            show_current_metrics_network: null,
            show_current_metrics_currency: "",
            show_current_filter_keywords: null,
            show_display_filter_keywords: null,
            show_current_filter_keywords_partial_match: null,
            show_current_filter_search_volume_min: null,
            show_current_filter_search_volume_max: null,
            show_current_filter_search_volume_trend_min: null,
            show_current_filter_search_volume_trend_max: null,
            show_current_filter_average_cpc_min: null,
            show_current_filter_average_cpc_max: null,
            show_current_filter_competition_min: null,
            show_current_filter_competition_max: null,
            show_current_filter_competition: [],
            show_current_filter_low_top_page_bid_min: null,
            show_current_filter_low_top_page_bid_max: null,
            show_current_filter_high_top_page_bid_min: null,
            show_current_filter_high_top_page_bid_max: null,
            show_current_filter_price_min: null,
            show_current_filter_price_max: null,
            show_current_filter_posts_min: null,
            show_current_filter_posts_max: null,
            show_current_filter_followings_min: null,
            show_current_filter_followings_max: null,
            show_current_filter_followers_min: null,
            show_current_filter_followers_max: null,
            show_current_filter_heart_count_min: null,
            show_current_filter_heart_count_max: null,
            show_current_filter_video_count_min: null,
            show_current_filter_video_count_max: null,
            show_current_filter_digg_count_min: null,
            show_current_filter_digg_count_max: null,
            show_current_filter_view_count_min: null,
            show_current_filter_view_count_max: null,
            show_current_filter_full_name: null,
            show_current_filter_is_private: null,
            show_current_filter_is_verified: "",
            show_current_filter_currency: "",
            show_current_filter_location: null,
            show_current_filter_language: null,
            show_current_negative_keywords: null,
            show_display_filter_negative_keywords: null,
            show_current_filter_keyword_result_period: null,
            current_permissions: {},
            current_keyword_result_periods: [],
            negative_free_results: 0,
            suggest_page_reload: !1,
            allow_partial_match: !1,
            search_volume_format: {
                alias: "integer",
                digits: 0,
                radixPoint: "",
                groupSeparator: ",",
                autoGroup: !0,
                min: -9999999999,
                max: 9999999999,
                allowPlus: !1,
                allowMinus: !1,
                clearIncomplete: !0,
                autoUnmask: !0
            },
            search_volume_trend_format: {
                alias: "integer",
                digits: 0,
                radixPoint: "",
                groupSeparator: ",",
                autoGroup: !0,
                min: -9999999999,
                max: 9999999999,
                allowPlus: !1,
                allowMinus: !0,
                clearIncomplete: !0,
                autoUnmask: !0
            },
            average_cpc_format: {
                alias: "decimal",
                digits: 5,
                groupSeparator: ",",
                autoGroup: !0,
                min: 0,
                max: 9999999999,
                allowPlus: !1,
                allowMinus: !1,
                clearIncomplete: !0,
                autoUnmask: !0
            },
            low_top_page_bid_format: {
                alias: "decimal",
                digits: 5,
                groupSeparator: ",",
                autoGroup: !0,
                min: 0,
                allowPlus: !1,
                allowMinus: !1,
                clearIncomplete: !0,
                autoUnmask: !0
            },
            high_top_page_bid_format: {
                alias: "decimal",
                digits: 5,
                groupSeparator: ",",
                autoGroup: !0,
                min: 0,
                allowPlus: !1,
                allowMinus: !1,
                clearIncomplete: !0,
                autoUnmask: !0
            },
            competition_format: {
                alias: "integer",
                digits: 0,
                radixPoint: "",
                groupSeparator: ",",
                autoGroup: !0,
                min: 0,
                max: 100,
                allowPlus: !1,
                allowMinus: !1,
                clearIncomplete: !0,
                autoUnmask: !0
            },
            integer_format: {
                alias: "integer",
                digits: 0,
                radixPoint: "",
                groupSeparator: ",",
                autoGroup: !0,
                min: 0,
                max: 9999999999,
                allowPlus: !1,
                allowMinus: !1,
                autoUnmask: !0
            },
            decimal_format: {
                alias: "decimal",
                digits: 2,
                groupSeparator: ",",
                autoGroup: !0,
                min: 0,
                allowPlus: !1,
                allowMinus: !1,
                autoUnmask: !0
            }
        }),
        computed: {
            total() {
                return void 0 !== this.keywords ? this.keywords.length : 0
            },
            total_keywords() {
                return void 0 !== this.all_keywords ? this.all_keywords.length : 0
            },
            current_filter_keywords_limit() {
                return de(this.filter_keywords_limit).format("0,0")
            },
            current_negative_keywords_limit() {
                return de(this.negative_keywords_limit).format("0,0")
            },
            current_split_filter_keywords() {
                return _.sortBy(this.current_filter_keywords ? this.current_filter_keywords.split("\n").filter(((e, t) => e)) : [])
            },
            current_split_negative_keywords() {
                return _.sortBy(this.current_negative_keywords ? this.current_negative_keywords.split("\n").filter(((e, t) => e)) : [])
            },
            current_remain_filter_keywords() {
                let e = this.filter_keywords_limit - this.current_split_filter_keywords.length;
                return e > 0 ? e : 0
            },
            current_remain_negative_keywords() {
                let e = this.negative_keywords_limit - this.current_split_negative_keywords.length;
                return e > 0 ? e : 0
            },
            show_current_split_filter_keywords() {
                if (this.show_current_filter_keywords) {
                    let t = _.sortBy(this.show_current_filter_keywords.split("\n").filter(((e, t) => e)));
                    if (this.show_display_filter_keywords = t.length > 1 ? this.trans.get("Keywords") : this.trans.get("Keyword"), t.length > 2) {
                        var e = t.length - 2;
                        return t.slice(0, 2).join(", ") + " " + this.trans.get("and") + " " + e + " " + this.trans.get("others")
                    }
                    return t.length > 1 ? t.slice(0, 2).join(" " + this.trans.get("and") + " ") : t.join("")
                }
                return ""
            },
            show_current_split_negative_keywords() {
                if (this.show_current_negative_keywords) {
                    let t = _.sortBy(this.show_current_negative_keywords.split("\n").filter(((e, t) => e)));
                    if (this.show_display_filter_negative_keywords = t.length > 1 ? this.trans.get("Negative Keywords") : this.trans.get("Negative Keyword"), t.length > 2) {
                        var e = t.length - 2;
                        return t.slice(0, 2).join(", ") + " " + this.trans.get("and") + " " + e + " " + this.trans.get("others")
                    }
                    return t.length > 1 ? t.slice(0, 2).join(" " + this.trans.get("and") + " ") : t.join("")
                }
                return ""
            },
            show_current_split_filter_full_name() {
                if (null !== this.show_current_filter_full_name) {
                    let t = _.sortBy(this.show_current_filter_full_name.filter(((e, t) => e)));
                    if (t.length > 2) {
                        var e = t.length - 2;
                        return t.slice(0, 2).join(", ") + " " + this.trans.get("and") + " " + e + " " + this.trans.get("others")
                    }
                    return t.length > 1 ? t.slice(0, 2).join(" " + this.trans.get("and") + " ") : t.join("")
                }
                return ""
            },
            show_current_metrics_location_name() {
                if (this.show_current_metrics_location.length) {
                    if (this.show_current_metrics_location.length > 2) {
                        var e = this.show_current_metrics_location.length - 2;
                        return this.show_current_metrics_location.slice(0, 2).join(", ") + " " + this.trans.get("and") + " " + e + " " + this.trans.get("others")
                    }
                    return this.show_current_metrics_location.length > 1 ? this.show_current_metrics_location.slice(0, 2).join(" " + this.trans.get("and") + " ") : this.show_current_metrics_location.join("")
                }
                return ""
            },
            show_current_metrics_language_name() {
                if (this.show_current_metrics_language.length) {
                    if (this.show_current_metrics_language.length > 2) {
                        var e = this.show_current_metrics_language.length - 2;
                        return this.show_current_metrics_language.slice(0, 2).join(", ") + " " + this.trans.get("and") + " " + e + " " + this.trans.get("others")
                    }
                    return this.show_current_metrics_language.length > 1 ? this.show_current_metrics_language.slice(0, 2).join(" " + this.trans.get("and") + " ") : this.show_current_metrics_language.join("")
                }
                return ""
            },
            current_free_results() {
                return this.free_results - this.negative_free_results
            },
            selected_language_name() {
                let e = this.selected_language.split("/");
                return e[e.length - 1].split("-")[0].replace(/\(.*\)/, "").trim()
            },
            allow_keyword_basket() {
                return 1 == this.current_tab || 2 == this.current_tab || 3 == this.current_tab || 4 == this.current_tab || 5 == this.current_tab || 6 == this.current_tab || 7 == this.current_tab || 8 == this.current_tab || 9 == this.current_tab
            },
            selected_keywords_format() {
                return de(this.selected.length).format("0,0")
            },
            basket_keywords_limit_format() {
                return de(this.basket_keywords_limit).format("0,0")
            },
            search_engine_name() {
                let e = "";
                switch (this.search_engine) {
                    case "1":
                        e = "Google";
                        break;
                    case "2":
                        e = "YouTube";
                        break;
                    case "3":
                        e = "Bing";
                        break;
                    case "4":
                        e = "Amazon";
                        break;
                    case "5":
                        e = "App Store";
                        break;
                    case "6":
                        e = "eBay";
                        break;
                    case "7":
                        e = "Instagram";
                        break;
                    case "8":
                        e = "Google Trends";
                        break;
                    case "9":
                        e = "Twitter";
                        break;
                    case "10":
                        e = "Play Store";
                        break;
                    case "11":
                        e = "Pinterest";
                        break;
                    case "12":
                        e = "Keyword Basket";
                        break;
                    case "13":
                        e = "TikTok"
                }
                return e
            },
            filter_counter() {
                let e = 0;
                return this.current_permissions.show_custom_time && this.current_filter_keyword_result_period != this.default_keyword_result_period && 4 != this.current_tab && (e += 1), this.current_permissions.show_search_volume_data && (12 == this.search_engine ? (this.current_filter_location && (e += 1), this.current_filter_language && (e += 1)) : (4 != this.current_tab && this.current_metrics_network != this.default_metrics_network && (e += 1), (this.current_filter_search_volume_min > 0 || this.current_filter_search_volume_max > 0) && (e += 1), (this.current_filter_search_volume_trend_min >= 0 || this.current_filter_search_volume_trend_max >= 0 || this.current_filter_search_volume_trend_min < 0 || this.current_filter_search_volume_trend_max < 0) && (e += 1))), this.current_permissions.show_cpc_data && (12 == this.search_engine ? this.current_filter_currency && (e += 1) : 4 != this.current_tab && this.current_metrics_currency != this.default_metrics_currency && (e += 1), (this.current_filter_average_cpc_min > 0 || this.current_filter_average_cpc_max > 0) && (e += 1)), this.current_permissions.show_low_top_page_bid_data && (12 == this.search_engine ? this.current_filter_currency && (e += 1) : 4 != this.current_tab && this.current_metrics_currency != this.default_metrics_currency && (e += 1), (this.current_filter_low_top_page_bid_min > 0 || this.current_filter_low_top_page_bid_max > 0) && (e += 1)), this.current_permissions.show_high_top_page_bid_data && (12 == this.search_engine ? this.current_filter_currency && (e += 1) : 4 != this.current_tab && this.current_metrics_currency != this.default_metrics_currency && (e += 1), (this.current_filter_high_top_page_bid_min > 0 || this.current_filter_high_top_page_bid_max > 0) && (e += 1)), this.current_permissions.show_competition_data && (3 == this.search_engine ? this.current_filter_competition && this.current_filter_competition.length > 0 && (e += 1) : (this.current_filter_competition_min > 0 || this.current_filter_competition_max > 0) && (e += 1)), this.current_permissions.show_posts_data && (this.current_filter_posts_min > 0 || this.current_filter_posts_max > 0) && (e += 1), this.current_permissions.show_following_count_data && (this.current_filter_followings_min > 0 || this.current_filter_followings_max > 0) && (e += 1), this.current_permissions.show_follower_count_data && (this.current_filter_followers_min > 0 || this.current_filter_followers_max > 0) && (e += 1), this.current_permissions.show_heart_count_data && (this.current_filter_heart_count_min > 0 || this.current_filter_heart_count_max > 0) && (e += 1), this.current_permissions.show_video_count_data && (this.current_filter_video_count_min > 0 || this.current_filter_video_count_max > 0) && (e += 1), this.current_permissions.show_digg_count_data && (this.current_filter_digg_count_min > 0 || this.current_filter_digg_count_max > 0) && (e += 1), this.current_permissions.show_view_count_data && (this.current_filter_view_count_min > 0 || this.current_filter_view_count_max > 0) && (e += 1), this.current_permissions.show_full_name_data && this.current_filter_full_name && this.current_filter_full_name.length > 0 && (e += 1), this.current_permissions.show_is_private_data && this.current_filter_is_private && (e += 1), this.current_permissions.show_is_verified_data && this.current_filter_is_verified && (e += 1), this.current_permissions.show_product_data && (this.current_filter_price_min > 0 || this.current_filter_price_max > 0) && (e += 1), this.current_filter_keywords && this.current_filter_keywords.length > 0 && (e += 1), this.current_split_negative_keywords && this.current_split_negative_keywords.length > 0 && (e += 1), e
            }
        },
        watch: {
            selected: {
                handler(e, t) {
                    this.all_keywords.length > 0 && e.length >= this.all_keywords.length ? this.selected_all = !0 : this.selected_all = !1
                },
                deep: !0
            }
        },
        beforeMount: function() {
            this.user_is_paid = window.user_is_paid, this.allow_storage_basket = window.allow_storage_basket
        },
        mounted() {},
        methods: {
            async all(e) {
                this.selected = e ? this.all_keywords : []
            },
            async select(e) {
                this.loading || this.selected.push(e)
            },
            async deselect(e) {
                this.loading || (this.selected = this.selected.filter((t => t !== e)))
            },
            async more() {
                this.loading = !0, this.metrics()
            },
            async defaultValue() {
                return new Promise((async (e, t) => {
                    try {
                        this.current_time = this.time, this.current_tab = this.default_tab, this.current_token = this.token, this.current_scrape_urls = this.scrape_urls, this.current_currency_list = this.currency_list, this.current_language_list = this.language_list, this.current_network_list = this.network_list, this.current_metrics_is_default_location = this.metrics_is_default_location, this.current_metrics_is_estimated = this.metrics_is_estimated, this.$nextTick((() => {
                            var e;
                            this.current_metrics_location = [], null == (e = document.getElementById("metrics_locations_selection")) || e.find("option").remove().end().trigger("change"), this.metrics_location.forEach(((e, t) => {
                                var r, s = new Option(e.location_name, e.location_id, !0, !0);
                                null == (r = document.getElementById("metrics_locations_selection")) || r.append(s).trigger("change"), this.current_metrics_location.push(e.location_id)
                            }))
                        })), this.current_metrics_currency = this.metrics_currency, this.current_metrics_language = this.metrics_language, this.current_metrics_network = this.metrics_network, this.prepend_current_metrics_location = this.selected_metrics_location_name, this.current_filter_keywords = this.filter_keywords.join("\n"), this.current_filter_keywords_partial_match = this.filter_keywords_partial_match, this.current_filter_search_volume_min = this.filter_search_volume_min, this.current_filter_search_volume_max = this.filter_search_volume_max, this.current_filter_search_volume_trend_min = this.filter_search_volume_trend_min, this.current_filter_search_volume_trend_max = this.filter_search_volume_trend_max, this.current_filter_average_cpc_min = this.filter_average_cpc_min, this.current_filter_average_cpc_max = this.filter_average_cpc_max, this.current_filter_competition_min = this.filter_competition_min, this.current_filter_competition_max = this.filter_competition_max, this.current_filter_competition = this.filter_competition ? this.filter_competition.split(",") : [], this.current_filter_low_top_page_bid_min = this.filter_low_top_page_bid_min, this.current_filter_low_top_page_bid_max = this.filter_low_top_page_bid_max, this.current_filter_high_top_page_bid_min = this.filter_high_top_page_bid_min, this.current_filter_high_top_page_bid_max = this.filter_high_top_page_bid_max, this.current_filter_price_min = this.filter_price_min, this.current_filter_price_max = this.filter_price_max, this.current_filter_posts_min = this.filter_posts_min, this.current_filter_posts_max = this.filter_posts_max, this.current_filter_followings_min = this.filter_followings_min, this.current_filter_followings_max = this.filter_followings_max, this.current_filter_followers_min = this.filter_followers_min, this.current_filter_followers_max = this.filter_followers_max, this.current_filter_heart_count_min = this.filter_heart_count_min, this.current_filter_heart_count_max = this.filter_heart_count_max, this.current_filter_video_count_min = this.filter_video_count_min, this.current_filter_video_count_max = this.filter_video_count_max, this.current_filter_digg_count_min = this.filter_digg_count_min, this.current_filter_digg_count_max = this.filter_digg_count_max, this.current_filter_view_count_min = this.filter_view_count_min, this.current_filter_view_count_max = this.filter_view_count_max, this.current_negative_keywords = this.negative_keywords.join("\n"), this.current_filter_keyword_result_period = this.keyword_result_period, this.current_filter_full_name = this.filter_full_name, this.current_filter_is_private = this.filter_is_private, this.current_filter_is_verified = this.filter_is_verified, this.current_filter_currency = this.filter_currency, this.current_filter_location = this.filter_location, this.current_filter_language = this.filter_language, this.current_filter_is_on = this.filter_is_on, this.current_permissions = this.permissions, this.current_keyword_result_periods = this.keyword_result_periods, this.sort_by || (this.sort_by = this.$cookies.get("last_sort_by_" + this.search_engine), this.sort_by || (this.current_permissions.show_follower_count_data ? this.sort_by = "followerCount" : this.current_permissions.show_posts_data ? this.sort_by = "posts" : this.current_permissions.show_relative_popularity_column ? this.sort_by = "relativePopularity" : this.current_permissions.show_search_frequency_increase_data ? this.sort_by = "followerCount" : this.current_permissions.show_search_volume_data ? this.sort_by = "searchVolume" : this.sort_by = "keywords")), this.sort_direction || (this.sort_direction = this.$cookies.get("last_sort_direction_" + this.search_engine), this.sort_direction || ("keywords" == this.sort_by ? this.sort_direction = "Asc" : this.sort_direction = "Desc")), e(!0)
                    } catch (r) {
                        t(Error(r))
                    }
                }))
            },
            async sort(e) {
                this.loading = !0, this.has_metrics = !1, this.has_error = !1, this.has_all_error = !1, this.keywords = [], this.has_more = !1, e == this.sort_by ? "Asc" == this.sort_direction ? this.sort_direction = "Desc" : this.sort_direction = "Asc" : e != this.sort_by && ("keywords" == this.sort_direction ? this.sort_direction = "Asc" : this.sort_direction = "Desc", this.sort_by = e), this.sort_by && this.$cookies.set("last_sort_by_" + this.search_engine, this.sort_by), this.sort_direction && this.$cookies.set("last_sort_direction_" + this.search_engine, this.sort_direction), this.metrics(!0)
            },
            async filter(e = !1) {
                this.loading = !0;
                try {
                    var t = {
                            "Content-Type": "application/json",
                            Token: this.current_token
                        },
                        r = await axios.post(this.filter_url, {
                            search_type: this.current_tab,
                            keyword_basket_search_engine: this.current_sub_tab,
                            time: this.current_time,
                            country_location: window.param("country_location"),
                            country_language: window.param("country_language"),
                            metrics_is_default_location: !!this.current_metrics_is_default_location,
                            metrics_is_estimated: !!this.current_metrics_is_estimated,
                            metrics_location: this.current_metrics_location.toString(),
                            metrics_language: this.current_metrics_language.toString(),
                            metrics_network: this.current_metrics_network ? this.current_metrics_network : null,
                            metrics_currency: this.current_metrics_currency ? this.current_metrics_currency : null,
                            filter_keywords: this.current_split_filter_keywords.length ? this.current_split_filter_keywords.toString() : "",
                            filter_keywords_partial_match: this.current_filter_keywords_partial_match,
                            filter_search_volume_min: this.current_filter_search_volume_min,
                            filter_search_volume_max: this.current_filter_search_volume_max,
                            filter_search_volume_trend_min: this.current_filter_search_volume_trend_min,
                            filter_search_volume_trend_max: this.current_filter_search_volume_trend_max,
                            filter_average_cpc_min: this.current_filter_average_cpc_min,
                            filter_average_cpc_max: this.current_filter_average_cpc_max,
                            filter_competition_min: this.current_filter_competition_min,
                            filter_competition_max: this.current_filter_competition_max,
                            filter_competition: this.current_filter_competition.length ? this.current_filter_competition.toString() : "",
                            filter_low_top_page_bid_min: this.current_filter_low_top_page_bid_min,
                            filter_low_top_page_bid_max: this.current_filter_low_top_page_bid_max,
                            filter_high_top_page_bid_min: this.current_filter_high_top_page_bid_min,
                            filter_high_top_page_bid_max: this.current_filter_high_top_page_bid_max,
                            filter_price_min: this.current_filter_price_min,
                            filter_price_max: this.current_filter_price_max,
                            filter_posts_min: this.current_filter_posts_min,
                            filter_posts_max: this.current_filter_posts_max,
                            filter_followings_min: this.current_filter_followings_min,
                            filter_followings_max: this.current_filter_followings_max,
                            filter_followers_min: this.current_filter_followers_min,
                            filter_followers_max: this.current_filter_followers_max,
                            filter_heart_count_min: this.current_filter_heart_count_min,
                            filter_heart_count_max: this.current_filter_heart_count_max,
                            filter_video_count_min: this.current_filter_video_count_min,
                            filter_video_count_max: this.current_filter_video_count_max,
                            filter_digg_count_min: this.current_filter_digg_count_min,
                            filter_digg_count_max: this.current_filter_digg_count_max,
                            filter_view_count_min: this.current_filter_view_count_min,
                            filter_view_count_max: this.current_filter_view_count_max,
                            negative_keywords: this.current_split_negative_keywords.length ? this.current_split_negative_keywords.toString() : "",
                            filter_keyword_result_period: this.current_filter_keyword_result_period,
                            filter_full_name: this.current_filter_full_name,
                            filter_is_private: this.current_filter_is_private,
                            filter_is_verified: this.current_filter_is_verified,
                            filter_currency: this.current_filter_currency ? this.current_filter_currency : null,
                            filter_location: this.current_filter_location ? this.current_filter_location : null,
                            filter_language: this.current_filter_language ? this.current_filter_language : null
                        }, {
                            headers: t
                        });
                    if (r && r.data) {
                        if (r.data.redirect) return window.location = r.data.redirect;
                        if (r.data.token) {
                            if (this.current_token = r.data.token, this.current_scrape_urls = r.data.scrape_urls, this.current_permissions = r.data.permissions, r.data.url) {
                                window.history.pushState({
                                    reload: !0
                                }, "", r.data.url), void 0 !== r.data.negative_keywords && (this.current_negative_keywords = r.data.negative_keywords ? r.data.negative_keywords.join("\n") : ""), void 0 !== r.data.keyword_result_periods && (this.current_keyword_result_periods = r.data.keyword_result_periods)
                            }
                            r.data.change_locale_urls && this.$nextTick((() => {
                                var e;
                                for (var t in r.data.change_locale_urls) r.data.change_locale_urls.hasOwnProperty(t) && (null == (e = document.querySelector("a.dropdown-item-lang-" + t)) || e.setAttribute("href", r.data.change_locale_urls[t]))
                            })), 12 == this.search_engine && (this.user_is_paid ? (r.data.sub_tabs && (this.current_sub_tabs = r.data.sub_tabs), r.data.currency_list && (this.current_currency_list = r.data.currency_list), r.data.language_list && (this.current_language_list = r.data.language_list), "" !== r.data.total && this.$root.update_keyword_basket_counter(".total-keyword-basket-items", r.data.total)) : Ce("update-basket-badge", this.user_is_paid, this.current_sub_tabs)), this.showFilter(), this.breakdown_token_source && this.breakdown_token_source.cancel("Operation canceled by the user."), this.fetch()
                        } else this.loading = !1, this.catchError({
                            message: this.trans.get("An error occurred. Please try again!")
                        })
                    } else this.loading = !1, this.catchError({
                        message: this.trans.get("An error occurred. Please try again!")
                    });
                    this.current_filter_is_on = !0
                } catch (a) {
                    if (this.loading = !1, !e) {
                        var s = document.getElementById("search-results-setting-modal");
                        s && bootstrap.Modal.getOrCreateInstance(s).show()
                    }
                    this.catchError(a)
                }
            },
            async metrics(e) {
                if (this.has_all_error) return this.loading = !1, !1;
                if (e) {
                    var t = 0;
                    this.negative_free_results = this.free_results, this.show_pie_chart = !1, this.device_breakdown_data = null
                } else t = this.keywords.length;
                try {
                    var r = {
                            "Content-Type": "application/json",
                            Token: this.current_token
                        },
                        s = await axios.post(this.metrics_url, {
                            filter_keywords: this.current_filter_keywords.toString(),
                            filter_keywords_partial_match: this.current_filter_keywords_partial_match,
                            negative_keywords: this.current_negative_keywords.length ? this.current_negative_keywords.split("\n").map(((e, t) => e)).toString() : "",
                            keywords_payload: this.keywords_payload,
                            sort: this.sort_by + this.sort_direction,
                            total: t,
                            keyword_basket_search_engine: this.current_sub_tab
                        }, {
                            headers: r
                        })
                } catch (i) {
                    return this.loading = !1, this.user_is_paid && (this.has_error = !0), e ? (this.has_metrics = !0, this.user_is_paid && (this.has_all_error = !0)) : this.catchError({
                        message: this.trans.get("An error occurred. Please try again!")
                    }), !1
                }
                if (!s || !s.data) return this.loading = !1, this.catchError({
                    message: this.trans.get("An error occurred. Please try again!")
                }), !1;
                if (s.data.redirect) return window.location = s.data.redirect;
                if (e) {
                    s.data.title && (document.title = s.data.title);
                    let e = [];
                    if (this.all_keywords_data = {}, Object.keys(s.data.all_keywords_data).length > 0) {
                        for (const t in s.data.all_keywords_data) e.push(t.toString());
                        this.all_keywords_data = s.data.all_keywords_data
                    }
                    if (this.all_keywords = e, this.all_keywords.length && (this.has_metrics = !0), this.keywords = s.data.keywords, this.summaries = s.data.summaries, this.user_is_paid && (this.has_all_error || (this.has_all_error = s.data.has_all_error), this.has_error || (this.has_error = s.data.has_error)), this.free_results > 0 && this.keywords.length > 0)
                        for (var a = 0; a < this.free_results && (void 0 !== this.keywords[a] && "" !== this.keywords[a].search_volume && null !== this.keywords[a].search_volume); a++) this.negative_free_results -= 1
                } else this.keywords = this.keywords.concat(s.data.keywords), this.has_error = s.data.has_error;
                if (this.has_more = s.data.has_more, this.selected_all && (this.selected = this.all_keywords), s.data.validate_error && this.catchError({
                        message: s.data.validate_error
                    }), this.loading = !1, this.current_permissions.show_search_volume_data && this.summaries.search_volume && this.breakdown_url && !this.has_error) {
                    var o = axios.CancelToken;
                    if (this.breakdown_token_source = o.source(), e) axios.post(this.breakdown_url, {
                        filter_keywords: this.current_filter_keywords.toString(),
                        filter_keywords_partial_match: this.current_filter_keywords_partial_match,
                        negative_keywords: this.current_negative_keywords.length ? this.current_negative_keywords.split("\n").map(((e, t) => e)).toString() : "",
                        keywords_payload: this.keywords_payload,
                        sort: this.sort_by + this.sort_direction,
                        total: t
                    }, {
                        headers: r,
                        cancelToken: this.breakdown_token_source.token
                    }).then((e => {
                        this.breakdown_token_source = null, e.data && !e.data.has_error && e.data.summaries && e.data.summaries.search_volume_trend_data.length > 0 && (this.pie_summaries.search_volume_trend_labels = e.data.summaries.search_volume_trend_labels, this.pie_summaries.search_volume_trend_data = e.data.summaries.search_volume_trend_data, this.show_pie_chart = !0)
                    })).then((() => {
                        if (this.device_breakdown_url && this.show_pie_chart) {
                            var e = axios.CancelToken;
                            this.breakdown_token_source = e.source(), axios.post(this.device_breakdown_url, {
                                filter_keywords: this.current_filter_keywords.toString(),
                                filter_keywords_partial_match: this.current_filter_keywords_partial_match,
                                negative_keywords: this.current_negative_keywords.length ? this.current_negative_keywords.split("\n").map(((e, t) => e)).toString() : "",
                                keywords_payload: this.keywords_payload,
                                sort: this.sort_by + this.sort_direction,
                                total: t
                            }, {
                                headers: r,
                                cancelToken: this.breakdown_token_source.token
                            }).then((e => {
                                if (this.breakdown_token_source = null, e.data && !e.data.has_error && e.data.breakdown) {
                                    let t = e.data.breakdown;
                                    if (this.keywords && t && 0 !== Object.keys(t).length)
                                        for (let e = 0; e < this.keywords.length; e++) this.keywords[e].keyword_source && t[this.keywords[e].keyword_source] && (this.keywords[e].search_volume_trend_data = t[this.keywords[e].keyword_source])
                                }
                            })).catch((e => {
                                this.breakdown_token_source = null, axios.isCancel(e)
                            }))
                        }
                    })).catch((e => {
                        this.breakdown_token_source = null, axios.isCancel(e)
                    }));
                    else if (this.device_breakdown_url && this.show_pie_chart) {
                        o = axios.CancelToken;
                        this.breakdown_token_source = o.source(), axios.post(this.device_breakdown_url, {
                            filter_keywords: this.current_filter_keywords.toString(),
                            filter_keywords_partial_match: this.current_filter_keywords_partial_match,
                            negative_keywords: this.current_negative_keywords.length ? this.current_negative_keywords.split("\n").map(((e, t) => e)).toString() : "",
                            keywords_payload: this.keywords_payload,
                            sort: this.sort_by + this.sort_direction,
                            total: t
                        }, {
                            headers: r,
                            cancelToken: this.breakdown_token_source.token
                        }).then((e => {
                            if (this.breakdown_token_source = null, e.data && e.data.breakdown) {
                                let t = e.data.breakdown;
                                if (this.keywords && t && 0 !== Object.keys(t).length)
                                    for (let e = 0; e < this.keywords.length; e++) this.keywords[e].keyword_source && t[this.keywords[e].keyword_source] && (this.keywords[e].search_volume_trend_data = t[this.keywords[e].keyword_source])
                            }
                        })).catch((e => {
                            this.breakdown_token_source = null, axios.isCancel(e)
                        }))
                    }
                }
            },
            async selectLocations(e) {
                var t = this.prepend_current_metrics_location.indexOf(e.text);
                e.selected ? t < 0 && this.prepend_current_metrics_location.push(e.text) : t >= 0 && this.prepend_current_metrics_location.splice(t, 1)
            },
            async applyTab(e) {
                Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.filter(!0)
            },
            async applyFilter() {
                if (this.error_fields = {}, this.current_split_filter_keywords.length > 0) {
                    if (this.current_split_filter_keywords.length > this.filter_keywords_limit) return this.catchError({
                        fields: ["filter_keywords"],
                        message: this.trans.get("Number of filter keywords can not exceed :count.", {
                            count: this.current_filter_keywords_limit
                        })
                    }), !1;
                    if (!this.current_split_filter_keywords.every((e => !(e.length > 80)))) {
                        let e = this.trans.get("The filter keywords may not be greater than :max characters.", {
                            max: 80
                        });
                        return this.catchError({
                            fields: ["filter_keywords"],
                            message: e
                        }), !1
                    }
                }
                if (this.current_split_negative_keywords.length > 0) {
                    if (this.current_split_negative_keywords.length > this.negative_keywords_limit) return this.catchError({
                        fields: ["negative_keywords"],
                        message: this.trans.get("Number of negative keywords can not exceed :count.", {
                            count: this.current_negative_keywords_limit
                        })
                    }), !1;
                    if (!this.current_split_negative_keywords.every((e => !(e.length > 80)))) {
                        let e = this.trans.get("The negative keywords may not be greater than :max characters.", {
                            max: 80
                        });
                        return this.catchError({
                            fields: ["negative_keywords"],
                            message: e
                        }), !1
                    }
                }
                let e = this.current_split_filter_keywords.filter((e => -1 !== this.current_split_negative_keywords.indexOf(e)));
                if (e.length > 0) {
                    let t = this.trans.get("The :plural <strong>:keywords</strong> cannot be applied in both Filter and Negative keyword instances.", {
                        plural: e.length > 1 ? "keywords" : "keyword",
                        keywords: e.join("</strong>, <strong>")
                    });
                    return this.catchError({
                        fields: ["filter_keywords", "negative_keywords"],
                        message: t
                    }), !1
                }
                if (null !== this.current_filter_search_volume_min && null !== this.current_filter_search_volume_max) {
                    if (parseFloat(this.current_filter_search_volume_min) > this.search_volume_format.max && (this.current_filter_search_volume_min = this.search_volume_format.max), parseFloat(this.current_filter_search_volume_max) > this.search_volume_format.max && (this.current_filter_search_volume_max = this.search_volume_format.max), parseFloat(this.current_filter_search_volume_min) > parseFloat(this.current_filter_search_volume_max)) return this.catchError({
                        fields: ["search_volume_min"],
                        message: this.trans.get("Minimum search volume cannot be greater than maximum search volume.")
                    }), !1;
                    if (parseFloat(this.current_filter_search_volume_min) == parseFloat(this.current_filter_search_volume_max) && null !== this.current_filter_search_volume_min) return this.catchError({
                        fields: ["search_volume_min", "search_volume_max"],
                        message: this.trans.get("Minimum and maximum search volume cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_search_volume_trend_min && null !== this.current_filter_search_volume_trend_max) {
                    if (parseFloat(this.current_filter_search_volume_trend_min) > this.search_volume_trend_format.max ? this.current_filter_search_volume_trend_min = this.search_volume_trend_format.max : parseFloat(this.current_filter_search_volume_trend_min) < this.search_volume_trend_format.min && (this.current_filter_search_volume_trend_min = this.search_volume_trend_format.min), parseFloat(this.current_filter_search_volume_trend_max) > this.search_volume_trend_format.max ? this.current_filter_search_volume_trend_max = this.search_volume_trend_format.max : parseFloat(this.current_filter_search_volume_trend_max) < this.search_volume_trend_format.min && (this.current_filter_search_volume_trend_max = this.search_volume_trend_format.min), parseFloat(this.current_filter_search_volume_trend_min) > parseFloat(this.current_filter_search_volume_trend_max)) return this.catchError({
                        fields: ["search_volume_trend_min"],
                        message: this.trans.get("Minimum trend cannot be greater than maximum trend.")
                    }), !1;
                    if (parseFloat(this.current_filter_search_volume_trend_min) == parseFloat(this.current_filter_search_volume_trend_max) && null !== this.current_filter_search_volume_trend_min) return this.catchError({
                        fields: ["search_volume_trend_min", "search_volume_trend_max"],
                        message: this.trans.get("Minimum and maximum trend cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_average_cpc_min && null !== this.current_filter_average_cpc_max) {
                    if (parseFloat(this.current_filter_average_cpc_min) > this.average_cpc_format.max && (this.current_filter_average_cpc_min = this.average_cpc_format.max), parseFloat(this.current_filter_average_cpc_max) > this.average_cpc_format.max && (this.current_filter_average_cpc_max = this.average_cpc_format.max), parseFloat(this.current_filter_average_cpc_min) > parseFloat(this.current_filter_average_cpc_max)) return this.catchError({
                        fields: ["average_cpc_min"],
                        message: this.trans.get("Minimum average CPC cannot be greater than maximum average CPC.")
                    }), !1;
                    if (parseFloat(this.current_filter_average_cpc_min) == parseFloat(this.current_filter_average_cpc_max) && null !== this.current_filter_average_cpc_min) return this.catchError({
                        fields: ["average_cpc_min", "average_cpc_max"],
                        message: this.trans.get("Minimum and maximum average CPC cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_competition_min && null !== this.current_filter_competition_max) {
                    if (parseFloat(this.current_filter_competition_min) > this.competition_format.max && (this.current_filter_competition_min = this.competition_format.max), parseFloat(this.current_filter_competition_max) > this.competition_format.max && (this.current_filter_competition_max = this.competition_format.max), parseFloat(this.current_filter_competition_min) > parseFloat(this.current_filter_competition_max)) return this.catchError({
                        fields: ["competition_min"],
                        message: this.trans.get("Minimum competition cannot be greater than maximum competition.")
                    }), !1;
                    if (parseFloat(this.current_filter_competition_min) == parseFloat(this.current_filter_competition_max) && null !== this.current_filter_competition_min) return this.catchError({
                        fields: ["competition_min", "competition_max"],
                        message: this.trans.get("Minimum and maximum competition cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_low_top_page_bid_min && null !== this.current_filter_low_top_page_bid_max) {
                    if (parseFloat(this.current_filter_low_top_page_bid_min) > parseFloat(this.current_filter_low_top_page_bid_max)) return this.catchError({
                        fields: ["low_top_page_bid_min"],
                        message: this.trans.get("Minimum Top of page bid (low range) cannot be greater than maximum Top of page bid (low range).")
                    }), !1;
                    if (parseFloat(this.current_filter_low_top_page_bid_min) == parseFloat(this.current_filter_low_top_page_bid_max) && null !== this.current_filter_low_top_page_bid_min) return this.catchError({
                        fields: ["low_top_page_bid_min", "low_top_page_bid_max"],
                        message: this.trans.get("Minimum and maximum Top of page bid (low range) cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_high_top_page_bid_min && null !== this.current_filter_high_top_page_bid_max) {
                    if (parseFloat(this.current_filter_high_top_page_bid_min) > parseFloat(this.current_filter_high_top_page_bid_max)) return this.catchError({
                        fields: ["high_top_page_bid_min"],
                        message: this.trans.get("Minimum Top of page bid (high range) cannot be greater than maximum Top of page bid (high range).")
                    }), !1;
                    if (parseFloat(this.current_filter_high_top_page_bid_min) == parseFloat(this.current_filter_high_top_page_bid_max) && null !== this.current_filter_high_top_page_bid_min) return this.catchError({
                        fields: ["high_top_page_bid_min", "high_top_page_bid_max"],
                        message: this.trans.get("Minimum and maximum Top of page bid (high range) cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_price_min && null !== this.current_filter_price_max) {
                    if (parseFloat(this.current_filter_price_min) > parseFloat(this.current_filter_price_max)) return this.catchError({
                        fields: ["price_min"],
                        message: this.trans.get("Minimum price cannot be greater than maximum price.")
                    }), !1;
                    if (parseFloat(this.current_filter_price_min) == parseFloat(this.current_filter_price_max) && null !== this.current_filter_price_min) return this.catchError({
                        fields: ["price_min", "price_max"],
                        message: this.trans.get("Minimum and maximum price cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_posts_min && null !== this.current_filter_posts_max) {
                    if (parseFloat(this.current_filter_posts_min) > this.integer_format.max && (this.current_filter_posts_min = this.integer_format.max), parseFloat(this.current_filter_posts_max) > this.integer_format.max && (this.current_filter_posts_max = this.integer_format.max), parseFloat(this.current_filter_posts_min) > parseFloat(this.current_filter_posts_max)) return this.catchError({
                        fields: ["posts_min"],
                        message: this.trans.get("Minimum posts cannot be greater than maximum posts.")
                    }), !1;
                    if (parseFloat(this.current_filter_posts_min) == parseFloat(this.current_filter_posts_max) && null !== this.current_filter_posts_min) return this.catchError({
                        fields: ["posts_min", "post_max"],
                        message: this.trans.get("Minimum and maximum posts cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_followings_min && null !== this.current_filter_followings_max) {
                    if (parseFloat(this.current_filter_followings_min) > parseFloat(this.current_filter_followings_max)) return this.catchError({
                        fields: ["followings_min"],
                        message: this.trans.get("Minimum followings cannot be greater than maximum followings.")
                    }), !1;
                    if (parseFloat(this.current_filter_followings_min) == parseFloat(this.current_filter_followings_max) && null !== this.current_filter_followings_min) return this.catchError({
                        fields: ["followings_min", "followings_max"],
                        message: this.trans.get("Minimum and maximum followings cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_followers_min && null !== this.current_filter_followers_max) {
                    if (parseFloat(this.current_filter_followers_min) > parseFloat(this.current_filter_followers_max)) return this.catchError({
                        fields: ["followers_min"],
                        message: this.trans.get("Minimum followers cannot be greater than maximum followers.")
                    }), !1;
                    if (parseFloat(this.current_filter_followers_min) == parseFloat(this.current_filter_followers_max) && null !== this.current_filter_followers_min) return this.catchError({
                        fields: ["followers_min", "followers_max"],
                        message: this.trans.get("Minimum and maximum followers cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_heart_count_min && null !== this.current_filter_heart_count_max) {
                    if (parseFloat(this.current_filter_heart_count_min) > parseFloat(this.current_filter_heart_count_max)) return this.catchError({
                        fields: ["heart_count_min"],
                        message: this.trans.get("Minimum hearts cannot be greater than maximum hearts.")
                    }), !1;
                    if (parseFloat(this.current_filter_heart_count_min) == parseFloat(this.current_filter_heart_count_max) && null !== this.current_filter_heart_count_min) return this.catchError({
                        fields: ["heart_count_min", "heart_count_max"],
                        message: this.trans.get("Minimum and maximum hearts cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_video_count_min && null !== this.current_filter_video_count_max) {
                    if (parseFloat(this.current_filter_video_count_min) > parseFloat(this.current_filter_video_count_max)) return this.catchError({
                        fields: ["video_count_min"],
                        message: this.trans.get("Minimum videos cannot be greater than maximum videos.")
                    }), !1;
                    if (parseFloat(this.current_filter_video_count_min) == parseFloat(this.current_filter_video_count_max) && null !== this.current_filter_video_count_min) return this.catchError({
                        fields: ["video_count_min", "video_count_max"],
                        message: this.trans.get("Minimum and maximum videos cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_digg_count_min && null !== this.current_filter_digg_count_max) {
                    if (parseFloat(this.current_filter_digg_count_min) > parseFloat(this.current_filter_digg_count_max)) return this.catchError({
                        fields: ["digg_count_min"],
                        message: this.trans.get("Minimum diggs cannot be greater than maximum diggs.")
                    }), !1;
                    if (parseFloat(this.current_filter_digg_count_min) == parseFloat(this.current_filter_digg_count_max) && null !== this.current_filter_digg_count_min) return this.catchError({
                        fields: ["digg_count_min", "digg_count_max"],
                        message: this.trans.get("Minimum and maximum diggs cannot be the same value.")
                    }), !1
                }
                if (null !== this.current_filter_view_count_min && null !== this.current_filter_view_count_max) {
                    if (parseFloat(this.current_filter_view_count_min) > parseFloat(this.current_filter_view_count_max)) return this.catchError({
                        fields: ["view_count_min"],
                        message: this.trans.get("Minimum views cannot be greater than maximum views.")
                    }), !1;
                    if (parseFloat(this.current_filter_view_count_min) == parseFloat(this.current_filter_view_count_max) && null !== this.current_filter_view_count_min) return this.catchError({
                        fields: ["view_count_min", "view_count_max"],
                        message: this.trans.get("Minimum and maximum views cannot be the same value.")
                    }), !1
                }
                var t = document.getElementById("search-results-setting-modal");
                t && bootstrap.Modal.getOrCreateInstance(t).hide(), this.filter(), this.appliedFilter = !0, this.clonedData = {}
            },
            showFilter() {
                this.show_metrics_is_default_location = this.current_metrics_is_default_location, this.show_metrics_is_estimated = this.current_metrics_is_estimated, this.show_current_metrics_location = [...new Set(this.prepend_current_metrics_location)], this.show_current_metrics_language = this.language_list.filter((e => this.current_metrics_language.indexOf(e.id.toString()) >= 0)).map((e => e.name)), (t = this.current_currency_list.find((e => e.code == this.current_metrics_currency))) && this.default_metrics_currency != t.code ? this.show_current_metrics_currency = t.name : this.show_current_metrics_currency = "";
                var e = this.current_network_list.find((e => e.id == this.current_metrics_network));
                e && this.default_metrics_network != e.id ? this.show_current_metrics_network = e.name : this.show_current_metrics_network = "";
                var t = this.current_currency_list.find((e => e.code == this.current_filter_currency));
                if (this.show_current_filter_currency = t ? t.name : "", this.current_filter_location && "" !== this.current_filter_location) {
                    var r = this.current_filter_location.split("|");
                    this.show_current_filter_location = r[1]
                } else this.show_current_filter_location = "";
                var s = this.current_language_list.find((e => e.id == this.current_filter_language));
                this.show_current_filter_language = s ? s.text : "", this.show_current_filter_keywords = this.current_filter_keywords, this.show_current_filter_keywords_partial_match = this.current_filter_keywords_partial_match, this.show_current_filter_search_volume_min = parseInt(this.current_filter_search_volume_min), this.show_current_filter_search_volume_max = parseInt(this.current_filter_search_volume_max), this.show_current_filter_search_volume_trend_min = "" != this.current_filter_search_volume_trend_min && null != this.current_filter_search_volume_trend_min ? parseInt(this.current_filter_search_volume_trend_min) : null, this.show_current_filter_search_volume_trend_max = "" != this.current_filter_search_volume_trend_max && null != this.current_filter_search_volume_trend_max ? parseInt(this.current_filter_search_volume_trend_max) : null, this.show_current_filter_average_cpc_min = parseFloat(this.current_filter_average_cpc_min), this.show_current_filter_average_cpc_max = parseFloat(this.current_filter_average_cpc_max), this.show_current_filter_competition_min = parseInt(this.current_filter_competition_min), this.show_current_filter_competition_max = parseInt(this.current_filter_competition_max), this.show_current_filter_competition = this.current_filter_competition, this.show_current_filter_low_top_page_bid_min = parseFloat(this.current_filter_low_top_page_bid_min), this.show_current_filter_low_top_page_bid_max = parseFloat(this.current_filter_low_top_page_bid_max), this.show_current_filter_high_top_page_bid_min = parseFloat(this.current_filter_high_top_page_bid_min), this.show_current_filter_high_top_page_bid_max = parseFloat(this.current_filter_high_top_page_bid_max), this.show_current_filter_price_min = parseFloat(this.current_filter_price_min), this.show_current_filter_price_max = parseFloat(this.current_filter_price_max), this.show_current_filter_posts_min = parseInt(this.current_filter_posts_min), this.show_current_filter_posts_max = parseInt(this.current_filter_posts_max), this.show_current_filter_followings_min = parseInt(this.current_filter_followings_min), this.show_current_filter_followings_max = parseInt(this.current_filter_followings_max), this.show_current_filter_followers_min = parseInt(this.current_filter_followers_min), this.show_current_filter_followers_max = parseInt(this.current_filter_followers_max), this.show_current_filter_heart_count_min = parseInt(this.current_filter_heart_count_min), this.show_current_filter_heart_count_max = parseInt(this.current_filter_heart_count_max), this.show_current_filter_video_count_min = parseInt(this.current_filter_video_count_min), this.show_current_filter_video_count_max = parseInt(this.current_filter_video_count_max), this.show_current_filter_digg_count_min = parseInt(this.current_filter_digg_count_min), this.show_current_filter_digg_count_max = parseInt(this.current_filter_digg_count_max), this.show_current_filter_view_count_min = parseInt(this.current_filter_view_count_min), this.show_current_filter_view_count_max = parseInt(this.current_filter_view_count_max), this.show_current_negative_keywords = this.current_negative_keywords, this.show_current_filter_keyword_result_period = this.current_filter_keyword_result_period, this.show_current_filter_full_name = this.current_filter_full_name, this.show_current_filter_is_private = this.current_filter_is_private, this.show_current_filter_is_verified = this.current_filter_is_verified
            },
            resetFilter() {
                4 != this.current_tab && (this.current_metrics_is_estimated = this.default_metrics_is_estimated, this.current_metrics_currency = this.default_metrics_currency, this.current_metrics_network = this.default_metrics_network), this.current_filter_keywords = "", this.current_filter_keywords_partial_match = null, this.current_filter_search_volume_min = null, this.current_filter_search_volume_max = null, this.current_filter_search_volume_trend_min = null, this.current_filter_search_volume_trend_max = null, this.current_filter_average_cpc_min = null, this.current_filter_average_cpc_max = null, this.current_filter_competition_min = null, this.current_filter_competition_max = null, this.current_filter_competition = [], this.current_filter_low_top_page_bid_min = null, this.current_filter_low_top_page_bid_max = null, this.current_filter_high_top_page_bid_min = null, this.current_filter_high_top_page_bid_max = null, this.current_filter_price_min = null, this.current_filter_price_max = null, this.current_filter_posts_min = null, this.current_filter_posts_max = null, this.current_filter_followings_min = null, this.current_filter_followings_max = null, this.current_filter_followers_min = null, this.current_filter_followers_max = null, this.current_filter_heart_count_min = null, this.current_filter_heart_count_max = null, this.current_filter_video_count_min = null, this.current_filter_video_count_max = null, this.current_filter_digg_count_min = null, this.current_filter_digg_count_max = null, this.current_filter_view_count_min = null, this.current_filter_view_count_max = null, this.current_negative_keywords = "", this.current_filter_keyword_result_period = this.default_keyword_result_period, this.current_filter_full_name.splice(0, this.current_filter_full_name.length), this.current_filter_is_private = null, this.current_filter_is_verified = "", this.current_filter_currency = null, this.current_filter_location = null, this.current_filter_language = null, this.current_filter_is_on = !1, this.error_fields = {}
            },
            clearFilter(e, t) {
                if ("all" == e || "keywords" == e) {
                    let e = this.current_split_filter_keywords;
                    e.splice(0, e.length), this.current_filter_keywords = e.join("\n")
                }
                if ("all" != e && "keywords_partial_match" != e || (this.current_filter_keywords_partial_match = null), "all" != e && "search_volume" != e || (this.current_filter_search_volume_min = "", this.current_filter_search_volume_max = ""), "all" != e && "search_volume_trend" != e || (this.current_filter_search_volume_trend_min = "", this.current_filter_search_volume_trend_max = ""), "all" != e && "average_cpc" != e || (this.current_filter_average_cpc_min = "", this.current_filter_average_cpc_max = ""), "all" != e && "competition" != e || (this.current_filter_competition_min = "", this.current_filter_competition_max = ""), "all" != e && "low_top_page_bid" != e || (this.current_filter_low_top_page_bid_min = "", this.current_filter_low_top_page_bid_max = ""), "all" != e && "high_top_page_bid" != e || (this.current_filter_high_top_page_bid_min = "", this.current_filter_high_top_page_bid_max = ""), "all" != e && "competition_bing" != e || this.current_filter_competition.splice(t, 1), "all" != e && "price" != e || (this.current_filter_price_min = "", this.current_filter_price_max = ""), "all" != e && "posts" != e || (this.current_filter_posts_min = "", this.current_filter_posts_max = ""), "all" != e && "followings" != e || (this.current_filter_followings_min = "", this.current_filter_followings_max = ""), "all" != e && "followers" != e || (this.current_filter_followers_min = "", this.current_filter_followers_max = ""), "all" != e && "heart_count" != e || (this.current_filter_heart_count_min = "", this.current_filter_heart_count_max = ""), "all" != e && "video_count" != e || (this.current_filter_video_count_min = "", this.current_filter_video_count_max = ""), "all" != e && "digg_count" != e || (this.current_filter_digg_count_min = "", this.current_filter_digg_count_max = ""), "all" != e && "view_count" != e || (this.current_filter_view_count_min = "", this.current_filter_view_count_max = ""), "all" == e || "negative_keywords" == e) {
                    let e = this.current_split_negative_keywords;
                    e.splice(0, e.length), this.current_negative_keywords = e.join("\n")
                }
                "all" != e && "full_name" != e || this.current_filter_full_name.splice(0, this.current_filter_full_name.length), "all" != e && "is_private" != e || (this.current_filter_is_private = ""), "all" != e && "is_verified" != e || (this.current_filter_is_verified = ""), "all" != e && "keyword_result_period" != e || (this.current_filter_keyword_result_period = this.default_keyword_result_period), "all" != e && "currency" != e || (this.current_filter_currency = ""), "all" != e && "location" != e || (this.current_filter_location = null), "all" != e && "language" != e || (this.current_filter_language = null), this.error_fields = {}, this.filter()
            },
            checkDuplicate() {
                let e = _.sortBy(this.current_negative_keywords.toLowerCase().replace(/,/g, "\n").split("\n"));
                e = e.map((e => e.trim())), e = e.filter(((t, r) => t && e.indexOf(t) === r)), this.current_negative_keywords = e ? e.join("\n") : ""
            },
            checkFilterKeywordDuplicate() {
                let e = _.sortBy(this.current_filter_keywords.toLowerCase().replace(/,/g, "\n").split("\n"));
                e = e.map((e => e.trim())), e = e.filter(((t, r) => t && e.indexOf(t) === r)), this.current_filter_keywords = e ? e.join("\n") : ""
            },
            allowHtml: e => e,
            locationResults: e => ({
                results: e.locations.map((e => ({
                    id: e.location_id,
                    text: e.location_name,
                    html: e.location_name_highlighted
                })))
            }),
            locationResultsTemplate: e => e.html,
            async excel(e) {
                if (0 == this.all_keywords.length) return !1;
                if (this.loading = !0, this.selected.length) var t = this.selected;
                else t = this.all_keywords;
                try {
                    var r = {
                            "Content-Type": "application/json",
                            Token: this.current_token
                        },
                        s = await axios.post(this.export_url, {
                            keywords_payload: this.keywords_payload,
                            sort: this.sort_by + this.sort_direction,
                            type: e,
                            export_keywords: t,
                            keyword_basket_search_engine: this.current_sub_tab
                        }, {
                            headers: r
                        });
                    if (s && s.data) {
                        if (s.data.redirect) return window.location = s.data.redirect;
                        if (s.data.url) {
                            var a = document.createElement("a");
                            a.href = s.data.url, document.body.appendChild(a), a.click();
                            var o = de(t.length).format("0,0"),
                                i = "",
                                n = "csv" == e ? "CSV" : "Excel",
                                l = null;
                            if (12 == this.search_engine && 1 == t.length)
                                if (window.user_is_paid) {
                                    var c = document.querySelector(`input[value="${t[0]}"]`);
                                    l = c.dataset ? c.dataset.value : null
                                } else l = (l = JSON.parse(t[0]))[0];
                            i = 11 == this.current_tab ? t.length > 1 ? this.trans.get(":count :product exported to :type.", {
                                count: o,
                                product: "products",
                                type: n
                            }) : this.trans.get('":product" exported to :type.', {
                                product: 12 == this.search_engine && l ? l : t[0],
                                type: n
                            }) : 10 == this.current_tab ? t.length > 1 ? this.trans.get(":count :people exported to :type.", {
                                count: o,
                                people: "people",
                                type: n
                            }) : this.trans.get('":people" exported to :type.', {
                                people: 12 == this.search_engine && l ? l : t[0],
                                type: n
                            }) : 7 == this.current_tab ? t.length > 1 ? this.trans.get(":count :hashtag exported to :type.", {
                                count: o,
                                hashtag: "hashtags",
                                type: n
                            }) : this.trans.get('":hashtag" exported to :type.', {
                                hashtag: 12 == this.search_engine && l ? l : t[0],
                                type: n
                            }) : t.length > 1 ? this.trans.get(":count :keyword exported to :type.", {
                                count: o,
                                keyword: "keywords",
                                type: n
                            }) : this.trans.get('":keyword" exported to :type.', {
                                keyword: 12 == this.search_engine && l ? l : t[0],
                                type: n
                            }), bsToaster.create("", i, {
                                type: "success",
                                animation: !0,
                                delay: 5e3
                            }), this.loading = !1
                        } else this.loading = !1, this.catchError({
                            message: this.trans.get("Sorry, there was an unexpected error.")
                        })
                    } else this.loading = !1, this.catchError({
                        message: this.trans.get("Sorry, there was an unexpected error.")
                    })
                } catch (_) {
                    this.loading = !1, this.catchError(_)
                }
            },
            async copy(e, t = !1) {
                if (0 == this.all_keywords.length) return !1;
                this.loading = !0;
                var r = [];
                try {
                    if ("keyword" == e) {
                        var s = this.all_keywords;
                        if (this.selected.length)(a = [...new Set(this.selected)]).sort(((e, t) => s.indexOf(e) < s.indexOf(t) ? -1 : s.indexOf(e) > s.indexOf(t) ? 1 : 0));
                        else var a = [...new Set(this.all_keywords)];
                        let e = "\n";
                        if (12 == this.current_tab) {
                            let e = [];
                            a.forEach(((t, r) => {
                                void 0 !== this.all_keywords_data[t].keyword_source && e.push(this.all_keywords_data[t].keyword_source)
                            })), a = e
                        } else 2 == this.search_engine && (e = ",\n", 7 == this.current_tab && (e = " ", a.forEach(((e, t) => {
                            "#" != e.substr(0, 1) && (e = "#" + e), a[t] = e
                        })))), 9 == this.search_engine && 7 == this.current_tab && (e = " ", a.forEach(((e, t) => {
                            "#" != e.substr(0, 1) && (e = "#" + e), a[t] = e
                        }))), 7 == this.search_engine && (e = " ", 7 == this.current_tab && a.forEach(((e, t) => {
                            "#" != e.substr(0, 1) && (e = "#" + e), a[t] = e
                        })), 10 == this.current_tab && a.forEach(((e, t) => {
                            "@" != e.substr(0, 1) && (e = "@" + e), e.indexOf(" ") > 0 && (e = e.substr(0, e.indexOf(" "))), a[t] = e
                        }))), 13 == this.search_engine && (e = " ", 7 == this.current_tab && a.forEach(((e, t) => {
                            "#" != e.substr(0, 1) && (e = "#" + e), a[t] = e
                        })), 10 == this.current_tab && a.forEach(((e, t) => {
                            "@" != e.substr(0, 1) && (e = "@" + e), e.indexOf(" ") > 0 && (e = e.substr(0, e.indexOf(" "))), a[t] = e
                        })));
                        var o = de(a.length).format("0,0"),
                            i = "";
                        i = 11 == this.current_tab ? a.length > 1 ? this.trans.get(":count :product copied.", {
                            count: o,
                            product: "products"
                        }) : this.trans.get('":product" copied.', {
                            product: a[0]
                        }) : 10 == this.current_tab ? a.length > 1 ? this.trans.get(":count :people copied.", {
                            count: o,
                            people: "people"
                        }) : this.trans.get('":people" copied.', {
                            people: a[0]
                        }) : 7 == this.current_tab ? a.length > 1 ? this.trans.get(":count :hashtag copied.", {
                            count: o,
                            hashtag: "hashtags"
                        }) : this.trans.get('":hashtag" copied.', {
                            hashtag: a[0]
                        }) : a.length > 1 ? this.trans.get(":count :keyword copied.", {
                            count: o,
                            keyword: "keywords"
                        }) : this.trans.get('":keyword" copied.', {
                            keyword: a[0]
                        }), this.$copyText(a.join(e)).then((e => {
                            this.loading = !1, bsToaster.create("", i, {
                                type: "success",
                                animation: !0,
                                delay: 5e3
                            })
                        }), (e => {
                            this.loading = !1, this.catchError({
                                message: this.trans.get("Sorry, there was an unexpected error.")
                            })
                        }))
                    } else {
                        if (("search_volume" == e || "all" == e) && !this.current_permissions.show_search_volume_data) return !1;
                        if ("product" == e && !this.current_permissions.show_product_data) return !1;
                        if ("posts" == e && !this.current_permissions.show_posts_data) return !1;
                        if ("follower_count" == e && !this.current_permissions.show_follower_count_data) return !1;
                        if ("relative_popularity" == e && !this.current_permissions.show_relative_popularity_data) return !1;
                        if ("search_frequency_increase" == e && !this.current_permissions.show_search_frequency_increase_data) return !1;
                        let n = "\n";
                        if (this.selected.length) a = [...new Set(this.selected)];
                        else a = [...new Set(this.all_keywords)];
                        s = this.all_keywords;
                        if (this.selected.length)(a = [...new Set(this.selected)]).sort(((e, t) => s.indexOf(e) < s.indexOf(t) ? -1 : s.indexOf(e) > s.indexOf(t) ? 1 : 0));
                        else a = [...new Set(this.all_keywords)];
                        a.forEach(((t, s) => {
                            var o = [];
                            r = [];
                            var i = t;
                            void 0 !== this.all_keywords_data[t].keyword_source && (i = this.all_keywords_data[t].keyword_source), 2 == this.search_engine && 7 == this.current_tab && "#" != i.substr(0, 1) && (i = "#" + i), 9 == this.search_engine && 7 == this.current_tab && "#" != i.substr(0, 1) && (i = "#" + i), 7 == this.search_engine && (7 == this.current_tab && "#" != i.substr(0, 1) && (i = "#" + i), 10 == this.current_tab && ("@" != i.substr(0, 1) && (i = "@" + i), i.indexOf(" ") > 0 && (i = i.substr(0, i.indexOf(" ")))));
                            let n = document.createElement("textarea");
                            if (n.innerHTML = i, i = n.value, o.push(i), "product" === e) r.push("Product");
                            else r.push("Keyword");
                            if (this.current_permissions.show_search_engine_data && "all" == e) {
                                var l = void 0 !== this.all_keywords_data[t].search_engine_format ? this.all_keywords_data[t].search_engine_format : null;
                                o.push(l), r.push("Search Engine")
                            }
                            if (this.current_permissions.show_location_data && "all" == e) {
                                var c = void 0 !== this.all_keywords_data[t].location_format ? this.all_keywords_data[t].location_format : null;
                                o.push(c), r.push("Location")
                            }
                            if (this.current_permissions.show_language_data && "all" == e) {
                                var _ = void 0 !== this.all_keywords_data[t].language_format ? this.all_keywords_data[t].language_format : null;
                                o.push(_), r.push("Language")
                            }
                            if (this.current_permissions.show_network_data && "all" == e) {
                                var u = void 0 !== this.all_keywords_data[t].network_format ? this.all_keywords_data[t].network_format : null;
                                o.push(u), r.push("Network")
                            }
                            if (this.current_permissions.show_relative_popularity_data && "all" == e) {
                                var d = void 0 !== this.all_keywords_data[t].relative_popularity ? this.all_keywords_data[t].relative_popularity : null;
                                o.push(d), r.push("Relative Popularity")
                            }
                            if (this.current_permissions.show_search_frequency_increase_data && "all" == e) {
                                var m = void 0 !== this.all_keywords_data[t].search_frequency_increase ? this.all_keywords_data[t].search_frequency_increase : null;
                                if (o.push(m), null !== m) var h = this.all_keywords_data[t].breakout ? "Yes" : "No";
                                else h = null;
                                o.push(h), r.push("Search Frequency")
                            }
                            if (this.current_permissions.show_posts_data && ("posts" == e || 7 == this.search_engine && 7 == this.current_tab && "all" == e)) {
                                var p = void 0 !== this.all_keywords_data[t].posts ? this.all_keywords_data[t].posts : null;
                                o.push(p), r.push("Posts")
                            }
                            if (this.current_permissions.show_following_count_data && "following_count" == e) {
                                var g = void 0 !== this.all_keywords_data[t].following_count ? this.all_keywords_data[t].following_count : null;
                                o.push(following_count), r.push("Following")
                            }
                            if (this.current_permissions.show_follower_count_data && "follower_count" == e) {
                                g = void 0 !== this.all_keywords_data[t].follower_count ? this.all_keywords_data[t].follower_count : null;
                                o.push(g), r.push("Follower")
                            }
                            if (this.current_permissions.show_heart_count_data && "heart_count" == e) {
                                var y = void 0 !== this.all_keywords_data[t].heart_count ? this.all_keywords_data[t].heart_count : null;
                                o.push(y), r.push("Heart")
                            }
                            if (this.current_permissions.show_video_count_data && "video_count" == e) {
                                var f = void 0 !== this.all_keywords_data[t].video_count ? this.all_keywords_data[t].video_count : null;
                                o.push(f), r.push("Video")
                            }
                            if (this.current_permissions.show_digg_count_data && "digg_count" == e) {
                                var w = void 0 !== this.all_keywords_data[t].digg_count ? this.all_keywords_data[t].digg_count : null;
                                o.push(w), r.push("Digg")
                            }
                            if (this.current_permissions.show_view_count_data && "view_count" == e) {
                                var b = void 0 !== this.all_keywords_data[t].video_count ? this.all_keywords_data[t].video_count : null;
                                o.push(b), r.push("View")
                            }
                            if (this.current_permissions.show_search_volume_data && ("search_volume" == e || "all" == e)) {
                                var v = void 0 !== this.all_keywords_data[t].search_volume ? this.all_keywords_data[t].search_volume : null;
                                o.push(v), r.push("Search Volume")
                            }
                            if (this.current_permissions.show_search_volume_data && "all" == e) {
                                var k = void 0 !== this.all_keywords_data[t].search_volume_trend ? this.all_keywords_data[t].search_volume_trend : null;
                                o.push(k), r.push("Trend")
                            }
                            if (this.current_permissions.show_cpc_data && "all" == e) {
                                var x = void 0 !== this.all_keywords_data[t].average_cpc ? this.all_keywords_data[t].average_cpc : null;
                                "" !== x && null !== x && 12 == this.current_tab && (x = this.all_keywords_data[t].currency + x), o.push(x), r.push("Average CPC")
                            }
                            if (this.current_permissions.show_low_top_page_bid_data && "all" == e) {
                                var C = void 0 !== this.all_keywords_data[t].low_top_page_bid ? this.all_keywords_data[t].low_top_page_bid : null;
                                "" !== C && null !== C && 12 == this.current_tab && (C = this.all_keywords_data[t].currency + C), o.push(C), r.push("Top of page bid (low range)")
                            }
                            if (this.current_permissions.show_high_top_page_bid_data && "all" == e) {
                                var S = void 0 !== this.all_keywords_data[t].high_top_page_bid ? this.all_keywords_data[t].high_top_page_bid : null;
                                "" !== S && null !== S && 12 == this.current_tab && (S = this.all_keywords_data[t].currency + S), o.push(S), r.push("Top of page bid (high range)")
                            }
                            if (this.current_permissions.show_competition_data && "all" == e) {
                                var T = void 0 !== this.all_keywords_data[t].competition ? this.all_keywords_data[t].competition : null;
                                o.push(T), r.push("Competition")
                            }
                            if (this.current_permissions.show_follower_count_data && "follower_count" == e) {
                                g = void 0 !== this.all_keywords_data[t].follower_count ? this.all_keywords_data[t].follower_count : null;
                                o.push(g), r.push("Followers")
                            }
                            if (this.current_permissions.show_product_data && "product" == e) {
                                var F = void 0 !== this.all_keywords_data[t].asin ? this.all_keywords_data[t].asin : null;
                                o.push(F), r.push("ASIN");
                                var q = void 0 !== this.all_keywords_data[t].brand ? this.all_keywords_data[t].brand : null;
                                o.push(q), r.push("Brand");
                                var E = void 0 !== this.all_keywords_data[t].price_format ? this.all_keywords_data[t].price_format : null;
                                o.push(E), r.push("Price");
                                var U = void 0 !== this.all_keywords_data[t].url ? this.all_keywords_data[t].url : null;
                                o.push(U), r.push("URL")
                            }
                            if (this.current_permissions.show_timestamp_data && "all" == e) {
                                var M = void 0 !== this.all_keywords_data[t].timestamp_format ? this.all_keywords_data[t].timestamp_format : null;
                                o.push(M), r.push("Last Updated")
                            }
                            a[s] = o.join("\t").trim()
                        }));
                        o = de(a.length).format("0,0"), i = "";
                        i = 11 == this.current_tab ? a.length > 1 ? this.trans.get(":count :product copied.", {
                            count: o,
                            product: "products"
                        }) : this.trans.get('":product" copied.', {
                            product: a[0].split("\t")[0]
                        }) : 10 == this.current_tab ? a.length > 1 ? this.trans.get(":count :people copied.", {
                            count: o,
                            people: "people"
                        }) : this.trans.get('":people" copied.', {
                            people: a[0].split("\t")[0]
                        }) : 7 == this.current_tab ? a.length > 1 ? this.trans.get(":count :hashtag copied.", {
                            count: o,
                            hashtag: "hashtags"
                        }) : this.trans.get('":hashtag" copied.', {
                            hashtag: a[0].split("\t")[0]
                        }) : a.length > 1 ? this.trans.get(":count :keyword copied.", {
                            count: o,
                            keyword: "keywords"
                        }) : this.trans.get('":keyword" copied.', {
                            keyword: a[0].split("\t")[0]
                        }), "keyword" != e && t && a.unshift(r.join("\t")), this.$copyText(a.join(n)).then((e => {
                            this.loading = !1, bsToaster.create("", i, {
                                type: "success",
                                animation: !0,
                                delay: 5e3
                            })
                        }), (e => {
                            this.loading = !1, this.catchError({
                                message: this.trans.get("Sorry, there was an unexpected error.")
                            })
                        }))
                    }
                } catch (n) {
                    this.loading = !1, this.catchError(n)
                }
            },
            async add_basket(e) {
                if (0 == this.all_keywords.length || !this.allow_keyword_basket) return !1;
                if (this.loading = !0, e || this.selected.length > 0) {
                    if (e) var t = [...new Set(e)];
                    else t = [...new Set(this.selected)];
                    if (t.length > 1) var r = de(t.length).format("0,0"),
                        s = this.trans.get(":count keywords added to the basket.", {
                            count: r
                        });
                    else {
                        var a = t[0];
                        7 == this.current_tab && "#" != a.substr(0, 1) && (a = "#" + a);
                        s = this.trans.get('":keyword" added to the basket.', {
                            keyword: a
                        })
                    }
                } else t = [...new Set(this.all_keywords)], r = de(t.length).format("0,0"), s = this.trans.get(":count keywords added to the basket.", {
                    count: r
                });
                if (this.user_is_paid) {
                    n = t;
                    try {
                        var o = {
                            "Content-Type": "application/json",
                            Token: this.current_token
                        };
                        if (this.save_basket_url) {
                            var i = await axios.post(this.save_basket_url, {
                                keywords_payload: this.keywords_payload,
                                basket_keywords: n,
                                keyword_basket_search_engine: this.search_engine
                            }, {
                                headers: o
                            });
                            if (i && i.data) {
                                if (i.data.redirect) return window.location = i.data.redirect;
                                "success" == i.data.result ? (this.$root.update_keyword_basket_counter(".total-keyword-basket-items", i.data.total), bsToaster.create("", s, {
                                    type: "success",
                                    animation: !0,
                                    delay: 5e3
                                }), this.loading = !1) : (this.loading = !1, this.catchError({
                                    message: this.trans.get("Sorry, there was an unexpected error.")
                                }))
                            } else this.loading = !1, this.catchError({
                                message: this.trans.get("Sorry, there was an unexpected error.")
                            })
                        } else this.loading = !1
                    } catch (l) {
                        this.loading = !1, this.$root.update_keyword_basket_counter(".total-keyword-basket-items", l.response.data.total), this.catchError(l)
                    }
                } else {
                    if (7 == this.current_tab && t.forEach(((e, r) => {
                            t[r] = "#" + e
                        })), this.allow_storage_basket && "undefined" != typeof Storage) var n = this.$storage.getStorageSync("basket_keywords_" + this.search_engine);
                    else var n = this.$cookies.get("basket_keywords_" + this.search_engine);
                    if (n || (n = {
                            search_engine: this.search_engine,
                            keywords: []
                        }), t.forEach(((e, t) => {
                            var r = this.current_metrics_location[0] ? this.current_metrics_location[0] : "",
                                s = JSON.stringify({
                                    0: e,
                                    1: this.search_engine,
                                    2: r
                                }),
                                a = {
                                    keyword_id: s
                                },
                                o = !0;
                            n.keywords && n.keywords.forEach(((e, t) => {
                                e.keyword_id == s && (n.keywords[t] = a, o = !1)
                            })), o && n.keywords.push(a)
                        })), n.keywords.length > this.basket_keywords_limit) return this.loading = !1, this.catchError({
                        message: this.trans.get("Sorry, you can only add up to :limit keywords in your Keyword Basket for every search engine.", {
                            limit: de(this.basket_keywords_limit).format("0,0")
                        })
                    }), Ce("update-basket-badge", this.user_is_paid, this.current_sub_tabs), !1;
                    try {
                        if (this.allow_storage_basket && "undefined" != typeof Storage) {
                            if (this.byte_len(n) > 5e6) return this.loading = !1, this.catchError({
                                message: this.trans.get("Sorry, there was an unexpected error. Please try again.")
                            }), !1;
                            await this.$storage.setStorageSync("basket_keywords_" + this.search_engine, n)
                        } else {
                            if (this.byte_len(n) > 4055) return this.loading = !1, this.catchError({
                                message: this.trans.get("Sorry, there was an unexpected error. Please try again.")
                            }), !1;
                            await this.$cookies.set("basket_keywords_" + this.search_engine, n)
                        }
                    } catch (l) {
                        return this.loading = !1, this.catchError(l), !1
                    }
                    Ce("update-basket-badge", this.user_is_paid, this.current_sub_tabs), bsToaster.create("", s, {
                        type: "success",
                        animation: !0,
                        delay: 5e3
                    }), this.loading = !1
                }
            },
            url_add_param: (e, t, r) => ((e = new URL(e)).searchParams.set(t, r), e.toString()),
            format_boolean_filter: e => null !== e ? 1 == e ? "Yes" : "No" : "",
            byte_len(e) {
                var t = JSON.stringify(e);
                return (t = encodeURIComponent("<q></q>" + t)).length
            },
            catchError(e) {
                if (this.error = null, this.loading = !1, e.response)
                    if (e.response.data.errors) {
                        var t = e.response.data.errors;
                        for (var r in t) t.hasOwnProperty(r) && t[r].forEach((e => {
                            this.error_fields[r] = !0, this.error = null !== this.error ? this.error : "", this.error += "<li>" + e + "</li>"
                        }))
                    } else e.response.data.message ? this.error = e.response.data.message : e.response.statusText ? this.error = e.response.statusText : this.error = e.response.data;
                else if (e.request) this.error = this.trans.get("Sorry, there was an unexpected error.");
                else if (e.message && (this.error = e.message, void 0 !== e.fields && e.fields.length > 0))
                    for (var s of e.fields) this.error_fields[s] = !0;
                if (e.request && 4 === e.request.readyState && 0 === e.request.status) bsDialogs.create(this.trans.get("Please check your Internet connection and try again."), [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((e => {
                    "true" === e && location.reload()
                }));
                else {
                    if (e.response && 426 == e.response.status) return bsDialogs.create(this.trans.get("Sorry, there was an unexpected error. Please refresh page and try again."), [{
                        classes: "btn-danger mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "error").then((e => {
                        "true" === e && location.reload()
                    }));
                    this.error && bsDialogs.create(this.error, [{
                        classes: "btn-danger mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "error").then((e => {}))
                }
            },
            async clonedDataOnShownModal() {
                this.clonedData = _.pickBy(this.$data, ((e, t) => _.startsWith(t, "current_"))), this.appliedFilter = !1, this.error_fields = {}
            },
            async restoreClonedDataOnHideModal() {
                this.appliedFilter || Object.assign(this.$data, this.clonedData), this.clonedData = {}
            },
            sanitizePayload: e => (dp.forEach((t => {
                let r = new RegExp("\\" + t, "g");
                e = e.replace(r, "\\" + t)
            })), e)
        }
    };
oe.register(ie, ne, le, me, _e);
const hp = Ue({
        components: {
            Pie: j
        },
        props: {
            charttitle: {
                type: String,
                default: ""
            },
            chartdata: {
                type: Array,
                default: () => []
            },
            chartlabels: {
                type: Array,
                default: () => []
            },
            chartid: {
                type: String,
                default: "pie-chart"
            },
            width: {
                type: Number,
                default: 400
            },
            height: {
                type: Number,
                default: 400
            },
            cssClasses: {
                type: String,
                default: ""
            },
            styles: {
                type: Object,
                default: () => {}
            }
        },
        data: () => ({}),
        computed: {
            chartData() {
                return {
                    labels: this.chartlabels,
                    datasets: this.chartdata
                }
            },
            chartOptions() {
                var e = {
                    responsive: !0,
                    plugins: {
                        title: {
                            display: !1,
                            text: ""
                        },
                        tooltip: {
                            callbacks: {
                                label: this.tooltiplabel,
                                title: this.tooltiptitle
                            }
                        }
                    }
                };
                return this.charttitle && (e.plugins.title = {
                    display: !0,
                    font: {
                        size: 20
                    },
                    text: this.charttitle
                }), e
            }
        },
        async created() {
            oe.defaults.animation = !1, oe.defaults.color = "#444", oe.defaults.font.family = "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'", oe.defaults.font.size = 16, oe.defaults.plugins.title.lineHeight = 1.5, oe.defaults.plugins.title.fontSize = 20, oe.defaults.plugins.title.fontStyle = "bold", oe.defaults.elements.arc.borderColor = "rgba(255, 255, 255)", oe.defaults.elements.arc.borderWidth = 2, oe.defaults.elements.bar.borderColor = "rgba(0, 0, 0, 0.1)", oe.defaults.elements.bar.borderWidth = 0, oe.defaults.plugins.tooltip.external = e => {
                let t = document.getElementById("chartjs-tooltip");
                t || (t = document.createElement("div"), t.id = "chartjs-tooltip", t.className = "popover fade show bs-popover-top", t.attributes.role = "tooltip", t.innerHTML = '<div class="popover-arrow" style="position: absolute; left: 45%;"></div><h3 class="popover-header"></h3><div class="popover-body"></div>', document.body.appendChild(t));
                const r = e.tooltip;
                if (0 === r.opacity) return void(t.style.opacity = 0);
                if (t.classList.remove("above", "below", "no-transform"), r.yAlign ? t.classList.add(r.yAlign) : t.classList.add("no-transform"), r.body) {
                    let e = r.title || [],
                        s = r.body.map((function(e) {
                            return e.lines
                        })),
                        a = "";
                    e.forEach((e => {
                        a += e
                    }));
                    let o = t.querySelector(".popover-header");
                    o && (o.textContent = a);
                    let i = "";
                    s.forEach((e => {
                        i += e
                    }));
                    let n = t.querySelector(".popover-body");
                    n && (n.textContent = i)
                }
                const s = e.chart.canvas.getBoundingClientRect();
                t.style.font = r.options.bodyFont.string, t.style.left = s.left - .5 * t.offsetWidth + window.pageXOffset + r.caretX + "px", t.style.opacity = 1, t.style.padding = r.options.padding + "px " + r.options.padding + "px", t.style.pointerEvents = "none", t.style.position = "absolute", t.style.top = s.top - t.offsetHeight - 20 + window.pageYOffset + r.caretY + "px"
            }, oe.defaults.plugins.tooltip.enabled = !1, oe.defaults.plugins.tooltip.padding = 0
        },
        methods: {
            tooltiplabel(e) {
                return this.trans.get(":count% device breakdown", {
                    count: de(e.raw).format("0,0.00")
                })
            },
            tooltiptitle(e) {
                var t = e[0].label;
                return e[0].dataset[e[0].datasetIndex] && e[0].dataset[e[0].datasetIndex].label && (t += " (" + e[0].dataset[e[0].datasetIndex].label + ")"), t
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("Pie");
            return b(), x(i, {
                "chart-data": o.chartData,
                "chart-options": o.chartOptions,
                chartId: r.chartid,
                height: r.height,
                width: r.width,
                cssClasses: r.cssClasses,
                styles: r.styles
            }, null, 8, ["chart-data", "chart-options", "chartId", "height", "width", "cssClasses", "styles"])
        }]
    ]),
    pp = {
        components: {
            "pie-chart": hp
        },
        props: {
            loading: {
                type: Boolean,
                required: !0,
                default: !1
            },
            show_pie_chart: {
                type: Boolean,
                required: !0,
                default: !1
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            show_google_trends_chart: {
                type: Boolean,
                required: !1,
                default: !1
            },
            show_settings_button: {
                type: Boolean,
                required: !1,
                default: !0
            },
            summaries: {
                type: [Object, Array],
                required: !0,
                default: function() {
                    return {}
                }
            },
            pie_summaries: {
                type: [Object, Array],
                required: !0,
                default: function() {
                    return {}
                }
            },
            inittrends: {
                type: Function,
                required: !1,
                default: function() {}
            },
            current_permissions: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            current_metrics_currency: {
                type: String,
                required: !1,
                default: ""
            }
        },
        data: () => ({}),
        mounted() {
            this.initPopover()
        },
        updated() {
            this.initPopover()
        },
        beforeUnmount() {
            this.$nextTick((() => {
                this.popoverList.forEach((e => {
                    e.dispose()
                }))
            }))
        },
        computed: {
            show_trends() {
                return this.current_permissions.show_search_volume_data && this.summaries.search_volume_trend_data
            }
        },
        watch: {
            show_trends: {
                handler(e, t) {
                    1 == e && this.inittrends()
                }
            }
        },
        methods: {
            initPopover() {
                this.$nextTick((() => {
                    var e = document.querySelectorAll('[data-bs-toggle="popover-sv-summary"]');
                    this.popoverList = [...e].map((e => new bootstrap.Popover(e, {
                        sanitize: !1,
                        html: !0
                    })))
                }))
            }
        }
    },
    gp = {
        class: "row row-cols-2 row-cols-md-3 row-cols-lg-6 row-cols-xl-6"
    },
    yp = {
        class: "col my-1"
    },
    fp = {
        key: 0,
        class: "search-results-summary-unique-keywords-label"
    },
    wp = {
        key: 1,
        class: "search-results-summary-unique-keywords-label"
    },
    bp = {
        key: 2,
        class: "search-results-summary-unique-keywords-label"
    },
    vp = {
        key: 3,
        class: "search-results-summary-unique-keywords-label"
    },
    kp = {
        key: 4,
        class: "search-results-summary-unique-keywords-label"
    },
    xp = {
        key: 5,
        class: "search-results-summary-unique-keywords-label"
    },
    Cp = {
        key: 6,
        class: "search-results-summary-unique-keywords-label"
    },
    Sp = {
        class: "search-results-summary-unique-keywords-value h3"
    },
    Tp = {
        key: 0
    },
    Fp = {
        key: 1
    },
    qp = {
        class: "col my-1"
    },
    Ep = {
        key: 0
    },
    Up = {
        class: "search-results-summary-total-search-volume-label"
    },
    Mp = ["data-bs-content"],
    Ap = {
        key: 0,
        class: "search-results-summary-total-search-volume-value h3"
    },
    Pp = {
        key: 0
    },
    Lp = {
        key: 1,
        class: "text-muted"
    },
    Bp = ["data-bs-content"],
    $p = {
        key: 1,
        class: "search-results-summary-search-volume-value text-blur h3"
    },
    Dp = {
        class: "col my-1"
    },
    jp = {
        key: 0
    },
    Op = {
        class: "search-results-summary-average-trend-label"
    },
    Vp = ["data-bs-content"],
    Hp = {
        key: 0,
        class: "search-results-summary-average-trend-value h3"
    },
    Ip = {
        key: 0
    },
    Np = {
        key: 0,
        class: "text-success"
    },
    Rp = S("i", {
        class: "bi bi-arrow-up"
    }, null, -1),
    Kp = {
        key: 1,
        class: "text-danger"
    },
    Jp = S("i", {
        class: "bi bi-arrow-down"
    }, null, -1),
    Wp = {
        key: 2
    },
    zp = {
        key: 0
    },
    Yp = {
        key: 1,
        class: "text-muted"
    },
    Gp = ["data-bs-content"],
    Xp = {
        key: 1,
        class: "search-results-summary-average-trend-value text-blur h3"
    },
    Qp = {
        key: 0,
        class: "col my-1"
    },
    Zp = {
        key: 0
    },
    eg = {
        class: "search-results-summary-average-cpc-label"
    },
    tg = ["data-bs-content"],
    rg = {
        key: 0,
        class: "search-results-summary-average-cpc-value h3"
    },
    sg = {
        key: 0
    },
    ag = {
        key: 1,
        class: "text-muted"
    },
    og = ["data-bs-content"],
    ig = {
        key: 1,
        class: "search-results-summary-average-cpc-value text-blur h3"
    },
    ng = {
        key: 1
    },
    lg = {
        class: "search-results-summary-top-page-bid-label"
    },
    cg = {
        key: 0
    },
    _g = {
        class: "row"
    },
    ug = {
        class: "col"
    },
    dg = {
        key: 0,
        class: "search-results-summary-high-top-page-bid-value h5"
    },
    mg = {
        key: 0
    },
    hg = {
        key: 1,
        class: "text-muted"
    },
    pg = ["data-bs-content"],
    gg = {
        key: 1,
        class: "search-results-summary-low-top-page-bid-value text-blur h3"
    },
    yg = {
        key: 0,
        class: "row"
    },
    fg = {
        class: "col"
    },
    wg = {
        key: 0,
        class: "search-results-summary-high-top-page-bid-value h5"
    },
    bg = {
        key: 0
    },
    vg = {
        key: 1,
        class: "text-muted"
    },
    kg = ["data-bs-content"],
    xg = {
        key: 1,
        class: "search-results-summary-high-top-page-bid-value text-blur h3"
    },
    Cg = {
        class: "col my-1"
    },
    Sg = {
        key: 0
    },
    Tg = {
        class: "search-results-summary-average-competition-label"
    },
    Fg = ["data-bs-content"],
    qg = {
        key: 0,
        class: "search-results-summary-average-competition-value h3"
    },
    Eg = {
        key: 0
    },
    Ug = {
        key: 0
    },
    Mg = {
        key: 1
    },
    Ag = {
        key: 1,
        class: "text-muted"
    },
    Pg = ["data-bs-content"],
    Lg = {
        key: 1,
        class: "search-results-summary-average-competition-value text-blur h3"
    },
    Bg = {
        key: 1,
        class: "col my-1"
    },
    $g = {
        class: "col my-1"
    },
    Dg = {
        key: 0
    },
    jg = {
        class: "search-results-settings-modal btn btn-outline-primary float-lg-end",
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        type: "button"
    },
    Og = S("i", {
        class: "bi bi-gear me-1"
    }, null, -1),
    Vg = {
        key: 0,
        id: "google-trends-carousel",
        class: "carousel slide",
        "data-bs-ride": "false",
        "data-bs-keyboard": "false",
        "data-bs-interval": "false"
    },
    Hg = {
        class: "carousel-inner"
    },
    Ig = {
        id: "search-volume-chart",
        class: "carousel-item active"
    },
    Ng = {
        class: "row mt-2"
    },
    Rg = S("div", {
        id: "google-trends-chart",
        class: "carousel-item"
    }, [S("div", {
        id: "chart_trends"
    })], -1),
    Kg = S("div", {
        class: "carousel-indicators mt-1 mb-0 position-static"
    }, [S("button", {
        type: "button",
        "data-bs-target": "#google-trends-carousel",
        "data-bs-slide-to": "0",
        class: "active",
        "aria-current": "true"
    }), S("button", {
        type: "button",
        "data-bs-target": "#google-trends-carousel",
        "data-bs-slide-to": "1"
    })], -1),
    Jg = {
        key: 1
    },
    Wg = {
        class: "row mt-2"
    };
const zg = Ue(pp, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("bar-chart"),
                n = k("pie-chart");
            return b(), g("div", null, [S("div", gp, [S("div", yp, [2 == r.current_tab || 5 == r.current_tab ? (b(), g("div", fp, v(e.trans.get("Total Related Keywords")), 1)) : 3 == r.current_tab ? (b(), g("div", wp, v(e.trans.get("Total Questions")), 1)) : 6 == r.current_tab ? (b(), g("div", bp, v(e.trans.get("Total Prepositions")), 1)) : 7 == r.current_tab ? (b(), g("div", vp, v(e.trans.get("Total Hashtags")), 1)) : 10 == r.current_tab ? (b(), g("div", kp, v(e.trans.get("Total People")), 1)) : 11 == r.current_tab ? (b(), g("div", xp, v(e.trans.get("Total Products")), 1)) : (b(), g("div", Cp, v(e.trans.get("Total Keywords")), 1)), S("div", Sp, [r.summaries.search_total_keywords_format ? (b(), g("span", Tp, v(r.summaries.search_total_keywords_format), 1)) : (b(), g("span", Fp, v(e.$filters.digit(r.summaries.total_keywords)), 1))])]), S("div", qp, [r.current_permissions.show_search_volume_column ? (b(), g("div", Ep, [S("div", Up, [A(v(e.trans.get("Total Search Volume")) + " ", 1), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-content": e.trans.get("Total Search Volume is the sum of Search Volume values for keywords that were found."),
                "data-bs-trigger": "hover focus"
            }, null, 8, Mp)]), r.current_permissions.show_search_volume_data ? (b(), g("div", Ap, [r.summaries.search_volume_format ? (b(), g("div", Pp, v(r.summaries.search_volume_format), 1)) : (b(), g("div", Lp, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Bp)]))])) : (b(), g("div", $p, "88,888"))])) : T("", !0)]), S("div", Dp, [r.current_permissions.show_search_volume_column ? (b(), g("div", jp, [S("div", Op, [A(v(e.trans.get("Average Trend")) + " ", 1), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Average Trend is the average of Trend values for keywords that were found."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Vp)]), r.current_permissions.show_search_volume_data ? (b(), g("div", Hp, [r.summaries.search_volume_trend_format ? (b(), g("div", Ip, [r.summaries.search_volume_trend > 0 ? (b(), g("span", Np, [Rp, A(" " + v(r.summaries.search_volume_trend_format), 1)])) : r.summaries.search_volume_trend < 0 ? (b(), g("span", Kp, [Jp, A(" " + v(r.summaries.search_volume_trend_format), 1)])) : (b(), g("span", Wp, [0 == r.summaries.search_volume_trend ? (b(), g("span", zp)) : T("", !0), A(" " + v(r.summaries.search_volume_trend_format), 1)]))])) : (b(), g("div", Yp, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Gp)]))])) : (b(), g("div", Xp, "88%"))])) : T("", !0)]), 12 != r.current_tab ? (b(), g("div", Qp, [r.current_permissions.show_cpc_column ? (b(), g("div", Zp, [S("div", eg, [A(v(e.trans.get("Average CPC")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g(y, {
                key: 0
            }, [A("(" + v(r.current_metrics_currency) + ")", 1)], 64)) : T("", !0), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Average CPC is the average of CPC values for keywords that were found."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, tg)]), r.current_permissions.show_cpc_data ? (b(), g("div", rg, [r.summaries.average_cpc_format ? (b(), g("div", sg, v(r.summaries.average_cpc_format), 1)) : (b(), g("div", ag, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, og)]))])) : (b(), g("div", ig, "8.88"))])) : r.current_permissions.show_low_top_page_bid_column || r.current_permissions.show_high_top_page_bid_column ? (b(), g("div", ng, [S("div", lg, [A(v(e.trans.get("Top of Page Bid")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g("span", cg, "(" + v(r.current_metrics_currency) + ")", 1)) : T("", !0)]), S("div", _g, [S("div", ug, [r.current_permissions.show_high_top_page_bid_data ? (b(), g("div", dg, [r.summaries.low_top_page_bid ? (b(), g("div", mg, v(r.summaries.low_top_page_bid_format) + " (" + v(e.trans.get("Low")) + ")", 1)) : (b(), g("div", hg, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, pg)]))])) : (b(), g("div", gg, "8.88"))])]), r.summaries.low_top_page_bid && r.summaries.high_top_page_bid ? (b(), g("div", yg, [S("div", fg, [r.current_permissions.show_high_top_page_bid_data ? (b(), g("div", wg, [r.summaries.high_top_page_bid ? (b(), g("div", bg, v(r.summaries.high_top_page_bid_format) + " (" + v(e.trans.get("High")) + ")", 1)) : (b(), g("div", vg, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, kg)]))])) : (b(), g("div", xg, "8.88"))])])) : T("", !0)])) : T("", !0)])) : T("", !0), S("div", Cg, [r.current_permissions.show_competition_column ? (b(), g("div", Sg, [S("div", Tg, [A(v(e.trans.get("Average Competition")) + " ", 1), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Average Competition is the average of Competition values for keywords that were found."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Fg)]), r.current_permissions.show_competition_data ? (b(), g("div", qg, [r.summaries.competition_format ? (b(), g("div", Eg, ["" !== r.summaries.competition_class && null !== r.summaries.competition_class ? (b(), g("span", Ug, [S("span", {
                class: w(r.summaries.competition_class)
            }, v(r.summaries.competition_format), 3)])) : (b(), g("span", Mg, v(r.summaries.competition_format), 1))])) : (b(), g("div", Ag, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Pg)]))])) : (b(), g("div", Lg, "8.88"))])) : T("", !0)]), 12 == r.current_tab ? (b(), g("div", Bg)) : T("", !0), S("div", $g, [r.show_settings_button ? (b(), g("div", Dg, [S("button", jg, [Og, S("span", null, v(e.trans.get("Settings")), 1)])])) : T("", !0)])]), r.current_permissions.show_search_volume_data && r.summaries.search_volume_trend_data ? (b(), g(y, {
                key: 0
            }, [r.show_google_trends_chart && 4 != r.current_tab && 5 != r.current_tab ? (b(), g("div", Vg, [S("div", Hg, [S("div", Ig, [S("div", Ng, [S("div", {
                class: w(r.show_pie_chart ? "col-lg-9 col-md-8 col-sm-12" : "col-lg-12")
            }, [E(i, {
                styles: r.show_pie_chart ? {
                    position: "relative",
                    margin: "auto",
                    height: "28vh"
                } : {
                    position: "relative",
                    margin: "auto",
                    height: "24vh"
                },
                maintainAspectRatio: !1,
                charttitle: r.summaries.search_volume_trend_title,
                chartlabels: r.summaries.search_volume_trend_labels,
                chartdata: r.summaries.search_volume_trend_data
            }, null, 8, ["styles", "charttitle", "chartlabels", "chartdata"])], 2), r.show_pie_chart ? (b(), g("div", {
                key: 0,
                class: w(r.show_pie_chart ? "col-lg-3 col-md-4 d-none d-lg-block d-md-block" : "")
            }, [E(n, {
                height: 220,
                charttitle: "",
                chartlabels: r.pie_summaries.search_volume_trend_labels,
                chartdata: r.pie_summaries.search_volume_trend_data
            }, null, 8, ["chartlabels", "chartdata"])], 2)) : T("", !0)])]), Rg]), Kg])) : (b(), g("div", Jg, [S("div", Wg, [S("div", {
                class: w(r.show_pie_chart ? "col-lg-9 col-md-8 col-sm-12" : "col-lg-12")
            }, [E(i, {
                styles: r.show_pie_chart ? {
                    position: "relative",
                    margin: "auto",
                    height: "28vh"
                } : {
                    position: "relative",
                    margin: "auto",
                    height: "24vh"
                },
                maintainAspectRatio: !1,
                charttitle: r.summaries.search_volume_trend_title,
                chartlabels: r.summaries.search_volume_trend_labels,
                chartdata: r.summaries.search_volume_trend_data
            }, null, 8, ["styles", "charttitle", "chartlabels", "chartdata"])], 2), r.show_pie_chart ? (b(), g("div", {
                key: 0,
                class: w(r.show_pie_chart ? "col-lg-3 col-md-4 d-none d-lg-block d-md-block" : "")
            }, [E(n, {
                height: 220,
                charttitle: "",
                chartlabels: r.pie_summaries.search_volume_trend_labels,
                chartdata: r.pie_summaries.search_volume_trend_data
            }, null, 8, ["chartlabels", "chartdata"])], 2)) : T("", !0)])]))], 64)) : T("", !0)])
        }]
    ]),
    Yg = {
        components: {},
        props: {
            loading: {
                type: Boolean,
                required: !0,
                default: !1
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            summaries: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            current_permissions: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            current_metrics_currency: {
                type: [String],
                required: !0,
                default: ""
            },
            allow_filter: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({}),
        methods: {}
    },
    Gg = {
        class: "row row-cols-2 row-cols-md-3 row-cols-lg-6 row-cols-xl-6"
    },
    Xg = {
        class: "col my-1"
    },
    Qg = {
        key: 0,
        class: "search-results-summary-unique-keywords-label"
    },
    Zg = {
        key: 1,
        class: "search-results-summary-unique-keywords-label"
    },
    ey = {
        class: "search-results-summary-unique-keywords-value h3"
    },
    ty = {
        key: 0
    },
    ry = {
        key: 1
    },
    sy = {
        key: 0,
        class: "col-auto my-1"
    },
    ay = ["disabled"],
    oy = S("i", {
        class: "bi bi-gear me-1"
    }, null, -1);
const iy = Ue(Yg, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", null, [S("div", Gg, [S("div", Xg, [11 == r.current_tab ? (b(), g("div", Qg, v(e.trans.get("Total Products")), 1)) : (b(), g("div", Zg, v(e.trans.get("Total Keywords")), 1)), S("div", ey, [r.summaries.search_total_keywords_format ? (b(), g("span", ty, v(r.summaries.search_total_keywords_format), 1)) : (b(), g("span", ry, v(e.$filters.digit(r.summaries.total_keywords)), 1))])]), r.allow_filter ? (b(), g("div", sy, [S("button", {
                disabled: r.loading,
                class: "search-results-settings-modal btn btn-outline-primary float-lg-end",
                "data-bs-toggle": "modal",
                "data-bs-target": "#search-results-setting-modal",
                type: "button"
            }, [oy, S("span", null, v(e.trans.get("Settings")), 1)], 8, ay)])) : T("", !0)])])
        }]
    ]),
    ny = {
        components: {},
        props: {
            keyword: {
                type: String,
                required: !0,
                default: ""
            },
            select: {
                type: Function,
                required: !0
            },
            search_engine: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_sub_tab: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            allow_keyword_basket: {
                type: Boolean,
                required: !0,
                default: !1
            },
            item: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            add_basket: {
                type: Function,
                required: !0
            },
            delete_basket: {
                type: Function,
                required: !1,
                default: function() {
                    return {}
                }
            },
            is_selected: {
                type: Function,
                required: !0
            }
        },
        data: () => ({
            id: "",
            showicon: !1,
            timer: "",
            is_showicon: !1,
            key: ""
        }),
        async created() {
            this.id = this.item.keyword_id ? this.item.keyword_id : se(), this.key = String(this.id).replaceAll("-", "")
        },
        methods: {
            showpopup() {
                this.showicon = !0
            },
            closepopup() {
                this.showicon = !1
            },
            mouseover: function() {
                return !(!this.item || !this.item.id) && (!this.is_selected(this.item) && void this.showpopup())
            },
            mouseout: function() {
                this.is_showicon || this.closepopup()
            },
            mouseover_icon: function() {
                this.is_showicon = !0
            },
            mouseout_icon: function() {
                this.is_showicon = !1, this.mouseout()
            },
            copy_keyword(e) {
                var t = e.keyword_source ? e.keyword_source : "";
                if ("" === t) return !1;
                2 == this.search_engine && 7 == this.current_tab && "#" != t.substr(0, 1) && (t = "#" + t), 9 == this.search_engine && 7 == this.current_tab && "#" != t.substr(0, 1) && (t = "#" + t), 7 == this.search_engine && (7 == this.current_tab && "#" != t.substr(0, 1) && (t = "#" + t), 10 == this.current_tab && "@" != t.substr(0, 1) && (t = "@" + t)), this.$copyText(t).then((e => {
                    bsToaster.create("", this.trans.get('":keyword" copied.', {
                        keyword: t
                    }), {
                        type: "success",
                        animation: !0,
                        delay: 5e3
                    })
                }), (e => {
                    bsDialogs.create(this.trans.get("Sorry, there was an unexpected error."), [{
                        classes: "btn-danger mx-auto",
                        text: this.trans.get("OK"),
                        value: !0
                    }], "", "error").then((e => {}))
                }))
            },
            add_basket_keyword(e) {
                var t = [e.keyword_source ? e.keyword_source : ""];
                this.add_basket(t)
            },
            delete_basket_keyword(e) {
                this.delete_basket(e)
            },
            search_keyword(e) {
                var t = e.keyword_source ? e.keyword_source : "",
                    r = void 0 !== e.country_code ? e.country_code : "",
                    s = void 0 !== e.category_code ? e.category_code : "",
                    a = void 0 !== e.location_id ? e.location_id : "",
                    o = void 0 !== e.language_code ? e.language_code : "";
                if (12 == this.search_engine) var i = this.current_sub_tab;
                else i = this.search_engine;
                this.$root.change_search(i, this.current_tab, t, r, s, a, o, !0)
            }
        }
    },
    ly = ["id"],
    cy = ["innerHTML"],
    _y = {
        class: "keyword-panel-icons position-absolute end-0 top-0 d-none d-lg-block"
    },
    uy = ["data-bs-content"],
    dy = [S("i", {
        class: "bi bi-clipboard"
    }, null, -1)],
    my = ["data-bs-content"],
    hy = [S("i", {
        class: "bi bi-cart"
    }, null, -1)],
    py = ["data-bs-content"],
    gy = [S("i", {
        class: "bi bi-trash"
    }, null, -1)],
    yy = ["data-bs-content"],
    fy = [S("i", {
        class: "bi bi-search"
    }, null, -1)];
const wy = Ue(ny, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", null, [S("div", {
                id: "keyword-panel-" + a.id,
                class: "keyword-panel position-relative pe-lg-6",
                onMouseover: t[9] || (t[9] = (...e) => o.mouseover && o.mouseover(...e)),
                onMouseout: t[10] || (t[10] = (...e) => o.mouseout && o.mouseout(...e))
            }, [S("span", {
                onMouseover: t[0] || (t[0] = (...e) => o.mouseover && o.mouseover(...e)),
                onMouseout: t[1] || (t[1] = (...e) => o.mouseout && o.mouseout(...e)),
                onClick: t[2] || (t[2] = e => r.select(12 == r.search_engine ? r.item.keyword_id : r.item.keyword_source)),
                class: "keyword-panel-keyword cursor-pointer",
                innerHTML: r.item.keyword
            }, null, 40, cy), S("div", _y, [F(S("div", {
                onMouseover: t[7] || (t[7] = (...e) => o.mouseover_icon && o.mouseover_icon(...e)),
                onMouseout: t[8] || (t[8] = (...e) => o.mouseout_icon && o.mouseout_icon(...e))
            }, [S("span", {
                onClick: t[3] || (t[3] = e => o.copy_keyword(r.item)),
                "data-bs-content": e.trans.get("Copy"),
                "data-bs-toggle": "popover",
                "data-bs-placement": "top",
                "data-bs-trigger": "hover focus",
                class: w([
                    [a.key], "keyword-panel-icon keyword-panel-icon-copy cursor-pointer me-1 text-muted"
                ])
            }, dy, 10, uy), r.allow_keyword_basket ? (b(), g("span", {
                key: 0,
                onClick: t[4] || (t[4] = e => o.add_basket_keyword(r.item)),
                "data-bs-content": e.trans.get("Add to Keyword Basket"),
                "data-bs-toggle": "popover",
                "data-bs-placement": "top",
                "data-bs-trigger": "hover focus",
                class: w([
                    [a.key], "keyword-panel-icon keyword-panel-icon-basket cursor-pointer me-1 text-muted"
                ])
            }, hy, 10, my)) : T("", !0), 12 == r.search_engine ? (b(), g("span", {
                key: 1,
                onClick: t[5] || (t[5] = e => o.delete_basket_keyword(r.item)),
                "data-bs-content": e.trans.get("Delete"),
                "data-bs-toggle": "popover",
                "data-bs-placement": "top",
                "data-bs-trigger": "hover focus",
                class: w([
                    [a.key], "keyword-panel-icon keyword-panel-icon-basket cursor-pointer me-1 text-muted"
                ])
            }, gy, 10, py)) : T("", !0), this.keyword != r.item.keyword_source ? (b(), g("span", {
                key: 2,
                onClick: t[6] || (t[6] = e => o.search_keyword(r.item)),
                "data-bs-content": e.trans.get("Search"),
                "data-bs-toggle": "popover",
                "data-bs-placement": "top",
                "data-bs-trigger": "hover focus",
                class: w([
                    [a.key], "keyword-panel-icon keyword-panel-icon-search cursor-pointer me-1 text-muted"
                ])
            }, fy, 10, yy)) : T("", !0)], 544), [
                [B, a.showicon]
            ])])], 40, ly)])
        }]
    ]),
    by = {
        components: {
            "keyword-column": wy
        },
        props: {
            loading: {
                type: Boolean,
                required: !0,
                default: !1
            },
            keyword: {
                type: String,
                required: !0,
                default: ""
            },
            search_engine: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_sub_tab: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            current_permissions: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            routes: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            show_upsell: {
                type: Boolean,
                required: !1,
                default: !1
            },
            upsell_message: {
                type: String,
                required: !0,
                default: ""
            },
            allow_keyword_basket: {
                type: Boolean,
                required: !1,
                default: !1
            },
            has_metrics: {
                type: Boolean,
                required: !1,
                default: !1
            },
            add_basket: {
                type: Function,
                required: !0,
                default: function() {}
            },
            delete_basket: {
                type: Function,
                required: !1,
                default: function() {}
            },
            keywords: {
                type: Array,
                required: !0,
                default: function() {
                    return []
                }
            },
            all_keywords: {
                type: Array,
                required: !0,
                default: function() {
                    return []
                }
            },
            sort_by: {
                type: String,
                required: !0,
                default: ""
            },
            sort_direction: {
                type: String,
                required: !0,
                default: ""
            },
            current_metrics_currency: {
                type: String,
                required: !1,
                default: ""
            },
            current_filter_currency: {
                type: String,
                required: !1,
                default: ""
            },
            current_free_results: {
                type: Number,
                required: !0,
                default: ""
            },
            search_engine_name: {
                type: String,
                required: !0,
                default: ""
            },
            has_top_page_bid: {
                type: Boolean,
                required: !1,
                default: !1
            },
            user_is_paid: {
                type: Boolean,
                required: !1,
                default: !1
            },
            device_breakdown_data: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            }
        },
        data: () => ({
            selected: [],
            selected_all: !1
        }),
        mounted() {
            this.initPopover()
        },
        updated() {
            this.initPopover()
        },
        beforeUnmount() {
            this.$nextTick((() => {
                this.popoverList.forEach((e => {
                    e.dispose()
                }))
            }))
        },
        computed: {},
        watch: {
            selected: {
                handler(e, t) {
                    this.all_keywords.length > 0 && e.length >= this.all_keywords.length ? this.selected_all = !0 : this.selected_all = !1
                },
                deep: !0
            },
            keywords: {
                handler(e, t) {
                    e.length <= 0 && (this.selected = [], this.selected_all = !1)
                },
                deep: !0
            }
        },
        methods: {
            is_selected(e) {
                if (this.loading) return !1;
                if (12 == this.search_engine) var t = e.keyword_id.toString();
                else t = e.keyword_source.toString();
                return this.selected.toString().indexOf(t) >= 0
            },
            change_select_keyword(e, t) {
                this.loading || (t.target.checked ? this.$emit("select", e) : this.$emit("deselect", e))
            },
            toggle_select_keyword(e) {
                if (this.loading) return;
                this.selected.indexOf(e) >= 0 ? (this.selected = this.selected.filter((t => t !== e)), this.$emit("deselect", e)) : (this.selected.push(e), this.$emit("select", e))
            },
            toggle_all_keyword(e) {
                this.loading || (e.target.checked ? (this.selected = this.all_keywords, this.$emit("all", !0)) : (this.selected = [], this.$emit("all", !1)))
            },
            sort(e) {
                this.$emit("sort", e)
            },
            embed(e, t) {
                this.$emit("embed", e, t)
            },
            format_boolean_filter: e => null !== e ? 1 == e ? "Yes" : "No" : "",
            getPageProIndex() {
                let e = "";
                return e = "object" == typeof this.routes.page_pro_index ? this.routes.page_pro_index[this.current_sub_tab] ? this.routes.page_pro_index[this.current_sub_tab] : this.routes.page_pro_index[0] : this.routes.page_pro_index, e + "#pricing"
            },
            initPopover() {
                this.$nextTick((() => {
                    var e = document.querySelectorAll('[data-bs-toggle="popover-sv-result"]');
                    this.popoverList = [...e].map((e => new bootstrap.Popover(e, {
                        sanitize: !1,
                        html: !0
                    })))
                }))
            },
            getColspan() {
                var e = this.current_permissions.show_location_column + this.current_permissions.show_language_column + this.current_permissions.show_relative_popularity_column + this.current_permissions.show_search_frequency_increase_column + this.current_permissions.show_network_column + this.current_permissions.show_posts_column + this.current_permissions.show_following_count_column + this.current_permissions.show_follower_count_column + this.current_permissions.show_heart_count_column + this.current_permissions.show_video_count_column + this.current_permissions.show_digg_count_column + this.current_permissions.show_view_count_column + this.current_permissions.show_search_volume_column + this.current_permissions.show_search_volume_column + this.current_permissions.show_search_volume_column + this.current_permissions.show_cpc_column + this.current_permissions.show_low_top_page_bid_column + this.current_permissions.show_high_top_page_bid_column + this.current_permissions.show_competition_column + this.current_permissions.show_username_column + this.current_permissions.show_full_name_column + this.current_permissions.show_is_private_column + this.current_permissions.show_is_verified_column + this.current_permissions.show_timestamp_column;
                return parseInt(e)
            }
        }
    },
    vy = {
        class: "search-results-table table table-hover"
    },
    ky = {
        class: "col-checkbox w-1"
    },
    xy = ["disabled"],
    Cy = {
        key: 0,
        class: "col-profile-pic"
    },
    Sy = S("span", {
        class: "table-head"
    }, null, -1),
    Ty = [Sy],
    Fy = {
        class: "col-keywords"
    },
    qy = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Ey = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Uy = {
        key: 1,
        class: "table-head"
    },
    My = {
        key: 2,
        class: "table-head"
    },
    Ay = {
        key: 3,
        class: "table-head"
    },
    Py = ["data-bs-content"],
    Ly = ["data-bs-content"],
    By = ["data-bs-content"],
    $y = ["data-bs-content"],
    Dy = {
        key: 1,
        class: "col-location"
    },
    jy = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Oy = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Vy = {
        class: "table-head"
    },
    Hy = {
        key: 2,
        class: "col-language"
    },
    Iy = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Ny = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Ry = {
        class: "table-head"
    },
    Ky = {
        key: 3,
        class: "col-network"
    },
    Jy = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Wy = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    zy = {
        class: "table-head"
    },
    Yy = {
        key: 4,
        class: "col-posts"
    },
    Gy = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Xy = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Qy = {
        class: "table-head"
    },
    Zy = ["data-bs-content"],
    ef = {
        key: 5,
        class: "col-followings"
    },
    tf = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    rf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    sf = {
        class: "table-head"
    },
    af = {
        key: 6,
        class: "col-followers"
    },
    of = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    nf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    lf = {
        class: "table-head"
    },
    cf = {
        key: 7,
        class: "col-heart-count"
    },
    _f = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    uf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    df = {
        class: "table-head"
    },
    mf = {
        key: 8,
        class: "col-video-count"
    },
    hf = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    pf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    gf = {
        class: "table-head"
    },
    yf = {
        key: 9,
        class: "col-digg-count"
    },
    ff = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    wf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    bf = {
        class: "table-head"
    },
    vf = {
        key: 10,
        class: "col-view-count"
    },
    kf = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    xf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Cf = {
        class: "table-head"
    },
    Sf = {
        key: 11,
        class: "col-relative-popularity"
    },
    Tf = {
        key: 0
    },
    Ff = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    qf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Ef = {
        class: "table-head"
    },
    Uf = ["data-bs-content"],
    Mf = {
        key: 12,
        class: "col-search-frequency-increase"
    },
    Af = {
        key: 0
    },
    Pf = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Lf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Bf = {
        class: "table-head"
    },
    $f = ["data-bs-content"],
    Df = {
        key: 13,
        class: "col-search-volume"
    },
    jf = {
        key: 0
    },
    Of = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Vf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Hf = {
        class: "table-head"
    },
    If = ["data-bs-content"],
    Nf = {
        key: 14,
        class: "col-trend d-none d-md-table-cell"
    },
    Rf = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Kf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Jf = {
        class: "table-head"
    },
    Wf = ["data-bs-content"],
    zf = ["data-bs-content"],
    Yf = {
        key: 15,
        class: "col-trend-chart d-none d-md-table-cell"
    },
    Gf = {
        key: 16,
        class: "col-average-cpc d-none d-md-table-cell"
    },
    Xf = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Qf = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Zf = {
        class: "table-head"
    },
    ew = ["data-bs-content"],
    tw = ["data-bs-content"],
    rw = {
        key: 17,
        class: "col-low-top-page-bid d-none d-md-table-cell"
    },
    sw = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    aw = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    ow = {
        class: "table-head"
    },
    iw = {
        key: 0
    },
    nw = ["data-bs-content"],
    lw = {
        key: 18,
        class: "col-high-top-page-bid d-none d-md-table-cell"
    },
    cw = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    _w = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    uw = {
        class: "table-head"
    },
    dw = {
        key: 0
    },
    mw = ["data-bs-content"],
    hw = {
        key: 19,
        class: "col-competition d-none d-md-table-cell"
    },
    pw = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    gw = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    yw = {
        class: "table-head"
    },
    fw = ["data-bs-content"],
    ww = ["data-bs-content"],
    bw = {
        key: 20,
        class: "col-username"
    },
    vw = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    kw = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    xw = {
        class: "table-head"
    },
    Cw = {
        key: 21,
        class: "col-full-name"
    },
    Sw = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Tw = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Fw = {
        class: "table-head"
    },
    qw = {
        key: 22,
        class: "col-is-private"
    },
    Ew = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Uw = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Mw = {
        class: "table-head"
    },
    Aw = {
        key: 23,
        class: "col-is-verified"
    },
    Pw = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    Lw = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Bw = {
        class: "table-head"
    },
    $w = {
        key: 24,
        class: "col-last-updated"
    },
    Dw = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    jw = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    Ow = {
        class: "table-head"
    },
    Vw = {
        key: 0
    },
    Hw = {
        key: 0,
        class: "w-0 p-0 m-0"
    },
    Iw = S("td", {
        colspan: "2",
        class: "w-0 p-0 m-0 border-0"
    }, null, -1),
    Nw = ["colspan"],
    Rw = {
        class: "position-relative d-none d-md-block"
    },
    Kw = {
        class: "alert-pro-upsell alert-pro-upsell-keyword-results position-absolute w-100"
    },
    Jw = {
        class: "card mt-2 pb-2 text-center shadow"
    },
    Ww = {
        class: "card-body"
    },
    zw = S("h4", {
        class: "card-title"
    }, " 🚀 Keyword Tool Pro ", -1),
    Yw = {
        class: "card-text lead fw-normal"
    },
    Gw = ["innerHTML"],
    Xw = ["innerHTML"],
    Qw = ["href"],
    Zw = S("i", {
        class: "bi bi-box-arrow-in-right me-1"
    }, null, -1),
    eb = ["innerHTML"],
    tb = {
        class: "col-checkbox w-1"
    },
    rb = ["id", "value", "onChange", "disabled", "data-value"],
    sb = ["id", "value", "onChange", "disabled"],
    ab = {
        key: 0,
        class: "col-profile-pic w-1"
    },
    ob = {
        key: 0
    },
    ib = ["src", "alt"],
    nb = {
        key: 1,
        class: "text-secondary"
    },
    lb = ["data-bs-content"],
    cb = {
        key: 1,
        class: "text-blur"
    },
    _b = {
        key: 0
    },
    ub = {
        key: 1,
        class: "text-blur"
    },
    db = {
        key: 1
    },
    mb = {
        class: "col-keyword p-0"
    },
    hb = {
        key: 1,
        class: "col-location"
    },
    pb = {
        key: 0,
        class: "badge bg-primary"
    },
    gb = {
        key: 1,
        class: "text-secondary"
    },
    yb = ["data-bs-content"],
    fb = {
        key: 1,
        class: "text-blur"
    },
    wb = {
        key: 0
    },
    bb = {
        key: 1,
        class: "text-blur"
    },
    vb = {
        key: 1
    },
    kb = {
        key: 2,
        class: "col-language"
    },
    xb = {
        key: 0,
        class: "badge bg-secondary"
    },
    Cb = {
        key: 1,
        class: "text-secondary"
    },
    Sb = ["data-bs-content"],
    Tb = {
        key: 1,
        class: "text-blur"
    },
    Fb = {
        key: 0
    },
    qb = {
        key: 1,
        class: "text-blur"
    },
    Eb = {
        key: 1
    },
    Ub = {
        key: 3,
        class: "col-relative-popularity"
    },
    Mb = ["onClick"],
    Ab = {
        class: "progress-bar-wrapper"
    },
    Pb = {
        class: "progress",
        style: {
            height: "10px"
        }
    },
    Lb = ["aria-valuenow"],
    Bb = {
        key: 1,
        class: "text-blur"
    },
    $b = {
        key: 0
    },
    Db = {
        key: 1,
        class: "text-blur"
    },
    jb = {
        key: 1
    },
    Ob = ["onClick"],
    Vb = {
        key: 0,
        class: "text-success"
    },
    Hb = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    Ib = {
        key: 1,
        class: "text-danger"
    },
    Nb = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    Rb = {
        class: "cursor-pointer"
    },
    Kb = {
        key: 0,
        class: "btn ms-1 my-1 px-0 py-1 cursor-default text-muted text-uppercase"
    },
    Jb = {
        key: 1,
        class: "text-blur"
    },
    Wb = {
        key: 0
    },
    zb = {
        key: 1,
        class: "text-blur"
    },
    Yb = {
        key: 1
    },
    Gb = {
        key: 5,
        class: "col-network"
    },
    Xb = {
        key: 0
    },
    Qb = {
        key: 1,
        class: "text-secondary"
    },
    Zb = ["data-bs-content"],
    ev = {
        key: 1,
        class: "text-blur"
    },
    tv = {
        key: 0
    },
    rv = {
        key: 1,
        class: "text-blur"
    },
    sv = {
        key: 1
    },
    av = {
        key: 6,
        class: "col-posts"
    },
    ov = {
        key: 0
    },
    iv = {
        key: 1,
        class: "text-secondary"
    },
    nv = ["data-bs-content"],
    lv = {
        key: 1,
        class: "text-blur"
    },
    cv = {
        key: 0
    },
    _v = {
        key: 1,
        class: "text-blur"
    },
    uv = {
        key: 1
    },
    dv = {
        key: 7,
        class: "col-followings"
    },
    mv = {
        key: 0
    },
    hv = {
        key: 1,
        class: "text-secondary"
    },
    pv = ["data-bs-content"],
    gv = {
        key: 1,
        class: "text-blur"
    },
    yv = {
        key: 0
    },
    fv = {
        key: 1,
        class: "text-blur"
    },
    wv = {
        key: 1
    },
    bv = {
        key: 8,
        class: "col-followers"
    },
    vv = {
        key: 0
    },
    kv = {
        key: 1,
        class: "text-secondary"
    },
    xv = ["data-bs-content"],
    Cv = {
        key: 1,
        class: "text-blur"
    },
    Sv = {
        key: 0
    },
    Tv = {
        key: 1,
        class: "text-blur"
    },
    Fv = {
        key: 1
    },
    qv = {
        key: 9,
        class: "col-heart-count"
    },
    Ev = {
        key: 0
    },
    Uv = {
        key: 1,
        class: "text-secondary"
    },
    Mv = ["data-bs-content"],
    Av = {
        key: 1,
        class: "text-blur"
    },
    Pv = {
        key: 0
    },
    Lv = {
        key: 1,
        class: "text-blur"
    },
    Bv = {
        key: 1
    },
    $v = {
        key: 10,
        class: "col-video-count"
    },
    Dv = {
        key: 0
    },
    jv = {
        key: 1,
        class: "text-secondary"
    },
    Ov = ["data-bs-content"],
    Vv = {
        key: 1,
        class: "text-blur"
    },
    Hv = {
        key: 0
    },
    Iv = {
        key: 1,
        class: "text-blur"
    },
    Nv = {
        key: 1
    },
    Rv = {
        key: 11,
        class: "col-digg-count"
    },
    Kv = {
        key: 0
    },
    Jv = {
        key: 1,
        class: "text-secondary"
    },
    Wv = ["data-bs-content"],
    zv = {
        key: 1,
        class: "text-blur"
    },
    Yv = {
        key: 0
    },
    Gv = {
        key: 1,
        class: "text-blur"
    },
    Xv = {
        key: 1
    },
    Qv = {
        key: 12,
        class: "col-view-count"
    },
    Zv = {
        key: 0
    },
    ek = {
        key: 1,
        class: "text-secondary"
    },
    tk = ["data-bs-content"],
    rk = {
        key: 1,
        class: "text-blur"
    },
    sk = {
        key: 0
    },
    ak = {
        key: 1,
        class: "text-blur"
    },
    ok = {
        key: 1
    },
    ik = {
        key: 13,
        class: "col-search-volume"
    },
    nk = {
        key: 0
    },
    lk = {
        key: 1,
        class: "text-secondary"
    },
    ck = ["data-bs-content"],
    _k = {
        key: 1,
        class: "text-blur"
    },
    uk = {
        key: 0
    },
    dk = {
        key: 1,
        class: "text-blur"
    },
    mk = {
        key: 1
    },
    hk = {
        key: 14,
        class: "col-trend d-none d-md-table-cell"
    },
    pk = {
        key: 0,
        class: "text-nowrap"
    },
    gk = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    yk = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    fk = {
        key: 1,
        class: "text-secondary"
    },
    wk = {
        key: 0,
        class: "text-blur"
    },
    bk = ["data-bs-content"],
    vk = {
        key: 1,
        class: "text-blur"
    },
    kk = {
        key: 0
    },
    xk = {
        key: 1,
        class: "text-blur"
    },
    Ck = {
        key: 1
    },
    Sk = {
        key: 15,
        class: "col-trend-chart py-0 d-none d-md-table-cell"
    },
    Tk = {
        key: 16,
        class: "col-average-cpc d-none d-md-table-cell"
    },
    Fk = {
        key: 0
    },
    qk = {
        key: 1,
        class: "text-secondary"
    },
    Ek = ["data-bs-content"],
    Uk = {
        key: 1,
        class: "text-blur"
    },
    Mk = {
        key: 0
    },
    Ak = {
        key: 1,
        class: "text-blur"
    },
    Pk = {
        key: 1
    },
    Lk = {
        key: 17,
        class: "col-low-top-page-bid d-none d-md-table-cell"
    },
    Bk = {
        key: 0
    },
    $k = {
        key: 1,
        class: "text-secondary"
    },
    Dk = ["data-bs-content"],
    jk = {
        key: 1,
        class: "text-blur"
    },
    Ok = {
        key: 0
    },
    Vk = {
        key: 1,
        class: "text-blur"
    },
    Hk = {
        key: 1
    },
    Ik = {
        key: 18,
        class: "col-high-top-page-bid d-none d-md-table-cell"
    },
    Nk = {
        key: 0
    },
    Rk = {
        key: 1,
        class: "text-secondary"
    },
    Kk = ["data-bs-content"],
    Jk = {
        key: 1,
        class: "text-blur"
    },
    Wk = {
        key: 0
    },
    zk = {
        key: 1,
        class: "text-blur"
    },
    Yk = {
        key: 1
    },
    Gk = {
        key: 19,
        class: "col-competition d-none d-md-table-cell"
    },
    Xk = {
        key: 1
    },
    Qk = {
        key: 1,
        class: "text-secondary"
    },
    Zk = ["data-bs-content"],
    ex = {
        key: 1,
        class: "text-blur"
    },
    tx = {
        key: 0
    },
    rx = {
        key: 1,
        class: "text-blur"
    },
    sx = {
        key: 1
    },
    ax = {
        key: 20,
        class: "col-username"
    },
    ox = {
        key: 0
    },
    ix = {
        key: 1,
        class: "text-secondary"
    },
    nx = ["data-bs-content"],
    lx = {
        key: 1,
        class: "text-blur"
    },
    cx = {
        key: 0
    },
    _x = {
        key: 1,
        class: "text-blur"
    },
    ux = {
        key: 1
    },
    dx = {
        key: 21,
        class: "col-full-name"
    },
    mx = {
        key: 0
    },
    hx = {
        key: 1,
        class: "text-secondary"
    },
    px = ["data-bs-content"],
    gx = {
        key: 1,
        class: "text-blur"
    },
    yx = {
        key: 0
    },
    fx = {
        key: 1,
        class: "text-blur"
    },
    wx = {
        key: 1
    },
    bx = {
        key: 22,
        class: "col-is-private"
    },
    vx = {
        key: 0
    },
    kx = {
        key: 1,
        class: "text-secondary"
    },
    xx = ["data-bs-content"],
    Cx = {
        key: 1,
        class: "text-blur"
    },
    Sx = {
        key: 0
    },
    Tx = {
        key: 1,
        class: "text-blur"
    },
    Fx = {
        key: 1
    },
    qx = {
        key: 23,
        class: "col-is-verified"
    },
    Ex = {
        key: 0
    },
    Ux = {
        key: 1,
        class: "text-secondary"
    },
    Mx = ["data-bs-content"],
    Ax = {
        key: 1,
        class: "text-blur"
    },
    Px = {
        key: 0
    },
    Lx = {
        key: 1,
        class: "text-blur"
    },
    Bx = {
        key: 1
    },
    $x = {
        key: 24,
        class: "col-last-updated"
    },
    Dx = {
        key: 0
    },
    jx = {
        key: 1,
        class: "text-secondary"
    },
    Ox = ["data-bs-content"],
    Vx = {
        key: 1,
        class: "text-blur"
    },
    Hx = {
        key: 0
    },
    Ix = {
        key: 1,
        class: "text-blur"
    },
    Nx = {
        key: 1
    },
    Rx = {
        key: 1,
        class: "d-none iframe-google-trends-chart"
    },
    Kx = S("td", {
        class: "col-checkbox w-1"
    }, null, -1),
    Jx = ["id"];
const Wx = Ue(by, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("keyword-column"),
                n = k("chart-js");
            return b(), g("div", null, [S("table", vy, [S("thead", null, [S("tr", null, [S("th", ky, [F(S("input", {
                type: "checkbox",
                "onUpdate:modelValue": t[0] || (t[0] = e => a.selected_all = e),
                onClick: t[1] || (t[1] = e => o.toggle_all_keyword(e)),
                disabled: r.loading || r.all_keywords.length <= 0
            }, null, 8, xy), [
                [q, a.selected_all]
            ])]), r.current_permissions.show_profile_pic_column ? (b(), g("th", Cy, Ty)) : T("", !0), S("th", Fy, [S("span", {
                class: "cursor-pointer",
                onClick: t[2] || (t[2] = e => o.sort("keywords"))
            }, ["keywords" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", qy)) : "Desc" == r.sort_direction ? (b(), g("i", Ey)) : T("", !0)], 64)) : T("", !0), 10 == r.current_tab ? (b(), g("span", Uy, v(e.trans.get("People")), 1)) : 7 == r.current_tab ? (b(), g("span", My, v(e.trans.get("Hashtags")), 1)) : (b(), g("span", Ay, v(e.trans.get("Keywords")), 1))]), 4 != r.current_tab ? (b(), g(y, {
                key: 0
            }, [2 == r.current_tab ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.use_alternate_data_source ? T("", !0) : (b(), g("i", {
                key: 0,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Related keywords are pulled from Google Ads Keyword Planner."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Py))], 64)) : 10 == r.current_tab ? (b(), g("i", {
                key: 1,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Results are pulled from the :search_engine_name autocomplete. Results are generated by placing different search terms into the search box of :search_engine_name.", {
                    search_engine_name: r.search_engine_name
                }),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Ly)) : 7 == r.current_tab ? (b(), g("i", {
                key: 2,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Hashtags are pulled from the :search_engine_name autocomplete. Hashtags are generated by placing different search terms into the search box of :search_engine_name.", {
                    search_engine_name: r.search_engine_name
                }),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, By)) : 8 == r.current_tab || 9 == r.current_tab ? (b(), g(y, {
                key: 3
            }, [], 64)) : 12 == r.current_tab ? (b(), g(y, {
                key: 4
            }, [], 64)) : (b(), g("i", {
                key: 5,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Keywords are pulled from the :search_engine_name autocomplete. Keywords are generated by placing different search terms into the search box of :search_engine_name.", {
                    search_engine_name: r.search_engine_name
                }),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, $y))], 64)) : T("", !0)]), r.current_permissions.show_location_column ? (b(), g("th", Dy, [S("span", {
                class: "cursor-pointer",
                onClick: t[3] || (t[3] = e => r.current_permissions.show_location_data ? o.sort("location") : "")
            }, ["location" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", jy)) : "Desc" == r.sort_direction ? (b(), g("i", Oy)) : T("", !0)], 64)) : T("", !0), S("span", Vy, v(e.trans.get("Location")), 1)])])) : T("", !0), r.current_permissions.show_language_column ? (b(), g("th", Hy, [S("span", {
                class: "cursor-pointer",
                onClick: t[4] || (t[4] = e => r.current_permissions.show_language_data ? o.sort("language") : "")
            }, ["language" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Iy)) : "Desc" == r.sort_direction ? (b(), g("i", Ny)) : T("", !0)], 64)) : T("", !0), S("span", Ry, v(e.trans.get("Language")), 1)])])) : T("", !0), r.current_permissions.show_network_column ? (b(), g("th", Ky, [S("span", {
                class: "cursor-pointer",
                onClick: t[5] || (t[5] = e => r.current_permissions.show_network_data ? o.sort("network") : "")
            }, ["network" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Jy)) : "Desc" == r.sort_direction ? (b(), g("i", Wy)) : T("", !0)], 64)) : T("", !0), S("span", zy, v(e.trans.get("Network")), 1)])])) : T("", !0), r.current_permissions.show_posts_column ? (b(), g("th", Yy, [S("span", {
                class: "cursor-pointer",
                onClick: t[6] || (t[6] = e => r.current_permissions.show_posts_data ? o.sort("posts") : "")
            }, [r.current_permissions.show_posts_data ? (b(), g(y, {
                key: 0
            }, ["posts" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Gy)) : "Desc" == r.sort_direction ? (b(), g("i", Xy)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", Qy, v(e.trans.get("Posts")), 1)]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Posts show the number of posts on Instagram that have the corresponding hashtag."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Zy)])])) : T("", !0), r.current_permissions.show_following_count_column ? (b(), g("th", ef, [S("span", {
                class: "cursor-pointer",
                onClick: t[7] || (t[7] = e => r.current_permissions.show_following_count_data ? o.sort("followings") : "")
            }, [r.current_permissions.show_following_count_data ? (b(), g(y, {
                key: 0
            }, ["followings" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", tf)) : "Desc" == r.sort_direction ? (b(), g("i", rf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", sf, v(e.trans.get("Followings")), 1)])])) : T("", !0), r.current_permissions.show_follower_count_column ? (b(), g("th", af, [S("span", {
                class: "cursor-pointer",
                onClick: t[8] || (t[8] = e => r.current_permissions.show_follower_count_data ? o.sort("followers") : "")
            }, [r.current_permissions.show_follower_count_data ? (b(), g(y, {
                key: 0
            }, ["followers" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", of)) : "Desc" == r.sort_direction ? (b(), g("i", nf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", lf, v(e.trans.get("Followers")), 1)])])) : T("", !0), r.current_permissions.show_heart_count_column ? (b(), g("th", cf, [S("span", {
                class: "cursor-pointer",
                onClick: t[9] || (t[9] = e => r.current_permissions.show_heart_count_data ? o.sort("heartCount") : "")
            }, [r.current_permissions.show_heart_count_data ? (b(), g(y, {
                key: 0
            }, ["heartCount" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", _f)) : "Desc" == r.sort_direction ? (b(), g("i", uf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", df, v(e.trans.get("Likes")), 1)])])) : T("", !0), r.current_permissions.show_video_count_column ? (b(), g("th", mf, [S("span", {
                class: "cursor-pointer",
                onClick: t[10] || (t[10] = e => r.current_permissions.show_video_count_data ? o.sort("videoCount") : "")
            }, [r.current_permissions.show_video_count_data ? (b(), g(y, {
                key: 0
            }, ["videoCount" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", hf)) : "Desc" == r.sort_direction ? (b(), g("i", pf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", gf, v(e.trans.get("Videos")), 1)])])) : T("", !0), r.current_permissions.show_digg_count_column ? (b(), g("th", yf, [S("span", {
                class: "cursor-pointer",
                onClick: t[11] || (t[11] = e => r.current_permissions.show_digg_count_data ? o.sort("diggCount") : "")
            }, [r.current_permissions.show_digg_count_data ? (b(), g(y, {
                key: 0
            }, ["diggCount" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", ff)) : "Desc" == r.sort_direction ? (b(), g("i", wf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", bf, v(e.trans.get("Diggs")), 1)])])) : T("", !0), r.current_permissions.show_view_count_column ? (b(), g("th", vf, [S("span", {
                class: "cursor-pointer",
                onClick: t[12] || (t[12] = e => r.current_permissions.show_view_count_data ? o.sort("viewCount") : "")
            }, [r.current_permissions.show_view_count_data ? (b(), g(y, {
                key: 0
            }, ["viewCount" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", kf)) : "Desc" == r.sort_direction ? (b(), g("i", xf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", Cf, v(e.trans.get("Views")), 1)])])) : T("", !0), r.current_permissions.show_relative_popularity_column ? (b(), g("th", Sf, [S("span", {
                class: "cursor-pointer",
                onClick: t[13] || (t[13] = e => r.current_permissions.show_relative_popularity_data ? o.sort("relativePopularity") : "")
            }, [r.current_permissions.show_relative_popularity_data ? (b(), g("span", Tf, ["relativePopularity" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Ff)) : "Desc" == r.sort_direction ? (b(), g("i", qf)) : T("", !0)], 64)) : T("", !0)])) : T("", !0), S("span", Ef, v(e.trans.get("Relative Popularity")), 1)]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("The most popular search queries. Scoring is on a relative scale where a value of 100 is the most commonly searched query, 50 is a query searched half as often as the most popular query, and so on."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Uf)])])) : T("", !0), r.current_permissions.show_search_frequency_increase_column ? (b(), g("th", Mf, [S("span", {
                class: "cursor-pointer",
                onClick: t[14] || (t[14] = e => r.current_permissions.show_search_frequency_increase_data ? o.sort("searchFrequencyIncrease") : "")
            }, [r.current_permissions.show_search_frequency_increase_data ? (b(), g("span", Af, ["searchFrequencyIncrease" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Pf)) : "Desc" == r.sort_direction ? (b(), g("i", Lf)) : T("", !0)], 64)) : T("", !0)])) : T("", !0), S("span", Bf, v(e.trans.get("Search Frequency Increase")), 1)]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Queries with the biggest increase in search frequency since the last time period. Results marked 'Breakout' had a tremendous increase, probably because these queries are new and had few (if any) prior searches."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, $f)])])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("th", Df, [S("span", {
                class: "cursor-pointer",
                onClick: t[15] || (t[15] = e => r.current_permissions.show_search_volume_data ? o.sort("searchVolume") : "")
            }, [r.current_permissions.show_search_volume_data ? (b(), g("span", jf, ["searchVolume" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Of)) : "Desc" == r.sort_direction ? (b(), g("i", Vf)) : T("", !0)], 64)) : T("", !0)])) : T("", !0), S("span", Hf, v(e.trans.get("Search Volume")), 1)]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Search Volume shows how many people search for the keyword per month. It helps to understand how popular the keyword is."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, If)])])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("th", Nf, [S("span", {
                class: "cursor-pointer",
                onClick: t[16] || (t[16] = e => r.current_permissions.show_search_volume_data ? o.sort("searchVolumeTrend") : "")
            }, [r.current_permissions.show_search_volume_data ? (b(), g(y, {
                key: 0
            }, ["searchVolumeTrend" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Rf)) : "Desc" == r.sort_direction ? (b(), g("i", Kf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", Jf, v(e.trans.get("Trend")), 1)]), S("span", null, [r.current_permissions.use_alternate_data_source ? (b(), g("i", {
                key: 0,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Trend shows how the monthly search volume for a keyword has changed over the last 24 months."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Wf)) : (b(), g("i", {
                key: 1,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Trend shows how the monthly search volume for a keyword has changed over the last 12 months."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, zf))])])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("th", Yf)) : T("", !0), r.current_permissions.show_cpc_column ? (b(), g("th", Gf, [S("span", {
                class: "cursor-pointer",
                onClick: t[17] || (t[17] = e => r.current_permissions.show_cpc_data ? o.sort("averageCpc") : "")
            }, [r.current_permissions.show_cpc_data ? (b(), g(y, {
                key: 0
            }, ["averageCpc" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Xf)) : "Desc" == r.sort_direction ? (b(), g("i", Qf)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", Zf, [A(v(e.trans.get("Average CPC")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g(y, {
                key: 0
            }, [A("(" + v(r.current_metrics_currency) + ")", 1)], 64)) : T("", !0)])]), S("span", null, [r.current_permissions.use_alternate_data_source ? (b(), g("i", {
                key: 0,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Cost-Per-Click (CPC) is an estimated sum of money that advertisers pay to bid on this keyword. It helps to identify how lucrative the keyword is."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, ew)) : (b(), g("i", {
                key: 1,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Cost-Per-Click (CPC) is an estimated sum of money that advertisers pay to bid on this keyword on Google Ads. It helps to identify how lucrative the keyword is."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, tw))])])) : T("", !0), 12 != r.search_engine && r.current_permissions.show_low_top_page_bid_column || 12 == r.search_engine && r.current_permissions.show_low_top_page_bid_column && r.has_top_page_bid ? (b(), g("th", rw, [S("span", {
                class: "cursor-pointer",
                onClick: t[18] || (t[18] = e => r.current_permissions.show_low_top_page_bid_data ? o.sort("lowTopPageBid") : "")
            }, [r.current_permissions.show_low_top_page_bid_data ? (b(), g(y, {
                key: 0
            }, ["lowTopPageBid" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", sw)) : "Desc" == r.sort_direction ? (b(), g("i", aw)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", ow, [A(v(e.trans.get("Top of Page Bid (Low Range)")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g("span", iw, "(" + v(r.current_metrics_currency) + ")", 1)) : T("", !0)])]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Top of Page Bid (Low Range) shows the lower range of what Google Ads advertisers have historically paid for a keyword's top of page bid."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, nw)])])) : T("", !0), 12 != r.search_engine && r.current_permissions.show_high_top_page_bid_column || 12 == r.search_engine && r.current_permissions.show_high_top_page_bid_column && r.has_top_page_bid ? (b(), g("th", lw, [S("span", {
                class: "cursor-pointer",
                onClick: t[19] || (t[19] = e => r.current_permissions.show_high_top_page_bid_data ? o.sort("highTopPageBid") : "")
            }, [r.current_permissions.show_high_top_page_bid_data ? (b(), g(y, {
                key: 0
            }, ["highTopPageBid" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", cw)) : "Desc" == r.sort_direction ? (b(), g("i", _w)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", uw, [A(v(e.trans.get("Top of Page Bid (High Range)")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g("span", dw, "(" + v(r.current_metrics_currency) + ")", 1)) : T("", !0)])]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Top of Page Bid (High Range) shows the higher range of what Google Ads advertisers have historically paid for a keyword's top of page bid."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, mw)])])) : T("", !0), r.current_permissions.show_competition_column ? (b(), g("th", hw, [S("span", {
                class: "cursor-pointer",
                onClick: t[20] || (t[20] = e => r.current_permissions.show_competition_data ? o.sort("competition") : "")
            }, [r.current_permissions.show_competition_data ? (b(), g(y, {
                key: 0
            }, ["competition" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", pw)) : "Desc" == r.sort_direction ? (b(), g("i", gw)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", yw, v(e.trans.get("Competition")), 1)]), S("span", null, [r.current_permissions.use_alternate_data_source ? (b(), g("i", {
                key: 0,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Competition shows how many advertisers are bidding on the keyword relative to all the keywords. It helps to understand how competitive the keyword is."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, fw)) : (b(), g("i", {
                key: 1,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Competition shows how many advertisers are bidding on the keyword relative to all the keywords across Google. It helps to understand how competitive the keyword is. The table below shows the competition metric breakdown.<table class='table'><tbody><tr><td><strong>70 - 100</strong></td><td>High</td></tr><tr><td><strong>35 - 69</strong></td><td>Medium</td></tr><tr><td><strong>0 - 34</strong></td><td>Low</td></tr></tbody></table>"),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, ww))])])) : T("", !0), r.current_permissions.show_username_column ? (b(), g("th", bw, [S("span", {
                class: "cursor-pointer",
                onClick: t[21] || (t[21] = e => r.current_permissions.show_username_data ? o.sort("username") : "")
            }, [r.current_permissions.show_username_data ? (b(), g(y, {
                key: 0
            }, ["username" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", vw)) : "Desc" == r.sort_direction ? (b(), g("i", kw)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", xw, v(e.trans.get("Username")), 1)])])) : T("", !0), r.current_permissions.show_full_name_column ? (b(), g("th", Cw, [S("span", {
                class: "cursor-pointer",
                onClick: t[22] || (t[22] = e => r.current_permissions.show_full_name_data ? o.sort("fullName") : "")
            }, [r.current_permissions.show_full_name_data ? (b(), g(y, {
                key: 0
            }, ["fullName" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Sw)) : "Desc" == r.sort_direction ? (b(), g("i", Tw)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", Fw, v(e.trans.get("Full Name")), 1)])])) : T("", !0), r.current_permissions.show_is_private_column ? (b(), g("th", qw, [S("span", {
                class: "cursor-pointer",
                onClick: t[23] || (t[23] = e => r.current_permissions.show_is_private_data ? o.sort("isPrivate") : "")
            }, [r.current_permissions.show_is_private_data ? (b(), g(y, {
                key: 0
            }, ["isPrivate" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Ew)) : "Desc" == r.sort_direction ? (b(), g("i", Uw)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", Mw, v(e.trans.get("Private")), 1)])])) : T("", !0), r.current_permissions.show_is_verified_column ? (b(), g("th", Aw, [S("span", {
                class: "cursor-pointer",
                onClick: t[24] || (t[24] = e => r.current_permissions.show_is_verified_data ? o.sort("isVerified") : "")
            }, [r.current_permissions.show_is_verified_data ? (b(), g(y, {
                key: 0
            }, ["isVerified" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Pw)) : "Desc" == r.sort_direction ? (b(), g("i", Lw)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0), S("span", Bw, v(e.trans.get("Verified")), 1)])])) : T("", !0), r.current_permissions.show_timestamp_column ? (b(), g("th", $w, [S("span", {
                class: "cursor-pointer",
                onClick: t[25] || (t[25] = e => r.current_permissions.show_timestamp_data ? o.sort("timestamp") : "")
            }, ["timestamp" == r.sort_by ? (b(), g(y, {
                key: 0
            }, ["Asc" == r.sort_direction ? (b(), g("i", Dw)) : "Desc" == r.sort_direction ? (b(), g("i", jw)) : T("", !0)], 64)) : T("", !0), S("span", Ow, v(e.trans.get("Last Updated")), 1)])])) : T("", !0)])]), r.keywords.length ? (b(), g("tbody", Vw, [(b(!0), g(y, null, f(r.keywords, ((s, l) => (b(), g(y, {
                key: l
            }, [r.show_upsell && r.keywords.length >= r.current_free_results + 5 && l == r.current_free_results && !r.current_permissions.show_search_volume_data && (1 == r.current_tab || 6 == r.current_tab || 3 == r.current_tab || 7 == r.current_tab || 8 == r.current_tab || 9 == r.current_tab || 12 == r.current_tab) ? (b(), g("tr", Hw, [Iw, S("td", {
                class: "w-0 p-0 m-0 border-0",
                colspan: o.getColspan()
            }, [S("div", Rw, [S("div", Kw, [S("div", Jw, [S("div", Ww, [zw, S("div", Yw, [S("p", {
                class: "mb-0",
                innerHTML: e.trans.get("Do you need this information?")
            }, null, 8, Gw), S("p", {
                innerHTML: r.upsell_message
            }, null, 8, Xw)]), S("a", {
                href: o.getPageProIndex(),
                target: "_blank",
                rel: "noopener",
                class: "btn btn-warning btn-lg"
            }, [Zw, S("span", {
                innerHTML: e.trans.get("Try it now!")
            }, null, 8, eb)], 8, Qw)])])])])], 8, Nw)])) : T("", !0), S("tr", {
                class: w({
                    "table-active": o.is_selected(s)
                })
            }, [S("td", tb, [12 == r.search_engine ? F((b(), g("input", {
                key: 0,
                id: s.id,
                type: "checkbox",
                value: s.keyword_id,
                "onUpdate:modelValue": t[26] || (t[26] = e => a.selected = e),
                onChange: e => o.change_select_keyword(s.keyword_id, e),
                disabled: r.loading,
                "data-value": s.keyword_source
            }, null, 40, rb)), [
                [q, a.selected]
            ]) : F((b(), g("input", {
                key: 1,
                id: s.id,
                type: "checkbox",
                value: s.keyword_source,
                "onUpdate:modelValue": t[27] || (t[27] = e => a.selected = e),
                onChange: e => o.change_select_keyword(s.keyword_source, e),
                disabled: r.loading
            }, null, 40, sb)), [
                [q, a.selected]
            ])]), r.current_permissions.show_profile_pic_column ? (b(), g("td", ab, [r.has_metrics && void 0 !== s.profile_pic ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_profile_pic_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.profile_pic && null !== s.profile_pic ? (b(), g("span", ob, [S("img", {
                src: s.profile_pic,
                class: "img-fluid img-thumbnail max-width-90",
                alt: s.username
            }, null, 8, ib)])) : (b(), g("span", nb, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, lb)]))], 64)) : (b(), g("span", cb, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", _b, "...")) : (b(), g("span", ub, "8.88"))], 64)) : (b(), g("span", db, "..."))], 64))])) : T("", !0), S("td", mb, [E(i, {
                keyword: r.keyword,
                is_selected: o.is_selected,
                select: o.toggle_select_keyword,
                item: s,
                add_basket: r.add_basket,
                delete_basket: r.delete_basket,
                allow_keyword_basket: r.allow_keyword_basket,
                search_engine: r.search_engine,
                current_tab: r.current_tab,
                current_sub_tab: r.current_sub_tab
            }, null, 8, ["keyword", "is_selected", "select", "item", "add_basket", "delete_basket", "allow_keyword_basket", "search_engine", "current_tab", "current_sub_tab"])]), r.current_permissions.show_location_column ? (b(), g("td", hb, [r.has_metrics && void 0 !== s.location ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_location_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.location && null !== s.location ? (b(), g("span", pb, v(s.location_format), 1)) : (b(), g("span", gb, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, yb)]))], 64)) : (b(), g("span", fb, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", wb, "...")) : (b(), g("span", bb, "88,888"))], 64)) : (b(), g("span", vb, "..."))], 64))])) : T("", !0), r.current_permissions.show_language_column ? (b(), g("td", kb, [r.has_metrics && void 0 !== s.language ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_language_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.language && null !== s.language ? (b(), g("span", xb, v(s.language_format), 1)) : (b(), g("span", Cb, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Sb)]))], 64)) : (b(), g("span", Tb, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Fb, "...")) : (b(), g("span", qb, "88,888"))], 64)) : (b(), g("span", Eb, "..."))], 64))])) : T("", !0), r.current_permissions.show_relative_popularity_column ? (b(), g("td", Ub, [r.has_metrics && void 0 !== s.relative_popularity ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_relative_popularity_data ? (b(), g(y, {
                key: 0
            }, ["" !== s.relative_popularity && null !== s.relative_popularity ? (b(), g(y, {
                key: 0
            }, [S("button", {
                onClick: e => o.embed(s.keyword_source, s.id),
                class: "btn btn-light cursor-pointer m-0 me-1 p-1"
            }, [S("div", Ab, [S("div", Pb, [S("div", {
                class: "progress-bar bg-warning",
                style: D(s.relative_popularity_width),
                role: "progressbar",
                "aria-valuenow": s.relative_popularity,
                "aria-valuemin": "0",
                "aria-valuemax": "100"
            }, null, 12, Lb)])])], 8, Mb), S("span", null, v(s.relative_popularity) + "%", 1)], 64)) : T("", !0)], 64)) : (b(), g("span", Bb, "88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", $b, "...")) : (b(), g("span", Db, "88%"))], 64)) : (b(), g("span", jb, "..."))], 64))])) : T("", !0), r.current_permissions.show_search_frequency_increase_column ? (b(), g("td", {
                key: 4,
                class: w(["col-search-frequency-increase", {
                    "p-0": r.current_permissions.show_search_frequency_increase_data && "" !== s.search_frequency_increase && null !== s.search_frequency_increase
                }])
            }, [r.has_metrics && void 0 !== s.search_frequency_increase ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_search_frequency_increase_data ? (b(), g(y, {
                key: 0
            }, ["" !== s.search_frequency_increase && null !== s.search_frequency_increase ? (b(), g(y, {
                key: 0
            }, [S("button", {
                onClick: e => o.embed(s.keyword_source, s.id),
                class: "btn btn-light cursor-pointer mx-0 my-1 p-1"
            }, [s.search_frequency_increase > 0 ? (b(), g("span", Vb, Hb)) : T("", !0), s.search_frequency_increase < 0 ? (b(), g("span", Ib, Nb)) : T("", !0), S("span", Rb, [S("span", {
                class: w({
                    "text-success": s.search_frequency_increase > 0,
                    "text-danger": s.search_frequency_increase < 0
                })
            }, v(s.search_frequency_increase_format), 3)])], 8, Ob), "" !== s.breakout && null !== s.breakout ? (b(), g("span", Kb, v(s.breakout_format), 1)) : T("", !0)], 64)) : T("", !0)], 64)) : (b(), g("span", Jb, "88%"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Wb, "...")) : (b(), g("span", zb, "88%"))], 64)) : (b(), g("span", Yb, "..."))], 64))], 2)) : T("", !0), r.current_permissions.show_network_column ? (b(), g("td", Gb, [r.has_metrics && void 0 !== s.network ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_network_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.network && null !== s.network ? (b(), g("span", Xb, v(s.network_format), 1)) : (b(), g("span", Qb, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Zb)]))], 64)) : (b(), g("span", ev, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", tv, "...")) : (b(), g("span", rv, "88,888"))], 64)) : (b(), g("span", sv, "..."))], 64))])) : T("", !0), r.current_permissions.show_posts_column ? (b(), g("td", av, [r.has_metrics && void 0 !== s.posts ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_posts_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.posts && null !== s.posts ? (b(), g("span", ov, v(s.posts_format), 1)) : (b(), g("span", iv, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, nv)]))], 64)) : (b(), g("span", lv, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", cv, "...")) : (b(), g("span", _v, "88,888"))], 64)) : (b(), g("span", uv, "..."))], 64))])) : T("", !0), r.current_permissions.show_following_count_column ? (b(), g("td", dv, [r.has_metrics && void 0 !== s.followings ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_following_count_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.followings && null !== s.followings ? (b(), g("span", mv, v(s.followings_format), 1)) : (b(), g("span", hv, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, pv)]))], 64)) : (b(), g("span", gv, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", yv, "...")) : (b(), g("span", fv, "88,888"))], 64)) : (b(), g("span", wv, "..."))], 64))])) : T("", !0), r.current_permissions.show_follower_count_column ? (b(), g("td", bv, [r.has_metrics && void 0 !== s.followers ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_follower_count_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.followers && null !== s.followers ? (b(), g("span", vv, v(s.followers_format), 1)) : (b(), g("span", kv, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, xv)]))], 64)) : (b(), g("span", Cv, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Sv, "...")) : (b(), g("span", Tv, "88,888"))], 64)) : (b(), g("span", Fv, "..."))], 64))])) : T("", !0), r.current_permissions.show_heart_count_column ? (b(), g("td", qv, [r.has_metrics && void 0 !== s.heart_count ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_heart_count_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.heart_count && null !== s.heart_count ? (b(), g("span", Ev, v(s.heart_count_format), 1)) : (b(), g("span", Uv, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Mv)]))], 64)) : (b(), g("span", Av, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Pv, "...")) : (b(), g("span", Lv, "88,888"))], 64)) : (b(), g("span", Bv, "..."))], 64))])) : T("", !0), r.current_permissions.show_video_count_column ? (b(), g("td", $v, [r.has_metrics && void 0 !== s.video_count ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_video_count_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.video_count && null !== s.video_count ? (b(), g("span", Dv, v(s.video_count_format), 1)) : (b(), g("span", jv, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Ov)]))], 64)) : (b(), g("span", Vv, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Hv, "...")) : (b(), g("span", Iv, "88,888"))], 64)) : (b(), g("span", Nv, "..."))], 64))])) : T("", !0), r.current_permissions.show_digg_count_column ? (b(), g("td", Rv, [r.has_metrics && void 0 !== s.digg_count ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_digg_count_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.digg_count && null !== s.digg_count ? (b(), g("span", Kv, v(s.digg_count_format), 1)) : (b(), g("span", Jv, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Wv)]))], 64)) : (b(), g("span", zv, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Yv, "...")) : (b(), g("span", Gv, "88,888"))], 64)) : (b(), g("span", Xv, "..."))], 64))])) : T("", !0), r.current_permissions.show_view_count_column ? (b(), g("td", Qv, [r.has_metrics && void 0 !== s.view_count ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_view_count_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.view_count && null !== s.view_count ? (b(), g("span", Zv, v(s.view_count_format), 1)) : (b(), g("span", ek, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, tk)]))], 64)) : (b(), g("span", rk, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", sk, "...")) : (b(), g("span", ak, "88,888"))], 64)) : (b(), g("span", ok, "..."))], 64))])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("td", ik, [r.has_metrics && void 0 !== s.search_volume ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_search_volume_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.search_volume && null !== s.search_volume ? (b(), g("span", nk, v(s.search_volume_format), 1)) : (b(), g("span", lk, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, ck)]))], 64)) : (b(), g("span", _k, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", uk, "...")) : (b(), g("span", dk, "88,888"))], 64)) : (b(), g("span", mk, "..."))], 64))])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("td", hk, [r.has_metrics && void 0 !== s.search_volume_trend ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_search_volume_data || l >= r.current_free_results && r.current_permissions.free_user_show_trends_data && !s.has_null || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.search_volume_trend && null !== s.search_volume_trend ? (b(), g("span", pk, [S("span", {
                class: w({
                    "text-success": s.search_volume_trend > 0,
                    "text-danger": s.search_volume_trend < 0,
                    icon: 0 == s.search_volume_trend
                })
            }, [s.search_volume_trend > 0 ? (b(), g("i", gk)) : s.search_volume_trend < 0 ? (b(), g("i", yk)) : T("", !0), A(" " + v(s.search_volume_trend_format), 1)], 2)])) : (b(), g("span", fk, [r.current_permissions.free_user_show_trends_data ? (b(), g("span", wk, "88%")) : (b(), g("span", {
                key: 1,
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, bk))]))], 64)) : (b(), g("span", vk, "88%"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", kk, "...")) : (b(), g("span", xk, "88%"))], 64)) : (b(), g("span", Ck, "..."))], 64))])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("td", Sk, [(r.current_permissions.show_search_volume_data || l < r.current_free_results && !s.has_null) && "" !== s.search_volume_trend && null !== s.search_volume_trend ? (b(), x(n, {
                key: 0,
                data: s.search_volume_trend_mini_chart,
                keyword_id: s.id,
                popup: {
                    data: s.search_volume_trend_data,
                    height: 260,
                    labels: s.search_volume_trend_labels,
                    title: s.search_volume_trend_title,
                    width: 600
                }
            }, null, 8, ["data", "keyword_id", "popup"])) : T("", !0)])) : T("", !0), r.current_permissions.show_cpc_column ? (b(), g("td", Tk, [r.has_metrics && void 0 !== s.average_cpc ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_cpc_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.average_cpc && null !== s.average_cpc ? (b(), g("span", Fk, v(s.average_cpc_format), 1)) : (b(), g("span", qk, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Ek)]))], 64)) : (b(), g("span", Uk, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Mk, "...")) : (b(), g("span", Ak, "8.88"))], 64)) : (b(), g("span", Pk, "..."))], 64))])) : T("", !0), 12 != r.search_engine && r.current_permissions.show_low_top_page_bid_column || 12 == r.search_engine && r.current_permissions.show_low_top_page_bid_column && r.has_top_page_bid ? (b(), g("td", Lk, [r.has_metrics && void 0 !== s.low_top_page_bid ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_low_top_page_bid_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.low_top_page_bid && null !== s.low_top_page_bid ? (b(), g("span", Bk, v(s.low_top_page_bid_format), 1)) : (b(), g("span", $k, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Dk)]))], 64)) : (b(), g("span", jk, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Ok, "...")) : (b(), g("span", Vk, "8.88"))], 64)) : (b(), g("span", Hk, "..."))], 64))])) : T("", !0), 12 != r.search_engine && r.current_permissions.show_high_top_page_bid_column || 12 == r.search_engine && r.current_permissions.show_high_top_page_bid_column && r.has_top_page_bid ? (b(), g("td", Ik, [r.has_metrics && void 0 !== s.high_top_page_bid ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_high_top_page_bid_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.high_top_page_bid && null !== s.high_top_page_bid ? (b(), g("span", Nk, v(s.high_top_page_bid_format), 1)) : (b(), g("span", Rk, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Kk)]))], 64)) : (b(), g("span", Jk, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Wk, "...")) : (b(), g("span", zk, "8.88"))], 64)) : (b(), g("span", Yk, "..."))], 64))])) : T("", !0), r.current_permissions.show_competition_column ? (b(), g("td", Gk, [r.has_metrics && void 0 !== s.competition ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_competition_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.competition && null !== s.competition ? (b(), g(y, {
                key: 0
            }, ["" !== s.competition_class && null !== s.competition_class ? (b(), g("span", {
                key: 0,
                class: w(s.competition_class)
            }, v(s.competition_format), 3)) : (b(), g("span", Xk, v(s.competition_format), 1))], 64)) : (b(), g("span", Qk, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Zk)]))], 64)) : (b(), g("span", ex, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", tx, "...")) : (b(), g("span", rx, "8.88"))], 64)) : (b(), g("span", sx, "..."))], 64))])) : T("", !0), r.current_permissions.show_username_column ? (b(), g("td", ax, [r.has_metrics && void 0 !== s.username ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_username_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.username && null !== s.username ? (b(), g("span", ox, v(s.username), 1)) : (b(), g("span", ix, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, nx)]))], 64)) : (b(), g("span", lx, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", cx, "...")) : (b(), g("span", _x, "8.88"))], 64)) : (b(), g("span", ux, "..."))], 64))])) : T("", !0), r.current_permissions.show_full_name_column ? (b(), g("td", dx, [r.has_metrics && void 0 !== s.full_name ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_full_name_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.full_name && null !== s.full_name ? (b(), g("span", mx, v(s.full_name), 1)) : (b(), g("span", hx, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, px)]))], 64)) : (b(), g("span", gx, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", yx, "...")) : (b(), g("span", fx, "8.88"))], 64)) : (b(), g("span", wx, "..."))], 64))])) : T("", !0), r.current_permissions.show_is_private_column ? (b(), g("td", bx, [r.has_metrics && void 0 !== s.is_private ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_is_private_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.is_private && null !== s.is_private ? (b(), g("span", vx, v(o.format_boolean_filter(s.is_private)), 1)) : (b(), g("span", kx, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, xx)]))], 64)) : (b(), g("span", Cx, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Sx, "...")) : (b(), g("span", Tx, "8.88"))], 64)) : (b(), g("span", Fx, "..."))], 64))])) : T("", !0), r.current_permissions.show_is_verified_column ? (b(), g("td", qx, [r.has_metrics && void 0 !== s.is_verified ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_is_verified_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.is_verified && null !== s.is_verified ? (b(), g("span", Ex, v(o.format_boolean_filter(s.is_verified)), 1)) : (b(), g("span", Ux, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Mx)]))], 64)) : (b(), g("span", Ax, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Px, "...")) : (b(), g("span", Lx, "8.88"))], 64)) : (b(), g("span", Bx, "..."))], 64))])) : T("", !0), r.current_permissions.show_timestamp_column ? (b(), g("td", $x, [r.has_metrics && void 0 !== s.timestamp ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_timestamp_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.timestamp && null !== s.timestamp ? (b(), g("span", Dx, v(s.timestamp_format) + " ", 1)) : (b(), g("span", jx, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Ox)]))], 64)) : (b(), g("span", Vx, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", Hx, "...")) : (b(), g("span", Ix, "88,888"))], 64)) : (b(), g("span", Nx, "..."))], 64))])) : T("", !0)], 2), r.current_permissions.show_relative_popularity_data || r.current_permissions.show_search_frequency_increase_data ? (b(), g("tr", Rx, [Kx, S("td", {
                colspan: "8",
                id: "chart_" + s.id
            }, null, 8, Jx)])) : T("", !0)], 64)))), 128))])) : T("", !0)])])
        }]
    ]),
    zx = {
        components: {},
        props: {
            loading: {
                type: Boolean,
                required: !0,
                default: !1
            },
            keyword: {
                type: String,
                required: !0,
                default: ""
            },
            search_engine: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_permissions: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            show_upsell: {
                type: Boolean,
                required: !1,
                default: !1
            },
            has_metrics: {
                type: Boolean,
                required: !1,
                default: !1
            },
            keywords: {
                type: Array,
                required: !0,
                default: function() {
                    return []
                }
            },
            all_keywords: {
                type: Array,
                required: !0,
                default: function() {
                    return []
                }
            },
            sort: {
                type: Function,
                required: !0,
                default: function() {}
            },
            sort_by: {
                type: String,
                required: !0,
                default: ""
            },
            sort_direction: {
                type: String,
                required: !0,
                default: ""
            },
            user_is_paid: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            selected: [],
            selected_all: !1
        }),
        methods: {
            is_selected(e) {
                if (this.loading) return !1;
                if (12 == this.search_engine) var t = e.keyword_id;
                else t = e.keyword_source;
                return this.selected.toString().indexOf(t) >= 0
            },
            change_select_keyword(e, t) {
                this.loading || (t.target.checked ? this.$emit("select", e) : this.$emit("deselect", e))
            },
            toggle_select_keyword(e) {
                if (this.loading) return;
                this.selected.indexOf(e) >= 0 ? (this.selected = this.selected.filter((t => t !== e)), this.$emit("deselect", e)) : (this.selected.push(e), this.$emit("select", e))
            },
            toggle_all_keyword(e) {
                this.loading || (e.target.checked ? (this.selected = this.all_keywords, this.$emit("all", !0)) : (this.selected = [], this.$emit("all", !1)))
            }
        }
    },
    Yx = {
        class: "search-results-table table table-hover"
    },
    Gx = {
        class: "col-checkbox w-1"
    },
    Xx = ["disabled"],
    Qx = {
        class: "col-product-name d-sm-none d-md-table-cell"
    },
    Zx = {
        key: 0
    },
    eC = {
        key: 0
    },
    tC = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    rC = {
        key: 1
    },
    sC = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    aC = {
        class: "table-head"
    },
    oC = {
        key: 0,
        class: "col-product-asin"
    },
    iC = {
        key: 0
    },
    nC = {
        key: 0
    },
    lC = {
        key: 0
    },
    cC = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    _C = {
        key: 1
    },
    uC = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    dC = {
        class: "table-head"
    },
    mC = {
        key: 1,
        class: "col-product-brand"
    },
    hC = {
        key: 0
    },
    pC = {
        key: 0
    },
    gC = {
        key: 0
    },
    yC = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    fC = {
        key: 1
    },
    wC = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    bC = {
        class: "table-head"
    },
    vC = {
        key: 2,
        class: "col-product-price"
    },
    kC = {
        key: 0
    },
    xC = {
        key: 0
    },
    CC = {
        key: 0
    },
    SC = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    TC = {
        key: 1
    },
    FC = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    qC = {
        class: "table-head"
    },
    EC = {
        key: 3,
        class: "col-product-link"
    },
    UC = {
        key: 0
    },
    MC = {
        class: "col-checkbox w-1"
    },
    AC = ["id", "value", "onChange", "disabled"],
    PC = ["onClick"],
    LC = {
        class: "row"
    },
    BC = {
        class: "col-2"
    },
    $C = {
        class: "figure position-relative text-center w-100"
    },
    DC = ["src", "alt", "title"],
    jC = ["src"],
    OC = {
        class: "col"
    },
    VC = ["innerHTML"],
    HC = {
        key: 0,
        class: "col-product-asin"
    },
    IC = {
        key: 0
    },
    NC = {
        key: 0
    },
    RC = {
        key: 0
    },
    KC = ["href"],
    JC = {
        key: 1,
        class: "text-secondary"
    },
    WC = ["data-bs-content"],
    zC = {
        key: 1,
        class: "text-blur"
    },
    YC = {
        key: 0
    },
    GC = {
        key: 1,
        class: "text-blur"
    },
    XC = {
        key: 1
    },
    QC = {
        key: 1,
        class: "col-product-brand"
    },
    ZC = {
        key: 0
    },
    eS = {
        key: 0
    },
    tS = {
        key: 0
    },
    rS = {
        key: 1,
        class: "text-secondary"
    },
    sS = ["data-bs-content"],
    aS = {
        key: 1,
        class: "text-blur"
    },
    oS = {
        key: 0
    },
    iS = {
        key: 1,
        class: "text-blur"
    },
    nS = {
        key: 1
    },
    lS = {
        key: 2,
        class: "col-product-price"
    },
    cS = {
        key: 0
    },
    _S = {
        key: 0
    },
    uS = {
        key: 0
    },
    dS = {
        key: 1,
        class: "text-secondary"
    },
    mS = ["data-bs-content"],
    hS = {
        key: 1,
        class: "text-blur"
    },
    pS = {
        key: 0
    },
    gS = {
        key: 1,
        class: "text-blur"
    },
    yS = {
        key: 1
    },
    fS = {
        key: 3,
        class: "col-product-link"
    },
    wS = {
        key: 0
    },
    bS = {
        key: 0
    },
    vS = ["href"],
    kS = [S("i", {
        class: "bi bi-link"
    }, null, -1)],
    xS = {
        key: 1,
        class: "text-secondary"
    },
    CS = ["data-bs-content"],
    SS = {
        key: 0
    },
    TS = {
        key: 1,
        class: "text-blur"
    },
    FS = {
        key: 1
    };
const qS = {
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "product-summary": iy,
            "google-search-volume-result": Wx,
            "product-result": Ue(zx, [
                ["render", function(e, t, r, s, a, o) {
                    return b(), g("table", Yx, [S("thead", null, [S("th", Gx, [F(S("input", {
                        type: "checkbox",
                        "onUpdate:modelValue": t[0] || (t[0] = e => a.selected_all = e),
                        onClick: t[1] || (t[1] = e => o.toggle_all_keyword(e)),
                        disabled: r.loading || r.all_keywords.length <= 0
                    }, null, 8, Xx), [
                        [q, a.selected_all]
                    ])]), S("th", Qx, [S("span", {
                        class: "cursor-pointer",
                        onClick: t[2] || (t[2] = e => r.sort("keywords"))
                    }, ["keywords" == r.sort_by ? (b(), g("span", Zx, ["Asc" == r.sort_direction ? (b(), g("span", eC, tC)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", rC, sC)) : T("", !0)])) : T("", !0), S("span", aC, v(e.trans.get("Product")), 1)])]), r.current_permissions.show_product_column ? (b(), g("th", oC, [S("span", {
                        class: "cursor-pointer",
                        onClick: t[3] || (t[3] = e => r.current_permissions.show_product_data ? r.sort("asin") : "")
                    }, [r.current_permissions.show_product_data ? (b(), g("span", iC, ["asin" == r.sort_by ? (b(), g("span", nC, ["Asc" == r.sort_direction ? (b(), g("span", lC, cC)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", _C, uC)) : T("", !0)])) : T("", !0)])) : T("", !0), S("span", dC, v(e.trans.get("ASIN")), 1)])])) : T("", !0), r.current_permissions.show_product_column ? (b(), g("th", mC, [S("span", {
                        class: "cursor-pointer",
                        onClick: t[4] || (t[4] = e => r.current_permissions.show_product_data ? r.sort("brand") : "")
                    }, [r.current_permissions.show_product_data ? (b(), g("span", hC, ["brand" == r.sort_by ? (b(), g("span", pC, ["Asc" == r.sort_direction ? (b(), g("span", gC, yC)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", fC, wC)) : T("", !0)])) : T("", !0)])) : T("", !0), S("span", bC, v(e.trans.get("Brand")), 1)])])) : T("", !0), r.current_permissions.show_product_column ? (b(), g("th", vC, [S("span", {
                        class: "cursor-pointer",
                        onClick: t[5] || (t[5] = e => r.current_permissions.show_product_data ? r.sort("price") : "")
                    }, [r.current_permissions.show_product_data ? (b(), g("span", kC, ["price" == r.sort_by ? (b(), g("span", xC, ["Asc" == r.sort_direction ? (b(), g("span", CC, SC)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", TC, FC)) : T("", !0)])) : T("", !0)])) : T("", !0), S("span", qC, v(e.trans.get("Price")), 1)])])) : T("", !0), r.current_permissions.show_product_data ? (b(), g("th", EC)) : T("", !0)]), r.keywords.length ? (b(), g("tbody", UC, [(b(!0), g(y, null, f(r.keywords, ((s, i) => (b(), g("tr", {
                        key: i,
                        class: w({
                            "table-active": o.is_selected(s)
                        })
                    }, [S("td", MC, [F(S("input", {
                        id: s.id,
                        type: "checkbox",
                        value: s.keyword_source,
                        "onUpdate:modelValue": t[6] || (t[6] = e => a.selected = e),
                        onChange: e => o.change_select_keyword(s.keyword_source, e),
                        disabled: r.loading
                    }, null, 40, AC), [
                        [q, a.selected]
                    ])]), S("td", {
                        class: "col-product-name cursor-pointer d-sm-none d-md-block",
                        onClick: e => o.toggle_select_keyword(s.keyword_source)
                    }, [S("div", LC, [S("div", BC, [S("figure", $C, [s.img ? (b(), g("img", {
                        key: 0,
                        src: s.img,
                        alt: s.keyword,
                        title: s.keyword,
                        class: "figure-img img-fluid img-thumbnail rounded m-0"
                    }, null, 8, DC)) : T("", !0), s.is_prime ? (b(), g("img", {
                        key: 1,
                        src: "/images/amazon-prime.png",
                        alt: "Amazon Prime",
                        class: "amazon-prime-badge position-absolute bottom-0 start-0 mb-3 ms-3 rounded p-1 opacity-75"
                    }, null, 8, jC)) : T("", !0)])]), S("div", OC, [S("div", {
                        class: "fw-normal",
                        innerHTML: s.keyword
                    }, null, 8, VC)])])], 8, PC), r.current_permissions.show_product_column ? (b(), g("td", HC, [r.has_metrics && void 0 !== s.asin ? (b(), g("span", IC, [r.current_permissions.show_product_data ? (b(), g("span", NC, [s.asin && null !== s.asin ? (b(), g("span", RC, [S("a", {
                        href: s.url,
                        target: "_blank",
                        rel: "noopener"
                    }, v(s.asin), 9, KC)])) : (b(), g("span", JC, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                        "data-bs-toggle": "popover",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, WC)]))])) : (b(), g("span", zC, "888"))])) : (b(), g(y, {
                        key: 1
                    }, [r.has_metrics ? (b(), g(y, {
                        key: 0
                    }, [r.user_is_paid ? (b(), g("span", YC, "...")) : (b(), g("span", GC, "888"))], 64)) : (b(), g("span", XC, "..."))], 64))])) : T("", !0), r.current_permissions.show_product_column ? (b(), g("td", QC, [r.has_metrics && void 0 !== s.brand ? (b(), g("span", ZC, [r.current_permissions.show_product_data ? (b(), g("span", eS, [s.brand && null !== s.brand ? (b(), g("span", tS, v(s.brand), 1)) : (b(), g("span", rS, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                        "data-bs-toggle": "popover",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, sS)]))])) : (b(), g("span", aS, "888"))])) : (b(), g(y, {
                        key: 1
                    }, [r.has_metrics ? (b(), g(y, {
                        key: 0
                    }, [r.user_is_paid ? (b(), g("span", oS, "...")) : (b(), g("span", iS, "888"))], 64)) : (b(), g("span", nS, "..."))], 64))])) : T("", !0), r.current_permissions.show_product_column ? (b(), g("td", lS, [r.has_metrics && void 0 !== s.price_format ? (b(), g("span", cS, [r.current_permissions.show_product_data ? (b(), g("span", _S, [s.price_format && null !== s.price_format ? (b(), g("span", uS, v(s.price_format), 1)) : (b(), g("span", dS, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                        "data-bs-toggle": "popover",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, mS)]))])) : (b(), g("span", hS, "8.88"))])) : (b(), g(y, {
                        key: 1
                    }, [r.has_metrics ? (b(), g(y, {
                        key: 0
                    }, [r.user_is_paid ? (b(), g("span", pS, "...")) : (b(), g("span", gS, "8.88"))], 64)) : (b(), g("span", yS, "..."))], 64))])) : T("", !0), r.current_permissions.show_product_data ? (b(), g("td", fS, [r.has_metrics && void 0 !== s.url ? (b(), g("span", wS, [s.url && null !== s.url ? (b(), g("span", bS, [S("a", {
                        href: s.url,
                        target: "_blank",
                        rel: "noopener"
                    }, kS, 8, vS)])) : (b(), g("span", xS, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                        "data-bs-toggle": "popover",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, CS)]))])) : (b(), g(y, {
                        key: 1
                    }, [r.has_metrics ? (b(), g(y, {
                        key: 0
                    }, [r.user_is_paid ? (b(), g("span", SS, "...")) : (b(), g("span", TS, "888"))], 64)) : (b(), g("span", FS, "..."))], 64))])) : T("", !0)], 2)))), 128))])) : T("", !0)])
                }]
            ])
        },
        data: () => ({
            allow_product_filter: !1
        }),
        computed: {
            show_upsell() {
                return 11 == this.current_tab ? !this.current_permissions.pro_is_paused && !this.current_permissions.show_product_column && this.has_keywords && !this.loading : !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e = !1,
                    t = {},
                    r = 0,
                    s = 0;
                if (this.current_scrape_urls) {
                    var a = [];
                    for (var o in this.current_scrape_urls) this.current_scrape_urls.hasOwnProperty(o) && (a.push({
                        url: this.current_scrape_urls[o],
                        term: o
                    }), s++);
                    if (11 == this.current_tab) {
                        try {
                            var i = [];
                            await Promise.all(a.map((e => new Promise(((t, r) => {
                                try {
                                    let r = document.createElement("script"),
                                        s = "_callback_" + se().replaceAll("-", ""),
                                        a = e.url;
                                    a.match(/\?/) ? a += "&callback=" + s : a += "?callback=" + s, r.async = !0, r.src = a, window[s] = a => {
                                        if (a.url = e.url, a.term = e.term, this.keywords.length <= 100 && void 0 !== a.results)
                                            for (let e = 0; e < a.results.length; e++) {
                                                let t = a.results[e];
                                                if (void 0 !== t.heading) {
                                                    var o = t.heading.toLowerCase().replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                    this.keywords.push({
                                                        keyword: o,
                                                        keyword_rank: 0
                                                    })
                                                }
                                            }
                                        r.remove(), delete window[s], t(a)
                                    }, setTimeout((() => {
                                        window[s] && (r.remove(), delete window[s], t(!1))
                                    }), 12e3), document.body.appendChild(r)
                                } catch (s) {
                                    t(!1)
                                }
                            })))))
                        } catch (c) {
                            console.log(c)
                        }
                        i && i.map((e => {
                            e && (t[e.term] = e)
                        }))
                    } else {
                        try {
                            i = await Promise.all(a.map((e => new Promise(((t, s) => {
                                let a = new XMLHttpRequest,
                                    o = e.url;
                                a.timeout = 12e3, a.open("GET", o, !0), a.overrideMimeType("application/json"), a.send(), a.onload = () => {
                                    try {
                                        if (a.readyState === a.DONE && 200 === a.status) {
                                            let r = JSON.parse(a.responseText);
                                            if (r.url = e.url, r.term = e.term, this.keywords.length <= 100 && void 0 !== r.suggestions)
                                                for (let e = 0; e < r.suggestions.length; e++) {
                                                    let t = r.suggestions[e];
                                                    if (void 0 !== t.value && void 0 !== t.type && "KEYWORD" === t.type) {
                                                        var s = t.value.toLowerCase().replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                        this.keywords.push({
                                                            keyword: s,
                                                            keyword_rank: 0
                                                        })
                                                    }
                                                }
                                            t(r)
                                        } else r++, t(!1)
                                    } catch (c) {
                                        r++, t(!1)
                                    }
                                }, a.onerror = () => {
                                    r++, t(!1)
                                }, a.ontimeout = () => {
                                    r++, t(!1)
                                }
                            })))))
                        } catch (c) {
                            console.log(c)
                        }
                        if (s > 0 && s == r && (e = !0), e && this.captcha_url) return window.location.href = this.url_add_param(this.captcha_url, "redirect", window.location.href), !1;
                        i && i.map((e => {
                            e && (t[e.term] = e)
                        }))
                    }
                }
                try {
                    var n;
                    this.error = this.list = null;
                    var l = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    n = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(t))
                    }, {
                        headers: l
                    }), this.has_all_error = n.data.has_all_error, this.has_error = n.data.has_error, this.keywords = n.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = n.data.breakdown_url ? n.data.breakdown_url : null, this.device_breakdown_url = n.data.device_breakdown_url ? n.data.device_breakdown_url : null, this.keywords_payload = n.data.keywords_payload, this.metrics_url = n.data.metrics_url, this.current_scrape_urls = n.data.scrape_urls, await this.metrics(!0)
                } catch (c) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("amazon-category-rebuild", e), Ce("amazon-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, 11 != this.current_tab || this.allow_product_filter || this.resetFilter(), this.filter(!0)
            }
        }
    },
    ES = {
        key: 0,
        class: "search-results-settings my-2"
    },
    US = {
        class: "search-results-settings-display mx-n1"
    },
    MS = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-price btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    AS = {
        class: "search-results-settings-display-price-label"
    },
    PS = {
        key: 0,
        class: "search-results-settings-display-price-value"
    },
    LS = {
        key: 1,
        class: "search-results-settings-display-price-value"
    },
    BS = {
        key: 2,
        class: "search-results-settings-display-price-value"
    },
    $S = {
        key: 0,
        class: "row"
    },
    DS = {
        class: "col"
    },
    jS = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    OS = {
        key: 1,
        class: "row"
    },
    VS = {
        class: "col-12 col-md-6"
    },
    HS = {
        class: "search-results-settings-modal-country mb-3"
    },
    IS = {
        class: "form-label search-results-settings-modal-country-label"
    },
    NS = ["value"],
    RS = {
        key: 0,
        class: "col-12 col-md-6"
    },
    KS = {
        class: "search-results-settings-modal-currency mb-3"
    },
    JS = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    WS = {
        key: 2,
        class: "row"
    },
    zS = {
        key: 0,
        class: "col-12 col-md-6"
    },
    YS = {
        key: 1,
        class: "col-12 col-md-6"
    },
    GS = {
        class: "row"
    },
    XS = {
        class: "col"
    },
    QS = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    ZS = {
        key: 1,
        class: "row"
    },
    eT = {
        key: 0,
        class: "col-12 col-md-6"
    },
    tT = {
        class: "col-12 col-md-6"
    },
    rT = {
        class: "row"
    },
    sT = {
        class: "col-12"
    },
    aT = {
        class: "row"
    },
    oT = {
        class: "col-12"
    },
    iT = {
        class: "row"
    },
    nT = {
        class: "col-12"
    },
    lT = {
        key: 0,
        class: "search-results-settings-modal-price mb-3"
    },
    cT = {
        class: "form-label search-results-settings-modal-price-label"
    },
    _T = {
        class: "search-results-settings-modal-price-value input-group"
    },
    uT = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    dT = {
        key: 2,
        class: "alert-pro-upsell alert-pro-upsell-above-summary mb-4 mt-2",
        role: "alert"
    },
    mT = {
        class: "row"
    },
    hT = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1),
    pT = {
        class: "col-sm-12 col-md-12 col-lg-10"
    },
    gT = {
        class: "card text-center shadow"
    },
    yT = {
        class: "card-body"
    },
    fT = S("h5", {
        class: "card-title"
    }, " 🚀 Keyword Tool Pro ", -1),
    wT = {
        class: "card-text"
    },
    bT = ["innerHTML"],
    vT = ["href"],
    kT = S("i", {
        class: "bi bi-box-arrow-in-right me-1"
    }, null, -1),
    xT = ["innerHTML"],
    CT = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1),
    ST = {
        class: "search-results-summary card my-4 bg-light"
    },
    TT = {
        class: "card-body"
    },
    FT = {
        class: "search-results-keywords my-3"
    },
    qT = {
        key: 0,
        class: "mb-4"
    },
    ET = {
        key: 1,
        class: "mb-4"
    },
    UT = {
        key: 2,
        class: "mb-4"
    },
    MT = S("i", {
        class: "bi bi-clipboard me-1"
    }, null, -1);
const AT = Ue(qS, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                q = k("search-results-settings-modal-search-network"),
                M = k("search-results-settings-modal-currency"),
                P = k("search-results-settings-modal-search-volume"),
                $ = k("search-results-settings-modal-search-volume-trend"),
                D = k("search-results-settings-modal-average-cpc"),
                j = k("search-results-settings-modal-bing-competition"),
                O = k("search-results-settings-modal-competition"),
                V = k("search-results-settings-filter-positive-keywords"),
                H = k("search-results-settings-filter-negative-keywords"),
                I = k("search-results-settings-modal-keyword-result-period"),
                N = k("search-results-settings-modal"),
                R = k("search-results-tabs"),
                K = k("has-error"),
                J = k("suggest-page-reload"),
                W = k("product-summary"),
                z = k("google-search-volume-summary"),
                Y = k("show-upsell"),
                G = k("product-result"),
                X = k("google-search-volume-result"),
                Q = k("search-results-table-wrapper"),
                Z = k("search-results-no-keyword-found"),
                ee = k("has-more"),
                te = k("dropdown-menu-item-add-basket"),
                re = k("dropdown-menu-item-divider"),
                se = k("dropdown-menu-item-export-excel"),
                ae = k("dropdown-menu-item-export-csv"),
                oe = k("dropdown-menu-item-copy-keywords"),
                ie = k("dropdown-menu-item-copy-keywords-search-volume"),
                ne = k("dropdown-menu-item-copy-keywords-all-data"),
                le = k("search-results-actions"),
                ce = L("mask");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), 11 != e.current_tab || 11 == e.current_tab && a.allow_product_filter ? (b(), g("div", ES, [S("div", US, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), e.current_permissions.show_product_data ? (b(), g(y, {
                key: 2
            }, [e.show_current_filter_price_min > 0 || e.show_current_filter_price_max > 0 ? (b(), g("button", MS, [S("strong", AS, v(e.trans.get("Price")) + ":", 1), e.show_current_filter_price_min > 0 && e.show_current_filter_price_max > 0 ? (b(), g("span", PS, v(e.$filters.decimal(e.show_current_filter_price_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.decimal(e.show_current_filter_price_max)), 1)) : e.show_current_filter_price_min > 0 && !e.show_current_filter_price_max ? (b(), g("span", LS, v(e.trans.get("more than")) + " " + v(e.$filters.decimal(e.show_current_filter_price_min)), 1)) : !e.show_current_filter_price_min && e.show_current_filter_price_max > 0 ? (b(), g("span", BS, v(e.trans.get("less than")) + " " + v(e.$filters.decimal(e.show_current_filter_price_max)), 1)) : T("", !0), S("a", {
                onClick: t[0] || (t[0] = t => e.clearFilter("price")),
                class: "search-results-settings-display-price-remove ms-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(N, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", $S, [S("div", DS, [S("h5", jS, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", OS, [S("div", VS, [S("div", HS, [S("label", IS, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, NS)])]), e.current_permissions.show_currency_settings ? (b(), g("div", RS, [S("div", KS, [S("label", JS, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", WS, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", zS, [E(q, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[1] || (t[1] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", YS, [E(M, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[2] || (t[2] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", GS, [S("div", XS, [S("h5", QS, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data || e.current_permissions.show_product_data ? (b(), g("div", ZS, [e.current_permissions.show_search_volume_data ? (b(), g("div", eT, [E(P, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[3] || (t[3] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[4] || (t[4] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E($, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[5] || (t[5] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[6] || (t[6] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])])) : T("", !0), S("div", tT, [E(D, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[7] || (t[7] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[8] || (t[8] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(j, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[9] || (t[9] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(O, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[10] || (t[10] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[11] || (t[11] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", rT, [S("div", sT, [E(V, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[12] || (t[12] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[13] || (t[13] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", aT, [S("div", oT, [E(H, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[14] || (t[14] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), S("div", iT, [S("div", nT, [e.current_permissions.show_product_data ? (b(), g("div", lT, [S("label", cT, v(e.trans.get("Price")), 1), S("div", _T, [F(S("input", {
                    "onUpdate:modelValue": t[15] || (t[15] = t => e.current_filter_price_min = t),
                    name: "price_min",
                    type: "text",
                    class: "form-control"
                }, null, 512), [
                    [ce, e.decimal_format],
                    [U, e.current_filter_price_min]
                ]), S("span", uT, v(e.trans.get("to")), 1), F(S("input", {
                    "onUpdate:modelValue": t[16] || (t[16] = t => e.current_filter_price_max = t),
                    name: "price_max",
                    type: "text",
                    class: "form-control"
                }, null, 512), [
                    [ce, e.decimal_format],
                    [U, e.current_filter_price_max]
                ])])])) : T("", !0)])]), 11 == e.current_tab || e.current_permissions.pro_is_paused || e.current_permissions.show_search_volume_data ? T("", !0) : (b(), g("div", dT, [S("div", mT, [hT, S("div", pT, [S("div", gT, [S("div", yT, [fT, S("div", wT, [S("p", {
                    innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                        count_free: 5
                    })
                }, null, 8, bT)]), S("a", {
                    href: e.routes.page_pro_index,
                    target: "_blank",
                    rel: "noopener",
                    class: "btn btn-warning"
                }, [kT, S("span", {
                    innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                        count_pro: "2,000"
                    })
                }, null, 8, xT)], 8, vT)])])]), CT])])), E(I, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[17] || (t[17] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])])) : T("", !0), E(R, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(K, {
                key: 1,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(J, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", ST, [S("div", TT, [11 == e.current_tab ? (b(), x(W, {
                key: 0,
                loading: e.loading,
                current_tab: e.current_tab,
                show_upsell: o.show_upsell,
                summaries: e.summaries,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency,
                allow_filter: a.allow_product_filter
            }, null, 8, ["loading", "current_tab", "show_upsell", "summaries", "current_permissions", "current_metrics_currency", "allow_filter"])) : (b(), x(z, {
                key: 1,
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"])), !o.show_upsell || 1 != e.current_tab && 6 != e.current_tab ? T("", !0) : (b(), x(Y, {
                key: 2,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", FT, [E(Q, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [11 == e.current_tab ? (b(), x(G, {
                    key: 0,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    sort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    selected: e.selected,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["loading", "current_tab", "current_permissions", "show_upsell", "keywords", "all_keywords", "sort", "sort_by", "sort_direction", "selected", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "user_is_paid"])) : (b(), x(X, {
                    key: 1,
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Unlock this data to find the most popular products on Amazon."),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"]))])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(Z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [6 == e.current_tab ? (b(), g("h4", qT, v(e.trans.get("Sorry, Amazon does not provide any prepositions for your query")), 1)) : 11 == e.current_tab ? (b(), g("h4", ET, v(e.trans.get("Sorry, Amazon does not provide any products for your query")), 1)) : (b(), g("h4", UT, v(e.trans.get("Sorry, Amazon does not provide any keyword suggestions for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(ee, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(le, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(te, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(re, {
                    key: 1
                })) : T("", !0), E(se, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(ae, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(re), E(oe, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), 11 != e.current_tab ? (b(), x(ie, {
                    key: 2,
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])) : T("", !0), 11 != e.current_tab ? (b(), x(ne, {
                    key: 3,
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])) : T("", !0), 11 == e.current_tab ? (b(), g("a", {
                    key: 4,
                    class: w([{
                        disabled: !e.current_permissions.show_product_data
                    }, "dropdown-item btn-copy-product-data"]),
                    onClick: t[18] || (t[18] = t => e.copy("product")),
                    href: "javascript:"
                }, [MT, A(" " + v(e.trans.get("Copy with All Data")), 1)], 2)) : T("", !0)])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    PT = {
        components: {},
        data: () => ({
            keyword_language: "",
            country: "",
            id: null,
            language: "",
            language_options: [],
            language_settings: {},
            loading: !0,
            search_type: null,
            container_css_class: "",
            languages_url: "",
            rebuild_event: "",
            cookie: ""
        }),
        computed: {
            placeholder() {
                return this.loading ? "Loading..." : ""
            }
        },
        async created() {
            this.id = se(), this.search_type = window.param("search_type"), this.language_settings = {
                containerCssClass: this.container_css_class + " language-dropdown form-control rounded-top-start-md-0 rounded-bottom-start-md-0 rounded-top-end-lg-0 rounded-bottom-end-lg-0 pe-3",
                create: !1,
                allowEmptyOption: !1,
                duplicates: !1,
                preload: !0,
                favCookie: "google_trends_locations_fav"
            }, this.rebuild_event && xe(this.rebuild_event, (e => {
                this.search_type = e, this.build()
            })), this.build()
        },
        methods: {
            async build() {
                this.language_options = [], this.loading = !0, Ce("loading-language", !0), await this.loadLanguage(), this.loading = !1, Ce("loading-language", !1)
            },
            allowHtml: e => e,
            async selectLanguage(e) {
                this.country = e.country, this.language = e.language
            },
            async loadLanguage() {
                return new Promise((async (e, t) => {
                    try {
                        this.language_options = [];
                        let t = null,
                            r = window.param("country");
                        t = "" != r ? r : this.$cookies.get(this.cookie) && this.$cookies.get(this.cookie).country ? this.$cookies.get(this.cookie).country : null;
                        let s = null,
                            a = window.param("language");
                        s = "" != a ? a : this.$cookies.get(this.cookie) && this.$cookies.get(this.cookie).language ? this.$cookies.get(this.cookie).language : null;
                        let o = await axios.get(this.languages_url, {
                            country: t,
                            language: s,
                            search_type: this.search_type,
                            tutorial: this.$root.isTutorial()
                        });
                        this.country = o.data && o.data.selected && o.data.selected.country ? o.data.selected.country : "GLB", this.language = o.data && o.data.selected && o.data.selected.language ? o.data.selected.language : "en", this.keyword_language = o.data && o.data.selected && o.data.selected.id ? o.data.selected.id : "GLB:en", this.language_options = o.data && o.data.languages ? o.data.languages : [], e(!0)
                    } catch (r) {
                        t(Error(r))
                    }
                }))
            },
            languageResults: (e, t) => e.html ? e.html : e.text
        }
    },
    LT = {
        class: "row g-0 me-lg-n1px"
    },
    BT = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const $T = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "amazon-language-select2",
            languages_url: "/search/keywords/amazon/languages",
            rebuild_event: "amazon-language-rebuild",
            cookie: "amazon_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", LT, [S("div", BT, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    DT = {
        mixins: [],
        data: () => ({
            cloud_search_cancel_token: null
        }),
        methods: {
            locationSearchSuggest(e) {
                this.cloud_search_cancel_token && this.cloud_search_cancel_token.cancel("Operation canceled by the user."), this.cloud_search_cancel_token = axios.CancelToken.source();
                var t = e.query.replaceAll("'", "\\'"),
                    r = {
                        q: "(or '" + t.split(" ").join("' '") + "' (and (prefix boost=3 field=location_name '" + t + "') (or (term field=location_type 'Country') (term field=location_type 'All Countries'))) (and (prefix boost=2 field=location_name '" + t + "') (term field=location_type 'State')) (and (prefix boost=1 field=location_name '" + t + "') (term field=location_type 'City')) (phrase boost=3 field=canonical_name '" + t + "') (prefix boost=3 field=canonical_name '" + t + "') (term boost=3 field=canonical_name '" + t + "'))",
                        "q.parser": "structured",
                        size: e.hitsPerPage,
                        "highlight.canonical_name": {},
                        sort: "_score desc"
                    },
                    s = "";
                if (e.facetFilters && e.facetFilters.length > 0)
                    for (var a = 0; a < e.facetFilters.length; a++)
                        if (e.facetFilters[a].length > 0) {
                            s += " (or";
                            for (var o = 0; o < e.facetFilters[a].length; o++) s += " " + e.facetFilters[a][o].field + ":'" + e.facetFilters[a][o].value + "'";
                            s += ")"
                        } if (e.excludeFilters && e.excludeFilters.length > 0)
                    for (a = 0; a < e.excludeFilters.length; a++)
                        if (e.excludeFilters[a].length > 0) {
                            s += " (not (or";
                            for (o = 0; o < e.excludeFilters[a].length; o++) s += " " + e.excludeFilters[a][o].field + ":'" + e.excludeFilters[a][o].value + "'";
                            s += "))"
                        } if (1 == e.query.length && (s += " (or location_type:'Country' location_type:'All Countries') "), s) var i = "(and search_engine:'" + e.search_engine + "' " + s + ")";
                else i = "(and search_engine:'" + e.search_engine + "')";
                r.fq = i;
                var n = {
                    "X-Api-Key": window.cloud_search_key,
                    "Content-Type": "application/json"
                };
                return axios.get(window.cloud_search_url, {
                    params: r,
                    headers: n,
                    cancelToken: this.cloud_search_cancel_token.token
                }).then((t => {
                    var r = [];
                    if (t.data && t.data.hits && t.data.hits.hit)
                        for (var s = 0; s < t.data.hits.hit.length; s++) r.push({
                            canonical_name: t.data.hits.hit[s].fields.canonical_name,
                            country_code: t.data.hits.hit[s].fields.country_code,
                            location_id: t.data.hits.hit[s].fields.location_id,
                            location_name: t.data.hits.hit[s].fields.location_name,
                            location_type: t.data.hits.hit[s].fields.location_type,
                            objectID: t.data.hits.hit[s].id
                        });
                    return {
                        query: e.query,
                        hits: r
                    }
                })).catch((t => axios.isCancel(t) ? {
                    query: e.query,
                    hits: []
                } : this.fallbackLocationSearchSuggest(e, t)))
            },
            fallbackLocationSearchSuggest(e, t) {
                this.cloud_search_cancel_token = axios.CancelToken.source();
                return axios.post("bing" == e.search_engine ? window.bing_locations_search_url : window.google_locations_search_url, {
                    q: e.query,
                    facet_filters: e.facetFilters,
                    error: t
                }, {
                    headers: {
                        "Content-Type": "application/json"
                    },
                    cancelToken: this.cloud_search_cancel_token.token
                }).then((t => {
                    var r = [];
                    if (t.data && t.data.locations)
                        for (var s = 0; s < t.data.locations.length; s++) r.push({
                            canonical_name: t.data.locations[s].canonical_name,
                            country_code: t.data.locations[s].country_code,
                            location_id: t.data.locations[s].location_id,
                            location_name: t.data.locations[s].location_name,
                            location_type: t.data.locations[s].location_type,
                            objectID: t.data.locations[s].id
                        });
                    return {
                        query: e.query,
                        hits: r
                    }
                }))
            },
            locationResultsFormat: e => e.canonical_name + " (" + e.location_type + ")",
            locationTextFormat: e => e.canonical_name + " (" + e.location_type + ")"
        }
    },
    jT = {
        mixins: [DT],
        components: {},
        props: {
            location_country_only: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            country: "",
            id: null,
            language: "",
            language_options: [],
            language_settings: {},
            languages_url: "",
            loading: !0,
            location: "",
            locations_options: [],
            locations_settings: {},
            locations_country: [],
            locations_limit: 10,
            locations_term: "",
            locations_url: "",
            search_type: null,
            facet_filters: [],
            exclude_locations: [],
            exclude_location_countries: [],
            exclude_filters: [],
            location_search_engine: "",
            rebuild_event: "",
            cookie: "",
            location_container_css_class: "",
            location_fav_cookie: "",
            language_container_css_class: "",
            language_fav_cookie: ""
        }),
        computed: {
            placeholder() {
                return this.loading ? "Loading..." : ""
            }
        },
        created() {
            this.id = se(), this.search_type = window.param("search_type"), this.locations_settings = {
                containerCssClass: this.location_container_css_class + " country-dropdown form-control rounded-top-end-md-0 rounded-bottom-end-md-0 rounded-top-start-lg-0 rounded-bottom-start-lg-0 pe-3",
                load: async (e, t) => {
                    this.locations_term = e;
                    var r = {
                        query: e,
                        facets: "*,country_code",
                        facetFilters: this.facet_filters,
                        excludeFilters: this.exclude_filters,
                        hitsPerPage: this.locations_limit,
                        search_engine: this.location_search_engine
                    };
                    this.locationSearchSuggest(r).then((e => {
                        if (e.query == this.locations_term) {
                            let r = e.hits ? e.hits : [];
                            t(this.processLocations(r))
                        } else t()
                    }))
                },
                favCookie: this.location_fav_cookie,
                autocomplete: !0
            }, this.language_settings = {
                containerCssClass: this.language_container_css_class + " language-dropdown form-control rounded-top-start-md-0 rounded-bottom-start-md-0 rounded-top-end-lg-0 rounded-bottom-end-lg-0 pe-3",
                create: !1,
                allowEmptyOption: !1,
                duplicates: !1,
                preload: !0,
                favCookie: this.language_fav_cookie
            }, this.rebuild_event && xe(this.rebuild_event, (e => {
                this.search_type = e, this.build()
            })), this.build()
        },
        methods: {
            async build() {
                this.locations_options = [], this.language_options = [], this.loading = !0, Ce("loading-language", !0), this.facet_filters = [], this.exclude_filters = [], this.location_country_only && this.facet_filters.push([{
                    field: "location_type",
                    value: "Country"
                }, {
                    field: "location_type",
                    value: "All Countries"
                }]);
                let e = null,
                    t = window.param("country");
                e = "" != t ? t : this.$cookies.get(this.cookie) && this.$cookies.get(this.cookie).country ? this.$cookies.get(this.cookie).country : null;
                let r = null,
                    s = window.param("country_location");
                r = "" != s ? s : this.$cookies.get(this.cookie) && this.$cookies.get(this.cookie).location ? this.$cookies.get(this.cookie).location : null;
                let a = null,
                    o = window.param("country_language");
                a = "" != o ? o : this.$cookies.get(this.cookie) && this.$cookies.get(this.cookie).language ? this.$cookies.get(this.cookie).language : null;
                let i = await axios.get(this.locations_url, {
                    params: {
                        country: e,
                        location: r,
                        search_type: this.search_type,
                        country_language: a,
                        tutorial: this.$root.isTutorial()
                    }
                });
                if (i.data) {
                    if (i.data.selected_location) {
                        var n = [{
                            id: i.data.selected_location.location_id,
                            text: i.data.selected_location.location_name,
                            country: i.data.selected_location.country_code,
                            selected: !0
                        }];
                        this.locations_options = n, this.location = i.data.selected_location.location_id
                    }
                    i.data.only_country ? this.locations_country = i.data.only_country.map((e => ({
                        field: "country_code",
                        value: e
                    }))) : this.locations_country = [], this.facet_filters.push(this.locations_country), i.data.exclude_locations ? this.exclude_locations = i.data.exclude_locations.map((e => ({
                        field: "location_id",
                        value: e
                    }))) : this.exclude_locations = [], this.exclude_filters.push(this.exclude_locations), i.data.exclude_location_countries ? this.exclude_location_countries = i.data.exclude_location_countries.map((e => ({
                        field: "country_code",
                        value: e
                    }))) : this.exclude_location_countries = [], this.exclude_filters.push(this.exclude_location_countries), i.data.limit && (this.locations_limit = i.data.limit), this.country = i.data.country, this.language = i.data.selected_language ? i.data.selected_language.id : "en", this.language_options = i.data.languages ? i.data.languages : []
                }
                this.loading = !1, Ce("loading-language", !1)
            },
            processLocations(e) {
                return {
                    results: e.map((e => ({
                        country: e.country_code,
                        html: this.locationResultsFormat(e),
                        id: e.location_id,
                        text: this.locationTextFormat(e)
                    })))
                }
            },
            processParams(e) {
                return e.q = e.term, e.search_type = this.search_type, e
            },
            locationResults: e => e.loading ? "Searching..." : e.html ? e.html : e.text,
            async selectLocations(e) {
                this.country = e.country, this.loading = !0, Ce("loading-language", !0), await this.loadLanguage(), this.loading = !1, Ce("loading-language", !1)
            },
            allowHtml: e => e,
            async loadLanguage() {
                return new Promise((async (e, t) => {
                    try {
                        this.language_options = [];
                        let t = this.language;
                        if (null == t) {
                            let e = window.param("country_language");
                            "" != e && null != e && (t = e)
                        }
                        let r = await axios.get(this.languages_url, {
                            params: {
                                country: this.country,
                                country_language: t,
                                search_type: this.search_type,
                                tutorial: this.$root.isTutorial()
                            }
                        });
                        this.language = r.data && r.data.selected ? r.data.selected.id : "en", this.language_options = r.data && r.data.languages ? r.data.languages : [], e(!0)
                    } catch (r) {
                        t(Error(r))
                    }
                }))
            },
            languageResults: (e, t) => e.html ? e.html : e.text
        }
    },
    OT = {
        class: "row g-0 me-lg-n1px"
    },
    VT = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    HT = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const IT = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/amazon/languages",
            locations_url: "/search/keywords/amazon/locations",
            location_search_engine: "google",
            cookie: "amazon_search_engine",
            location_container_css_class: "amazon-location-select2",
            location_fav_cookie: "amazon_locations_fav",
            language_container_css_class: "amazon-language-select2",
            language_fav_cookie: "amazon_languages_fav"
        }),
        async created() {
            11 != this.search_type && (this.language_fav_cookie = ""), xe("amazon-language-rebuild", (e => {
                this.search_type = e, this.language_settings.favCookie = 11 != this.search_type ? "amazon_languages_fav" : "", this.build()
            }))
        },
        methods: {
            async selectLocations(e) {
                this.country = e.country, Ce("amazon-category-rebuild", this.search_type, this.country), this.loading = !0, Ce("loading-language", !0), await this.loadLanguage(), this.loading = !1, Ce("loading-language", !1)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", OT, [S("div", VT, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = e => o.selectLocations(e)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", HT, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    NT = {
        components: {},
        props: {
            locations_url: {
                type: String,
                required: !1,
                default: ""
            },
            country_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            currency_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            language_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            network_list: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            metrics_location: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            metrics_country: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            metrics_currency: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            metrics_language: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            metrics_network: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            permissions: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            location_country_only: {
                type: Boolean,
                required: !1,
                default: !1
            },
            exclude_locations: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            },
            exclude_location_countries: {
                type: Array,
                required: !1,
                default: function() {
                    return []
                }
            }
        },
        data: () => ({
            current_location_list: [],
            current_country_list: [],
            current_currency_list: [],
            current_language_list: [],
            current_network_list: [],
            current_metrics_location: [],
            current_metrics_country: null,
            current_metrics_currency: null,
            current_metrics_language: [],
            current_metrics_network: null,
            country_settings: {
                containerCssClass: "form-control"
            },
            currency_settings: {
                containerCssClass: "form-control"
            }
        }),
        async mounted() {
            this.current_country_list = this.country_list, this.current_currency_list = this.currency_list, this.current_language_list = this.language_list, this.current_network_list = this.network_list, this.current_metrics_country = this.metrics_country, this.current_metrics_currency = this.metrics_currency, this.current_metrics_language = this.metrics_language, this.current_metrics_network = this.metrics_network, this.metrics_location.forEach(((e, t) => {
                this.current_location_list.push({
                    id: e.location_id,
                    text: e.location_name,
                    country: e.country_code,
                    selected: !0
                }), this.current_metrics_location.push(e.location_id)
            }))
        },
        computed: {
            locations() {
                return this.current_metrics_location ? this.current_metrics_location.toString() : null
            },
            country() {
                return this.current_metrics_country ? this.current_metrics_country.toString() : null
            },
            currency() {
                return this.current_metrics_currency ? this.current_metrics_currency : null
            },
            language() {
                return this.current_metrics_language ? this.current_metrics_language.toString() : null
            },
            network() {
                return this.current_metrics_network ? this.current_metrics_network : null
            }
        },
        methods: {
            locationResults: e => ({
                results: e.locations.map((e => ({
                    id: e.location_id,
                    text: e.location_name
                })))
            }),
            catchError(e) {
                if (this.loading = !1, e.response)
                    if (e.response.data.errors) {
                        var t = e.response.data.errors;
                        for (var r in t) t.hasOwnProperty(r) && t[r].forEach((e => {
                            this.error += "<li>" + e + "</li>"
                        }))
                    } else e.response.data.message ? this.error = e.response.data.message : e.response.statusText ? this.error = e.response.statusText : this.error = e.response.data;
                else e.request ? this.error = e.request : e.message && (this.error = e.message);
                this.error && bsDialogs.create(this.error, [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((e => {}))
            }
        }
    },
    RT = ["value"],
    KT = ["value"],
    JT = {
        key: 2,
        class: "row"
    },
    WT = {
        class: "col-12"
    },
    zT = {
        class: "check-search-volume-amazon-settings-country mb-3"
    },
    YT = {
        class: "form-label check-search-volume-amazon-settings-country-label"
    },
    GT = {
        key: 3,
        class: "row"
    },
    XT = {
        class: "col-12"
    },
    QT = {
        class: "check-search-volume-amazon-settings-currency mb-3"
    },
    ZT = {
        class: "form-label check-search-volume-amazon-settings-currency-label"
    };
const eF = Ue({
    mixins: [NT]
}, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("tom-select");
        return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
            key: 0,
            name: "metrics_country",
            type: "hidden",
            value: e.country
        }, null, 8, RT)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
            key: 1,
            name: "metrics_currency",
            type: "hidden",
            value: e.currency
        }, null, 8, KT)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", JT, [S("div", WT, [S("div", zT, [S("label", YT, v(e.trans.get("Country")), 1), E(i, {
            options: e.current_country_list,
            settings: e.country_settings,
            class: "check-search-volume-amazon-settings-country-value",
            id: "metrics_country_selection",
            "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
            "model-value": e.current_metrics_country,
            placeholder: e.trans.get("Type a country")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", GT, [S("div", XT, [S("div", QT, [S("label", ZT, v(e.trans.get("Currency")), 1), E(i, {
            options: e.current_currency_list,
            settings: e.currency_settings,
            class: "check-search-volume-amazon-settings-currency-value",
            id: "metrics_currency_selection",
            "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
            "model-value": e.current_metrics_currency,
            placeholder: e.trans.get("Type a currency")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
    }]
]);
const tF = Ue({
        mixins: [_p],
        components: {},
        data: () => ({
            container_css_class: "app-store-category-select2",
            categories_url: "/search/keywords/app-store/categories",
            rebuild_event: "app-store-category-rebuild",
            cookie: "app_store_search_engine"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), x(i, {
                disabled: e.loading,
                id: "category_" + e.id,
                options: e.options,
                required: !0,
                settings: e.settings,
                name: "category",
                "model-value": e.category,
                class: w("rounded-top-end-0 rounded-bottom-end-0")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value"])
        }]
    ]),
    rF = {
        class: "search-results-settings my-2"
    },
    sF = {
        class: "search-results-settings-display mx-n1"
    },
    aF = {
        key: 0,
        class: "row"
    },
    oF = {
        class: "col"
    },
    iF = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    nF = {
        key: 1,
        class: "row"
    },
    lF = {
        class: "col-12 col-md-6"
    },
    cF = {
        key: 0,
        class: "search-results-settings-modal-country mb-3"
    },
    _F = {
        class: "form-label search-results-settings-modal-country-label"
    },
    uF = ["value"],
    dF = {
        key: 0,
        class: "col-12 col-md-6"
    },
    mF = {
        class: "search-results-settings-modal-currency mb-3"
    },
    hF = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    pF = {
        key: 2,
        class: "row"
    },
    gF = {
        key: 0,
        class: "col-12 col-md-6"
    },
    yF = {
        key: 1,
        class: "col-12 col-md-6"
    },
    fF = {
        class: "row"
    },
    wF = {
        class: "col"
    },
    bF = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    vF = {
        key: 1,
        class: "row"
    },
    kF = {
        class: "col-12 col-md-6"
    },
    xF = {
        class: "col-12 col-md-6"
    },
    CF = {
        class: "row"
    },
    SF = {
        class: "col-12"
    },
    TF = {
        class: "row"
    },
    FF = {
        class: "col-12"
    },
    qF = ["innerHTML"],
    EF = ["innerHTML"],
    UF = {
        class: "search-results-summary card my-4 bg-light"
    },
    MF = {
        class: "card-body"
    },
    AF = {
        class: "search-results-keywords my-3"
    },
    PF = {
        class: "mb-4"
    };
const LF = Ue({
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                try {
                    var e;
                    this.error = this.list = null;
                    var t = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    e = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify({}))
                    }, {
                        headers: t
                    }), this.has_all_error = e.data.has_all_error, this.has_error = e.data.has_error, this.keywords = e.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = e.data.breakdown_url ? e.data.breakdown_url : null, this.device_breakdown_url = e.data.device_breakdown_url ? e.data.device_breakdown_url : null, this.keywords_payload = e.data.keywords_payload, this.metrics_url = e.data.metrics_url, this.current_scrape_urls = e.data.scrape_urls, await this.metrics(!0)
                } catch (r) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("app-store-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-location-name"),
                c = k("current-metrics-language-name"),
                _ = k("current-metrics-network"),
                u = k("current-filter-search-volume"),
                d = k("current-filter-search-volume-trend"),
                m = k("current-filter-average-cpc"),
                h = k("current-filter-bing-competition"),
                p = k("current-filter-competition"),
                f = k("current-split-filter-keywords"),
                w = k("current-split-filter-negative-keywords"),
                q = k("tom-select"),
                U = k("search-results-settings-modal-search-network"),
                M = k("search-results-settings-modal-currency"),
                A = k("search-results-settings-modal-search-volume"),
                P = k("search-results-settings-modal-search-volume-trend"),
                L = k("search-results-settings-modal-average-cpc"),
                $ = k("search-results-settings-modal-bing-competition"),
                D = k("search-results-settings-modal-competition"),
                j = k("search-results-settings-filter-positive-keywords"),
                O = k("search-results-settings-filter-negative-keywords"),
                V = k("alert-pro-upsell"),
                H = k("search-results-settings-modal-keyword-result-period"),
                I = k("search-results-settings-modal"),
                N = k("search-results-tabs"),
                R = k("has-error"),
                K = k("suggest-page-reload"),
                J = k("google-search-volume-summary"),
                W = k("show-upsell"),
                z = k("google-search-volume-result"),
                Y = k("search-results-table-wrapper"),
                G = k("search-results-no-keyword-found"),
                X = k("has-more"),
                Q = k("dropdown-menu-item-add-basket"),
                Z = k("dropdown-menu-item-divider"),
                ee = k("dropdown-menu-item-export-excel"),
                te = k("dropdown-menu-item-export-csv"),
                re = k("dropdown-menu-item-copy-keywords"),
                se = k("dropdown-menu-item-copy-keywords-search-volume"),
                ae = k("dropdown-menu-item-copy-keywords-all-data"),
                oe = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", rF, [S("div", sF, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_location_name: e.show_current_metrics_location_name,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_location_name", "show_metrics_is_estimated"]), E(c, {
                current_permissions: e.current_permissions,
                show_current_metrics_language_name: e.show_current_metrics_language_name,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_language_name", "show_metrics_is_estimated"]), E(_, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(d, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(m, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(h, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(p, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(f, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(w, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(I, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", aF, [S("div", oF, [S("h5", iF, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", nF, [S("div", lF, [4 == e.current_tab ? (b(), g("div", cF, [S("label", _F, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, uF)])) : T("", !0)]), e.current_permissions.show_currency_settings ? (b(), g("div", dF, [S("div", mF, [S("label", hF, v(e.trans.get("Currency")), 1), E(q, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", pF, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", gF, [E(U, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", yF, [E(M, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", fF, [S("div", wF, [S("h5", bF, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", vF, [S("div", kF, [E(A, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(P, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", xF, [E(L, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x($, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(D, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", CF, [S("div", SF, [E(j, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", TF, [S("div", FF, [E(O, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(V, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, qF)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, EF)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(H, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(N, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(R, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(K, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", UF, [S("div", MF, [E(J, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), o.show_upsell && 1 == e.current_tab ? (b(), x(W, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"])) : T("", !0)])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", AF, [E(Y, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(z, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(G, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [S("h4", PF, v(e.trans.get("Sorry, App Store does not provide any keyword suggestions for your query")), 1)])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(X, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(oe, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(Q, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(Z, {
                    key: 1
                })) : T("", !0), E(ee, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(te, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z), E(re, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(se, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(ae, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    BF = {
        class: "row g-0 me-lg-n1px"
    },
    $F = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const DF = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "app-store-language-select2",
            languages_url: "/search/keywords/app-store/languages",
            rebuild_event: "app-store-language-rebuild",
            cookie: "app_store_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", BF, [S("div", $F, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    jF = {
        class: "row g-0 me-lg-n1px"
    },
    OF = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    VF = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const HF = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/app-store/languages",
            locations_url: "/search/keywords/app-store/locations",
            location_search_engine: "google",
            rebuild_event: "app-store-language-rebuild",
            cookie: "app_store_search_engine",
            location_container_css_class: "app-store-location-select2",
            location_fav_cookie: "app_store_locations_fav",
            language_container_css_class: "app-store-language-select2",
            language_fav_cookie: "app_store_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", jF, [S("div", OF, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", VF, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    IF = ["value"],
    NF = ["value"],
    RF = {
        key: 2,
        class: "row"
    },
    KF = {
        class: "col-12"
    },
    JF = {
        class: "check-search-volume-settings-country mb-3"
    },
    WF = {
        class: "form-label check-search-volume-settings-country-label"
    },
    zF = {
        key: 3,
        class: "row"
    },
    YF = {
        class: "col-12"
    },
    GF = {
        class: "check-search-volume-settings-currency mb-3"
    },
    XF = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const QF = Ue({
    mixins: [NT]
}, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("tom-select");
        return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
            key: 0,
            name: "metrics_country",
            type: "hidden",
            value: e.country
        }, null, 8, IF)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
            key: 1,
            name: "metrics_currency",
            type: "hidden",
            value: e.currency
        }, null, 8, NF)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", RF, [S("div", KF, [S("div", JF, [S("label", WF, v(e.trans.get("Country")), 1), E(i, {
            options: e.current_country_list,
            settings: e.country_settings,
            class: "check-search-volume-settings-country-value",
            id: "metrics_country_selection",
            "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
            "model-value": e.current_metrics_country,
            placeholder: e.trans.get("Type a country")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", zF, [S("div", YF, [S("div", GF, [S("label", XF, v(e.trans.get("Currency")), 1), E(i, {
            options: e.current_currency_list,
            settings: e.currency_settings,
            class: "check-search-volume-settings-currency-value",
            id: "metrics_currency_selection",
            "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
            "model-value": e.current_metrics_currency,
            placeholder: e.trans.get("Type a currency")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
    }]
]);
const ZF = Ue({
        mixins: [_p],
        components: {},
        props: ["preoptions"],
        data() {
            return {
                container_css_class: "bing-category-select2",
                rebuild_event: "bing-category-rebuild",
                cookie: "bing_search_engine",
                options_data: this.preoptions
            }
        },
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), x(i, {
                disabled: e.loading || 2 == e.search_type,
                id: "category_" + e.id,
                options: e.options,
                required: !0,
                settings: e.settings,
                name: "category",
                "model-value": e.category,
                class: w("rounded-top-end-0 rounded-bottom-end-0")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value"])
        }]
    ]),
    eq = {
        components: {
            "pie-chart": hp
        },
        props: {
            loading: {
                type: Boolean,
                required: !0,
                default: !1
            },
            show_pie_chart: {
                type: Boolean,
                required: !0,
                default: !1
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            show_settings_button: {
                type: Boolean,
                required: !1,
                default: !0
            },
            summaries: {
                type: [Object, Array],
                required: !0,
                default: function() {
                    return {}
                }
            },
            pie_summaries: {
                type: [Object, Array],
                required: !0,
                default: function() {
                    return {}
                }
            },
            current_permissions: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            current_metrics_currency: {
                type: String,
                required: !1,
                default: ""
            }
        },
        data: () => ({}),
        mounted() {
            this.initPopover()
        },
        updated() {
            this.initPopover()
        },
        beforeUnmount() {
            this.$nextTick((() => {
                this.popoverList.forEach((e => {
                    e.dispose()
                }))
            }))
        },
        computed: {},
        methods: {
            initPopover() {
                this.$nextTick((() => {
                    var e = document.querySelectorAll('[data-bs-toggle="popover-sv-summary"]');
                    this.popoverList = [...e].map((e => new bootstrap.Popover(e, {
                        sanitize: !1,
                        html: !0
                    })))
                }))
            }
        }
    },
    tq = {
        class: "row row-cols-2 row-cols-md-3 row-cols-lg-6 row-cols-xl-6"
    },
    rq = {
        class: "col my-1"
    },
    sq = {
        key: 0,
        class: "search-results-summary-unique-keywords-label"
    },
    aq = {
        key: 1,
        class: "search-results-summary-unique-keywords-label"
    },
    oq = {
        key: 2,
        class: "search-results-summary-unique-keywords-label"
    },
    iq = {
        key: 3,
        class: "search-results-summary-unique-keywords-label"
    },
    nq = {
        key: 4,
        class: "search-results-summary-unique-keywords-label"
    },
    lq = {
        key: 5,
        class: "search-results-summary-unique-keywords-label"
    },
    cq = {
        key: 6,
        class: "search-results-summary-unique-keywords-label"
    },
    _q = {
        class: "search-results-summary-unique-keywords-value h3"
    },
    uq = {
        key: 0
    },
    dq = {
        key: 1
    },
    mq = {
        class: "col my-1"
    },
    hq = {
        key: 0
    },
    pq = {
        class: "search-results-summary-total-search-volume-label"
    },
    gq = ["data-bs-content"],
    yq = {
        key: 0,
        class: "search-results-summary-total-search-volume-value h3"
    },
    fq = {
        key: 0
    },
    wq = {
        key: 1,
        class: "text-muted"
    },
    bq = ["data-bs-content"],
    vq = {
        key: 1,
        class: "search-results-summary-search-volume-value text-blur h3"
    },
    kq = {
        class: "col my-1"
    },
    xq = {
        key: 0
    },
    Cq = {
        class: "search-results-summary-average-trend-label"
    },
    Sq = ["data-bs-content"],
    Tq = {
        key: 0,
        class: "search-results-summary-average-trend-value h3"
    },
    Fq = {
        key: 0
    },
    qq = {
        key: 0,
        class: "text-success"
    },
    Eq = S("i", {
        class: "bi bi-arrow-up"
    }, null, -1),
    Uq = {
        key: 1,
        class: "text-danger"
    },
    Mq = S("i", {
        class: "bi bi-arrow-down"
    }, null, -1),
    Aq = {
        key: 2
    },
    Pq = {
        key: 0
    },
    Lq = {
        key: 1,
        class: "text-muted"
    },
    Bq = ["data-bs-content"],
    $q = {
        key: 1,
        class: "search-results-summary-average-trend-value text-blur h3"
    },
    Dq = {
        key: 0,
        class: "col my-1"
    },
    jq = {
        key: 0
    },
    Oq = {
        class: "search-results-summary-average-cpc-label"
    },
    Vq = ["data-bs-content"],
    Hq = {
        key: 0,
        class: "search-results-summary-average-cpc-value h3"
    },
    Iq = {
        key: 0
    },
    Nq = {
        key: 1,
        class: "text-muted"
    },
    Rq = ["data-bs-content"],
    Kq = {
        key: 1,
        class: "search-results-summary-average-cpc-value text-blur h3"
    },
    Jq = {
        class: "col my-1"
    },
    Wq = {
        key: 0
    },
    zq = {
        class: "search-results-summary-average-competition-label"
    },
    Yq = ["data-bs-content"],
    Gq = {
        key: 0,
        class: "search-results-summary-average-competition-value h3"
    },
    Xq = {
        key: 0
    },
    Qq = {
        key: 0
    },
    Zq = {
        key: 1
    },
    eE = {
        key: 1,
        class: "text-muted"
    },
    tE = ["data-bs-content"],
    rE = {
        key: 1,
        class: "search-results-summary-average-competition-value text-blur h3"
    },
    sE = {
        key: 1,
        class: "col my-1"
    },
    aE = {
        class: "col my-1"
    },
    oE = {
        key: 0
    },
    iE = {
        class: "search-results-settings-modal btn btn-outline-primary float-lg-end",
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        type: "button"
    },
    nE = S("i", {
        class: "bi bi-gear me-1"
    }, null, -1),
    lE = {
        key: 0,
        class: "row mt-2"
    };
const cE = Ue(eq, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("bar-chart"),
                n = k("pie-chart");
            return b(), g("div", null, [S("div", tq, [S("div", rq, [2 == r.current_tab || 5 == r.current_tab ? (b(), g("div", sq, v(e.trans.get("Total Related Keywords")), 1)) : 3 == r.current_tab ? (b(), g("div", aq, v(e.trans.get("Total Questions")), 1)) : 6 == r.current_tab ? (b(), g("div", oq, v(e.trans.get("Total Prepositions")), 1)) : 7 == r.current_tab ? (b(), g("div", iq, v(e.trans.get("Total Hashtags")), 1)) : 10 == r.current_tab ? (b(), g("div", nq, v(e.trans.get("Total People")), 1)) : 11 == r.current_tab ? (b(), g("div", lq, v(e.trans.get("Total Products")), 1)) : (b(), g("div", cq, v(e.trans.get("Total Keywords")), 1)), S("div", _q, [r.summaries.search_total_keywords_format ? (b(), g("span", uq, v(r.summaries.search_total_keywords_format), 1)) : (b(), g("span", dq, v(e.$filters.digit(r.summaries.total_keywords)), 1))])]), S("div", mq, [r.current_permissions.show_search_volume_column ? (b(), g("div", hq, [S("div", pq, [A(v(e.trans.get("Total Search Volume")) + " ", 1), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Total Search Volume is the sum of Search Volume values for keywords that were found."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, gq)]), r.current_permissions.show_search_volume_data ? (b(), g("div", yq, [r.summaries.search_volume_format ? (b(), g("div", fq, v(r.summaries.search_volume_format), 1)) : (b(), g("div", wq, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Bing does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, bq)]))])) : (b(), g("div", vq, "88,888"))])) : T("", !0)]), S("div", kq, [r.current_permissions.show_search_volume_column ? (b(), g("div", xq, [S("div", Cq, [A(v(e.trans.get("Average Trend")) + " ", 1), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Average Trend is the average of Trend values for keywords that were found."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Sq)]), r.current_permissions.show_search_volume_data ? (b(), g("div", Tq, [r.summaries.search_volume_trend_format ? (b(), g("div", Fq, [r.summaries.search_volume_trend > 0 ? (b(), g("span", qq, [Eq, A(" " + v(r.summaries.search_volume_trend_format), 1)])) : r.summaries.search_volume_trend < 0 ? (b(), g("span", Uq, [Mq, A(" " + v(r.summaries.search_volume_trend_format), 1)])) : (b(), g("span", Aq, [0 == r.summaries.search_volume_trend ? (b(), g("span", Pq)) : T("", !0), A(" " + v(r.summaries.search_volume_trend_format), 1)]))])) : (b(), g("div", Lq, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Bing does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Bq)]))])) : (b(), g("div", $q, "88%"))])) : T("", !0)]), 12 != r.current_tab ? (b(), g("div", Dq, [r.current_permissions.show_cpc_column ? (b(), g("div", jq, [S("div", Oq, [A(v(e.trans.get("Average CPC")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g(y, {
                key: 0
            }, [A("(" + v(r.current_metrics_currency) + ")", 1)], 64)) : T("", !0), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Average CPC is the average of CPC values for keywords that were found."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Vq)]), r.current_permissions.show_cpc_data ? (b(), g("div", Hq, [r.summaries.average_cpc_format ? (b(), g("div", Iq, v(r.summaries.average_cpc_format), 1)) : (b(), g("div", Nq, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Bing does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, Rq)]))])) : (b(), g("div", Kq, "8.88"))])) : T("", !0)])) : T("", !0), S("div", Jq, [r.current_permissions.show_competition_column ? (b(), g("div", Wq, [S("div", zq, [A(v(e.trans.get("Average Competition")) + " ", 1), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Average Competition is the average of Competition values for keywords that were found."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, Yq)]), r.current_permissions.show_competition_data ? (b(), g("div", Gq, [r.summaries.competition_format ? (b(), g("div", Xq, ["" !== r.summaries.competition_class && null !== r.summaries.competition_class ? (b(), g("span", Qq, [S("span", {
                class: w(r.summaries.competition_class)
            }, v(r.summaries.competition_format), 3)])) : (b(), g("span", Zq, v(r.summaries.competition_format), 1))])) : (b(), g("div", eE, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Sorry, Bing does not provide data for these keywords at the moment."),
                "data-bs-toggle": "popover-sv-summary",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, tE)]))])) : (b(), g("div", rE, "8.88"))])) : T("", !0)]), 12 == r.current_tab ? (b(), g("div", sE)) : T("", !0), S("div", aE, [r.show_settings_button ? (b(), g("div", oE, [S("button", iE, [nE, S("span", null, v(e.trans.get("Settings")), 1)])])) : T("", !0)])]), r.current_permissions.show_search_volume_data && r.summaries.search_volume_trend_data ? (b(), g("div", lE, [S("div", {
                class: w(r.show_pie_chart ? "col-lg-9 col-md-8 col-sm-12" : "col-lg-12")
            }, [E(i, {
                styles: r.show_pie_chart ? {
                    position: "relative",
                    margin: "auto",
                    height: "28vh"
                } : {
                    position: "relative",
                    margin: "auto",
                    height: "24vh"
                },
                maintainAspectRatio: !1,
                charttitle: r.summaries.search_volume_trend_title,
                chartlabels: r.summaries.search_volume_trend_labels,
                chartdata: r.summaries.search_volume_trend_data
            }, null, 8, ["styles", "charttitle", "chartlabels", "chartdata"])], 2), r.show_pie_chart ? (b(), g("div", {
                key: 0,
                class: w(r.show_pie_chart ? "col-lg-3 col-md-4 d-none d-lg-block d-md-block" : "")
            }, [E(n, {
                charttitle: "",
                chartlabels: r.pie_summaries.search_volume_trend_labels,
                chartdata: r.pie_summaries.search_volume_trend_data
            }, null, 8, ["chartlabels", "chartdata"])], 2)) : T("", !0)])) : T("", !0)])
        }]
    ]),
    _E = {
        components: {
            "keyword-column": wy
        },
        props: {
            loading: {
                type: Boolean,
                required: !0,
                default: !1
            },
            keyword: {
                type: String,
                required: !0,
                default: ""
            },
            search_engine: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            current_sub_tab: {
                type: [String, Number],
                required: !1,
                default: ""
            },
            current_permissions: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            routes: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            show_upsell: {
                type: Boolean,
                required: !1,
                default: !1
            },
            upsell_message: {
                type: String,
                required: !0,
                default: ""
            },
            allow_keyword_basket: {
                type: Boolean,
                required: !1,
                default: !1
            },
            has_metrics: {
                type: Boolean,
                required: !1,
                default: !1
            },
            add_basket: {
                type: Function,
                required: !0,
                default: function() {}
            },
            delete_basket: {
                type: Function,
                required: !1,
                default: function() {}
            },
            keywords: {
                type: Array,
                required: !0,
                default: function() {
                    return []
                }
            },
            all_keywords: {
                type: Array,
                required: !0,
                default: function() {
                    return []
                }
            },
            sort_by: {
                type: String,
                required: !0,
                default: ""
            },
            sort_direction: {
                type: String,
                required: !0,
                default: ""
            },
            current_metrics_currency: {
                type: String,
                required: !1,
                default: ""
            },
            current_filter_currency: {
                type: String,
                required: !1,
                default: ""
            },
            current_free_results: {
                type: Number,
                required: !0,
                default: ""
            },
            search_engine_name: {
                type: String,
                required: !0,
                default: ""
            },
            user_is_paid: {
                type: Boolean,
                required: !1,
                default: !1
            },
            device_breakdown_data: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            }
        },
        data: () => ({
            selected: [],
            selected_all: !1,
            devices_breakdown: null
        }),
        mounted() {
            this.initPopover()
        },
        updated() {
            this.initPopover()
        },
        beforeUnmount() {
            this.$nextTick((() => {
                this.popoverList.forEach((e => {
                    e.dispose()
                }))
            }))
        },
        computed: {},
        watch: {
            selected: {
                handler(e, t) {
                    this.all_keywords.length > 0 && e.length >= this.all_keywords.length ? this.selected_all = !0 : this.selected_all = !1
                },
                deep: !0
            },
            keywords: {
                handler(e, t) {
                    e.length <= 0 && (this.selected = [], this.selected_all = !1)
                },
                deep: !0
            }
        },
        methods: {
            is_selected(e) {
                if (this.loading) return !1;
                if (12 == this.search_engine) var t = e.keyword_id;
                else t = e.keyword_source;
                return this.selected.toString().indexOf(t) >= 0
            },
            change_select_keyword(e, t) {
                this.loading || (t.target.checked ? this.$emit("select", e) : this.$emit("deselect", e))
            },
            toggle_select_keyword(e) {
                if (this.loading) return;
                this.selected.indexOf(e) >= 0 ? (this.selected = this.selected.filter((t => t !== e)), this.$emit("deselect", e)) : (this.selected.push(e), this.$emit("select", e))
            },
            toggle_all_keyword(e) {
                this.loading || (e.target.checked ? (this.selected = this.all_keywords, this.$emit("all", !0)) : (this.selected = [], this.$emit("all", !1)))
            },
            sort(e) {
                this.$emit("sort", e)
            },
            embed(e, t) {
                this.$emit("embed", e, t)
            },
            getPageProIndex() {
                let e = "";
                return e = "object" == typeof this.routes.page_pro_index ? this.routes.page_pro_index[this.current_sub_tab] ? this.routes.page_pro_index[this.current_sub_tab] : this.routes.page_pro_index[0] : this.routes.page_pro_index, e + "#pricing"
            },
            initPopover() {
                this.$nextTick((() => {
                    var e = document.querySelectorAll('[data-bs-toggle="popover-sv-result"]');
                    this.popoverList = [...e].map((e => new bootstrap.Popover(e, {
                        sanitize: !1,
                        html: !0
                    })))
                }))
            },
            getColspan() {
                var e = this.current_permissions.show_location_column + this.current_permissions.show_language_column + this.current_permissions.show_relative_popularity_column + this.current_permissions.show_search_frequency_increase_column + this.current_permissions.show_network_column + this.current_permissions.show_posts_column + this.current_permissions.show_following_count_column + this.current_permissions.show_follower_count_column + this.current_permissions.show_heart_count_column + this.current_permissions.show_video_count_column + this.current_permissions.show_digg_count_column + this.current_permissions.show_view_count_column + this.current_permissions.show_search_volume_column + this.current_permissions.show_search_volume_column + this.current_permissions.show_search_volume_column + this.current_permissions.show_cpc_column + this.current_permissions.show_low_top_page_bid_column + this.current_permissions.show_high_top_page_bid_column + this.current_permissions.show_competition_column + this.current_permissions.show_username_column + this.current_permissions.show_full_name_column + this.current_permissions.show_is_private_column + this.current_permissions.show_is_verified_column + this.current_permissions.show_timestamp_column;
                return parseInt(e)
            }
        }
    },
    uE = {
        class: "search-results-table table table-hover"
    },
    dE = {
        class: "col-checkbox w-1"
    },
    mE = ["disabled"],
    hE = {
        class: "col-keywords"
    },
    pE = {
        key: 0
    },
    gE = {
        key: 0
    },
    yE = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    fE = {
        key: 1
    },
    wE = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    bE = {
        key: 1,
        class: "table-head"
    },
    vE = {
        key: 2,
        class: "table-head"
    },
    kE = {
        key: 3,
        class: "table-head"
    },
    xE = {
        key: 0
    },
    CE = ["data-bs-content"],
    SE = ["data-bs-content"],
    TE = ["data-bs-content"],
    FE = ["data-bs-content"],
    qE = {
        key: 0,
        class: "col-location"
    },
    EE = {
        key: 0
    },
    UE = {
        key: 0
    },
    ME = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    AE = {
        key: 1
    },
    PE = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    LE = {
        class: "table-head"
    },
    BE = {
        key: 1,
        class: "col-language"
    },
    $E = {
        key: 0
    },
    DE = {
        key: 0
    },
    jE = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    OE = {
        key: 1
    },
    VE = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    HE = {
        class: "table-head"
    },
    IE = {
        key: 2,
        class: "col-network"
    },
    NE = {
        key: 0
    },
    RE = {
        key: 0
    },
    KE = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    JE = {
        key: 1
    },
    WE = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    zE = {
        class: "table-head"
    },
    YE = {
        key: 3,
        class: "col-search-volume"
    },
    GE = {
        key: 0
    },
    XE = {
        key: 0
    },
    QE = {
        key: 0
    },
    ZE = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    eU = {
        key: 1
    },
    tU = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    rU = {
        class: "table-head"
    },
    sU = ["data-bs-content"],
    aU = {
        key: 4,
        class: "col-trend d-none d-md-table-cell"
    },
    oU = {
        key: 0
    },
    iU = {
        key: 0
    },
    nU = {
        key: 0
    },
    lU = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    cU = {
        key: 1
    },
    _U = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    uU = {
        class: "table-head"
    },
    dU = ["data-bs-content"],
    mU = ["data-bs-content"],
    hU = {
        key: 5,
        class: "col-trend-chart d-none d-md-table-cell"
    },
    pU = {
        key: 6,
        class: "col-average-cpc d-none d-md-table-cell"
    },
    gU = {
        key: 0
    },
    yU = {
        key: 0
    },
    fU = {
        key: 0
    },
    wU = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    bU = {
        key: 1
    },
    vU = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    kU = {
        class: "table-head"
    },
    xU = ["data-bs-content"],
    CU = {
        key: 7,
        class: "col-competition d-none d-md-table-cell"
    },
    SU = {
        key: 0
    },
    TU = {
        key: 0
    },
    FU = {
        key: 0
    },
    qU = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    EU = {
        key: 1
    },
    UU = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    MU = {
        class: "table-head"
    },
    AU = ["data-bs-content"],
    PU = {
        key: 8,
        class: "col-last-updated"
    },
    LU = {
        key: 0
    },
    BU = {
        key: 0
    },
    $U = [S("i", {
        class: "bi bi-arrow-up"
    }, null, -1)],
    DU = {
        key: 1
    },
    jU = [S("i", {
        class: "bi bi-arrow-down"
    }, null, -1)],
    OU = {
        class: "table-head"
    },
    VU = {
        key: 0
    },
    HU = {
        key: 0,
        class: "w-0 p-0 m-0"
    },
    IU = S("td", {
        colspan: "2",
        class: "w-0 p-0 m-0 border-0"
    }, null, -1),
    NU = ["colspan"],
    RU = {
        class: "position-relative d-none d-md-block"
    },
    KU = {
        class: "alert-pro-upsell alert-pro-upsell-keyword-results position-absolute w-100"
    },
    JU = {
        class: "card mt-2 pb-2 text-center shadow"
    },
    WU = {
        class: "card-body"
    },
    zU = S("h4", {
        class: "card-title"
    }, " 🚀 Keyword Tool Pro ", -1),
    YU = {
        class: "card-text lead fw-normal"
    },
    GU = ["innerHTML"],
    XU = ["innerHTML"],
    QU = ["href"],
    ZU = S("i", {
        class: "bi bi-box-arrow-in-right me-1"
    }, null, -1),
    eM = ["innerHTML"],
    tM = {
        class: "col-checkbox w-1"
    },
    rM = ["id", "value", "onChange", "disabled", "data-value"],
    sM = ["id", "value", "onChange", "disabled"],
    aM = {
        class: "col-keyword p-0"
    },
    oM = {
        key: 0,
        class: "col-location"
    },
    iM = {
        key: 0,
        class: "badge bg-primary"
    },
    nM = {
        key: 1,
        class: "text-secondary"
    },
    lM = ["data-bs-content"],
    cM = {
        key: 1,
        class: "text-blur"
    },
    _M = {
        key: 0
    },
    uM = {
        key: 1,
        class: "text-blur"
    },
    dM = {
        key: 1
    },
    mM = {
        key: 1,
        class: "col-language"
    },
    hM = {
        key: 0,
        class: "badge bg-secondary"
    },
    pM = {
        key: 1,
        class: "text-secondary"
    },
    gM = ["data-bs-content"],
    yM = {
        key: 1,
        class: "text-blur"
    },
    fM = {
        key: 0
    },
    wM = {
        key: 1,
        class: "text-blur"
    },
    bM = {
        key: 1
    },
    vM = {
        key: 2,
        class: "col-network"
    },
    kM = {
        key: 0
    },
    xM = {
        key: 1,
        class: "text-secondary"
    },
    CM = ["data-bs-content"],
    SM = {
        key: 1,
        class: "text-blur"
    },
    TM = {
        key: 0
    },
    FM = {
        key: 1,
        class: "text-blur"
    },
    qM = {
        key: 1
    },
    EM = {
        key: 3,
        class: "col-search-volume"
    },
    UM = {
        key: 0
    },
    MM = {
        key: 1,
        class: "text-secondary"
    },
    AM = ["data-bs-content"],
    PM = {
        key: 1,
        class: "text-blur"
    },
    LM = {
        key: 0
    },
    BM = {
        key: 1,
        class: "text-blur"
    },
    $M = {
        key: 1
    },
    DM = {
        key: 4,
        class: "col-trend d-none d-md-table-cell"
    },
    jM = {
        key: 0,
        class: "text-nowrap"
    },
    OM = {
        key: 0,
        class: "bi bi-arrow-up"
    },
    VM = {
        key: 1,
        class: "bi bi-arrow-down"
    },
    HM = {
        key: 1,
        class: "text-secondary"
    },
    IM = {
        key: 0,
        class: "text-blur"
    },
    NM = ["data-bs-content"],
    RM = {
        key: 1,
        class: "text-blur"
    },
    KM = {
        key: 0
    },
    JM = {
        key: 1,
        class: "text-blur"
    },
    WM = {
        key: 1
    },
    zM = {
        class: "col-trend-chart py-0 d-none d-md-table-cell"
    },
    YM = {
        key: 5,
        class: "col-average-cpc d-none d-md-table-cell"
    },
    GM = {
        key: 0
    },
    XM = {
        key: 1,
        class: "text-secondary"
    },
    QM = ["data-bs-content"],
    ZM = {
        key: 1,
        class: "text-blur"
    },
    eA = {
        key: 0
    },
    tA = {
        key: 1,
        class: "text-blur"
    },
    rA = {
        key: 1
    },
    sA = {
        key: 6,
        class: "col-competition d-none d-md-table-cell"
    },
    aA = {
        key: 1
    },
    oA = {
        key: 1,
        class: "text-secondary"
    },
    iA = ["data-bs-content"],
    nA = {
        key: 1,
        class: "text-blur"
    },
    lA = {
        key: 0
    },
    cA = {
        key: 1,
        class: "text-blur"
    },
    _A = {
        key: 1
    },
    uA = {
        key: 7,
        class: "col-last-updated"
    },
    dA = {
        key: 0
    },
    mA = {
        key: 1,
        class: "text-secondary"
    },
    hA = ["data-bs-content"],
    pA = {
        key: 1,
        class: "text-blur"
    },
    gA = {
        key: 0
    },
    yA = {
        key: 1,
        class: "text-blur"
    },
    fA = {
        key: 1
    };
const wA = Ue(_E, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("keyword-column"),
                n = k("chart-js");
            return b(), g("div", null, [S("table", uE, [S("thead", null, [S("tr", null, [S("th", dE, [F(S("input", {
                type: "checkbox",
                "onUpdate:modelValue": t[0] || (t[0] = e => a.selected_all = e),
                onClick: t[1] || (t[1] = e => o.toggle_all_keyword(e)),
                disabled: r.loading || r.all_keywords.length <= 0
            }, null, 8, mE), [
                [q, a.selected_all]
            ])]), S("th", hE, [S("span", {
                class: "cursor-pointer",
                onClick: t[2] || (t[2] = e => o.sort("keywords"))
            }, ["keywords" == r.sort_by ? (b(), g("span", pE, ["Asc" == r.sort_direction ? (b(), g("span", gE, yE)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", fE, wE)) : T("", !0)])) : T("", !0), 10 == r.current_tab ? (b(), g("span", bE, v(e.trans.get("People")), 1)) : 7 == r.current_tab ? (b(), g("span", vE, v(e.trans.get("Hashtags")), 1)) : (b(), g("span", kE, v(e.trans.get("Keywords")), 1))]), 4 != r.current_tab ? (b(), g("span", xE, [2 == r.current_tab ? (b(), g("i", {
                key: 0,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Related keywords are pulled from Bing Ads Keyword Planner."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, CE)) : 10 == r.current_tab ? (b(), g("i", {
                key: 1,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Results are pulled from the Instagram autocomplete. Results are generated by placing different search terms into the search box of Instagram."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, SE)) : 7 == r.current_tab ? (b(), g("i", {
                key: 2,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Hashtags are pulled from the :search_engine_name autocomplete. Hashtags are generated by placing different search terms into the search box of :search_engine_name.", {
                    search_engine_name: r.search_engine_name
                }),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, TE)) : 8 == r.current_tab || 9 == r.current_tab ? (b(), g(y, {
                key: 3
            }, [], 64)) : 12 == r.current_tab ? (b(), g(y, {
                key: 4
            }, [], 64)) : (b(), g("i", {
                key: 5,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Keywords are pulled from the :search_engine_name autocomplete. Keywords are generated by placing different search terms into the search box of :search_engine_name.", {
                    search_engine_name: r.search_engine_name
                }),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, FE))])) : T("", !0)]), r.current_permissions.show_location_column ? (b(), g("th", qE, [S("span", {
                class: "cursor-pointer",
                onClick: t[3] || (t[3] = e => r.current_permissions.show_location_data ? o.sort("location") : "")
            }, ["location" == r.sort_by ? (b(), g("span", EE, ["Asc" == r.sort_direction ? (b(), g("span", UE, ME)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", AE, PE)) : T("", !0)])) : T("", !0), S("span", LE, v(e.trans.get("Location")), 1)])])) : T("", !0), r.current_permissions.show_language_column ? (b(), g("th", BE, [S("span", {
                class: "cursor-pointer",
                onClick: t[4] || (t[4] = e => r.current_permissions.show_language_data ? o.sort("language") : "")
            }, ["language" == r.sort_by ? (b(), g("span", $E, ["Asc" == r.sort_direction ? (b(), g("span", DE, jE)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", OE, VE)) : T("", !0)])) : T("", !0), S("span", HE, v(e.trans.get("Language")), 1)])])) : T("", !0), r.current_permissions.show_network_column ? (b(), g("th", IE, [S("span", {
                class: "cursor-pointer",
                onClick: t[5] || (t[5] = e => r.current_permissions.show_network_data ? o.sort("network") : "")
            }, ["network" == r.sort_by ? (b(), g("span", NE, ["Asc" == r.sort_direction ? (b(), g("span", RE, KE)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", JE, WE)) : T("", !0)])) : T("", !0), S("span", zE, v(e.trans.get("Network")), 1)])])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("th", YE, [S("span", {
                class: "cursor-pointer",
                onClick: t[6] || (t[6] = e => r.current_permissions.show_search_volume_data ? o.sort("searchVolume") : "")
            }, [r.current_permissions.show_search_volume_data ? (b(), g("span", GE, ["searchVolume" == r.sort_by ? (b(), g("span", XE, ["Asc" == r.sort_direction ? (b(), g("span", QE, ZE)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", eU, tU)) : T("", !0)])) : T("", !0)])) : T("", !0), S("span", rU, v(e.trans.get("Search Volume")), 1)]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Search Volume shows how many people search for the keyword per month. It helps to understand how popular the keyword is."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, sU)])])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("th", aU, [S("span", {
                class: "cursor-pointer",
                onClick: t[7] || (t[7] = e => r.current_permissions.show_search_volume_data ? o.sort("searchVolumeTrend") : "")
            }, [r.current_permissions.show_search_volume_data ? (b(), g("span", oU, ["searchVolumeTrend" == r.sort_by ? (b(), g("span", iU, ["Asc" == r.sort_direction ? (b(), g("span", nU, lU)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", cU, _U)) : T("", !0)])) : T("", !0)])) : T("", !0), S("span", uU, v(e.trans.get("Trend")), 1)]), S("span", null, [r.current_permissions.use_alternate_data_source ? (b(), g("i", {
                key: 0,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Trend shows how the monthly search volume for a keyword has changed over the last 24 months."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, dU)) : (b(), g("i", {
                key: 1,
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Trend shows how the monthly search volume for a keyword has changed over the last 12 months."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, mU))])])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("th", hU)) : T("", !0), r.current_permissions.show_cpc_column ? (b(), g("th", pU, [S("span", {
                class: "cursor-pointer",
                onClick: t[8] || (t[8] = e => r.current_permissions.show_cpc_data ? o.sort("averageCpc") : "")
            }, [r.current_permissions.show_cpc_data ? (b(), g("span", gU, ["averageCpc" == r.sort_by ? (b(), g("span", yU, ["Asc" == r.sort_direction ? (b(), g("span", fU, wU)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", bU, vU)) : T("", !0)])) : T("", !0)])) : T("", !0), S("span", kU, [A(v(e.trans.get("Average CPC")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g(y, {
                key: 0
            }, [A("(" + v(r.current_metrics_currency) + ")", 1)], 64)) : T("", !0)])]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Cost-Per-Click (CPC) is an estimated sum of money that advertisers pay to bid on this keyword on Bing Ads. It helps to identify how lucrative the keyword is."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, xU)])])) : T("", !0), r.current_permissions.show_competition_column ? (b(), g("th", CU, [S("span", {
                class: "cursor-pointer",
                onClick: t[9] || (t[9] = e => r.current_permissions.show_competition_data ? o.sort("competition") : "")
            }, [r.current_permissions.show_competition_data ? (b(), g("span", SU, ["competition" == r.sort_by ? (b(), g("span", TU, ["Asc" == r.sort_direction ? (b(), g("span", FU, qU)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", EU, UU)) : T("", !0)])) : T("", !0)])) : T("", !0), S("span", MU, v(e.trans.get("Competition")), 1)]), S("span", null, [S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "data-bs-content": e.trans.get("Competition shows how many advertisers are bidding on the keyword relative to all the keywords across Bing. It helps to understand how competitive the keyword is. The table below shows the competition metric breakdown."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, null, 8, AU)])])) : T("", !0), r.current_permissions.show_timestamp_column ? (b(), g("th", PU, [S("span", {
                class: "cursor-pointer",
                onClick: t[10] || (t[10] = e => r.current_permissions.show_timestamp_data ? o.sort("timestamp") : "")
            }, ["timestamp" == r.sort_by ? (b(), g("span", LU, ["Asc" == r.sort_direction ? (b(), g("span", BU, $U)) : T("", !0), "Desc" == r.sort_direction ? (b(), g("span", DU, jU)) : T("", !0)])) : T("", !0), S("span", OU, v(e.trans.get("Last Updated")), 1)])])) : T("", !0)])]), r.keywords.length ? (b(), g("tbody", VU, [(b(!0), g(y, null, f(r.keywords, ((s, l) => (b(), g(y, {
                key: l
            }, [r.show_upsell && r.keywords.length >= r.current_free_results + 5 && l == r.current_free_results && !r.current_permissions.show_search_volume_data && (1 == r.current_tab || 6 == r.current_tab || 3 == r.current_tab || 7 == r.current_tab || 8 == r.current_tab || 9 == r.current_tab || 12 == r.current_tab) ? (b(), g("tr", HU, [IU, S("td", {
                class: "w-0 p-0 m-0 border-0",
                colspan: o.getColspan()
            }, [S("div", RU, [S("div", KU, [S("div", JU, [S("div", WU, [zU, S("div", YU, [S("p", {
                class: "mb-0",
                innerHTML: e.trans.get("Do you need this information?")
            }, null, 8, GU), S("p", {
                innerHTML: r.upsell_message
            }, null, 8, XU)]), S("a", {
                href: o.getPageProIndex(),
                target: "_blank",
                rel: "noopener",
                class: "btn btn-warning btn-lg"
            }, [ZU, S("span", {
                innerHTML: e.trans.get("Try it now!")
            }, null, 8, eM)], 8, QU)])])])])], 8, NU)])) : T("", !0), S("tr", {
                class: w({
                    "table-active": o.is_selected(s)
                })
            }, [S("td", tM, [12 == r.search_engine ? F((b(), g("input", {
                key: 0,
                id: s.id,
                type: "checkbox",
                value: s.keyword_id,
                "onUpdate:modelValue": t[11] || (t[11] = e => a.selected = e),
                onChange: e => o.change_select_keyword(s.keyword_id, e),
                disabled: r.loading,
                "data-value": s.keyword_source
            }, null, 40, rM)), [
                [q, a.selected]
            ]) : F((b(), g("input", {
                key: 1,
                id: s.id,
                type: "checkbox",
                value: s.keyword_source,
                "onUpdate:modelValue": t[12] || (t[12] = e => a.selected = e),
                onChange: e => o.change_select_keyword(s.keyword_source, e),
                disabled: r.loading
            }, null, 40, sM)), [
                [q, a.selected]
            ])]), S("td", aM, [E(i, {
                keyword: r.keyword,
                is_selected: o.is_selected,
                select: o.toggle_select_keyword,
                item: s,
                add_basket: r.add_basket,
                delete_basket: r.delete_basket,
                allow_keyword_basket: r.allow_keyword_basket,
                search_engine: r.search_engine,
                current_tab: r.current_tab,
                current_sub_tab: r.current_sub_tab
            }, null, 8, ["keyword", "is_selected", "select", "item", "add_basket", "delete_basket", "allow_keyword_basket", "search_engine", "current_tab", "current_sub_tab"])]), r.current_permissions.show_location_column ? (b(), g("td", oM, [r.has_metrics && void 0 !== s.location ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_location_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.location && null !== s.location ? (b(), g("span", iM, v(s.location_format), 1)) : (b(), g("span", nM, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, lM)]))], 64)) : (b(), g("span", cM, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", _M, "...")) : (b(), g("span", uM, "88,888"))], 64)) : (b(), g("span", dM, "..."))], 64))])) : T("", !0), r.current_permissions.show_language_column ? (b(), g("td", mM, [r.has_metrics && void 0 !== s.language ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_language_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.language && null !== s.language ? (b(), g("span", hM, v(s.language_format), 1)) : (b(), g("span", pM, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, gM)]))], 64)) : (b(), g("span", yM, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", fM, "...")) : (b(), g("span", wM, "88,888"))], 64)) : (b(), g("span", bM, "..."))], 64))])) : T("", !0), r.current_permissions.show_network_column ? (b(), g("td", vM, [r.has_metrics && void 0 !== s.network ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_network_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.network && null !== s.network ? (b(), g("span", kM, v(s.network_format), 1)) : (b(), g("span", xM, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, CM)]))], 64)) : (b(), g("span", SM, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", TM, "...")) : (b(), g("span", FM, "88,888"))], 64)) : (b(), g("span", qM, "..."))], 64))])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("td", EM, [r.has_metrics && void 0 !== s.search_volume ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_search_volume_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.search_volume && null !== s.search_volume ? (b(), g("span", UM, v(s.search_volume_format), 1)) : (b(), g("span", MM, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, AM)]))], 64)) : (b(), g("span", PM, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", LM, "...")) : (b(), g("span", BM, "88,888"))], 64)) : (b(), g("span", $M, "..."))], 64))])) : T("", !0), r.current_permissions.show_search_volume_column ? (b(), g("td", DM, [r.has_metrics && void 0 !== s.search_volume_trend ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_search_volume_data || l >= r.current_free_results && r.current_permissions.free_user_show_trends_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.search_volume_trend && null !== s.search_volume_trend ? (b(), g("span", jM, [S("span", {
                class: w({
                    "text-success": s.search_volume_trend > 0,
                    "text-danger": s.search_volume_trend < 0,
                    icon: 0 == s.search_volume_trend
                })
            }, [s.search_volume_trend > 0 ? (b(), g("i", OM)) : s.search_volume_trend < 0 ? (b(), g("i", VM)) : T("", !0), A(" " + v(s.search_volume_trend_format), 1)], 2)])) : (b(), g("span", HM, [r.current_permissions.free_user_show_trends_data ? (b(), g("span", IM, "88%")) : (b(), g("span", {
                key: 1,
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, NM))]))], 64)) : (b(), g("span", RM, "88%"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", KM, "...")) : (b(), g("span", JM, "88%"))], 64)) : (b(), g("span", WM, "..."))], 64))])) : T("", !0), S("td", zM, [(r.current_permissions.show_search_volume_data || l < r.current_free_results && !s.has_null) && "" !== s.search_volume_trend && null !== s.search_volume_trend ? (b(), x(n, {
                key: 0,
                data: s.search_volume_trend_mini_chart,
                keyword_id: s.id,
                popup: {
                    data: s.search_volume_trend_data,
                    height: 260,
                    labels: s.search_volume_trend_labels,
                    title: s.search_volume_trend_title,
                    width: 600
                }
            }, null, 8, ["data", "keyword_id", "popup"])) : T("", !0)]), r.current_permissions.show_cpc_column ? (b(), g("td", YM, [r.has_metrics && void 0 !== s.average_cpc ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_cpc_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.average_cpc && null !== s.average_cpc ? (b(), g("span", GM, v(s.average_cpc_format), 1)) : (b(), g("span", XM, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, QM)]))], 64)) : (b(), g("span", ZM, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", eA, "...")) : (b(), g("span", tA, "8.88"))], 64)) : (b(), g("span", rA, "..."))], 64))])) : T("", !0), r.current_permissions.show_competition_column ? (b(), g("td", sA, [r.has_metrics && void 0 !== s.competition ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_competition_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.competition && null !== s.competition ? (b(), g(y, {
                key: 0
            }, ["" !== s.competition_class && null !== s.competition_class ? (b(), g("span", {
                key: 0,
                class: w(s.competition_class)
            }, v(s.competition_format), 3)) : (b(), g("span", aA, v(s.competition_format), 1))], 64)) : (b(), g("span", oA, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, iA)]))], 64)) : (b(), g("span", nA, "8.88"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", lA, "...")) : (b(), g("span", cA, "8.88"))], 64)) : (b(), g("span", _A, "..."))], 64))])) : T("", !0), r.current_permissions.show_timestamp_column ? (b(), g("td", uA, [r.has_metrics && void 0 !== s.timestamp ? (b(), g(y, {
                key: 0
            }, [r.current_permissions.show_timestamp_data || l < r.current_free_results && !s.has_null ? (b(), g(y, {
                key: 0
            }, ["" !== s.timestamp && null !== s.timestamp ? (b(), g("span", dA, v(s.timestamp_format), 1)) : (b(), g("span", mA, [S("span", {
                class: "cursor-help",
                "data-bs-content": e.trans.get("Unfortunately, there is no data available for this keyword at the moment."),
                "data-bs-toggle": "popover-sv-result",
                "data-bs-placement": "bottom",
                "data-bs-trigger": "hover focus"
            }, "-", 8, hA)]))], 64)) : (b(), g("span", pA, "88,888"))], 64)) : (b(), g(y, {
                key: 1
            }, [r.has_metrics ? (b(), g(y, {
                key: 0
            }, [r.user_is_paid ? (b(), g("span", gA, "...")) : (b(), g("span", yA, "88,888"))], 64)) : (b(), g("span", fA, "..."))], 64))])) : T("", !0)], 2)], 64)))), 128))])) : T("", !0)])])
        }]
    ]),
    bA = {
        mixins: [mp],
        components: {
            "bing-search-volume-summary": cE,
            "bing-search-volume-result": wA
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e = !1,
                    t = {},
                    r = 0,
                    s = 0;
                if (this.current_scrape_urls && null == window.param("category")) {
                    var a = [];
                    for (var o in this.current_scrape_urls) this.current_scrape_urls.hasOwnProperty(o) && (a.push({
                        url: this.current_scrape_urls[o],
                        term: o
                    }), s++);
                    try {
                        var i = await Promise.all(a.map((e => new Promise(((t, s) => {
                            let a = document.createElement("script"),
                                o = "_callback_" + se().replaceAll("-", ""),
                                i = e.url;
                            i = i.replace(/(jsoncallback=)[^\&]+/, "$1" + o), a.async = !0, a.src = i;
                            let n = setTimeout((() => {
                                window[o] && (a.remove(), delete window[o], r++, t(!1))
                            }), 12e3);
                            window[o] = s => {
                                try {
                                    if (s.url = e.url, s.term = e.term, this.keywords.length <= 100 && void 0 !== s[1])
                                        for (var i = s[1].length; i--;) {
                                            var l = s[1][i].toLowerCase().replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                            this.keywords.push({
                                                keyword: l,
                                                keyword_rank: 0
                                            })
                                        }
                                    clearTimeout(n), a.remove(), delete window[o], t(s)
                                } catch (c) {
                                    window[o] && (clearTimeout(n), a.remove(), delete window[o]), r++, t(!1)
                                }
                            }, document.body.appendChild(a)
                        })))))
                    } catch (c) {
                        console.log(c)
                    }
                    if (s > 0 && s == r && (e = !0), e && this.captcha_url) return window.location.href = this.url_add_param(this.captcha_url, "redirect", window.location.href), !1;
                    i && i.map((e => {
                        e && (t[e.term] = e)
                    }))
                }
                try {
                    var n;
                    this.error = this.list = null;
                    var l = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    n = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(t))
                    }, {
                        headers: l
                    }), this.has_all_error = n.data.has_all_error, this.has_error = n.data.has_error, this.keywords = n.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = n.data.breakdown_url ? n.data.breakdown_url : null, this.device_breakdown_url = n.data.device_breakdown_url ? n.data.device_breakdown_url : null, this.keywords_payload = n.data.keywords_payload, this.metrics_url = n.data.metrics_url, this.current_scrape_urls = n.data.scrape_urls, await this.metrics(!0)
                } catch (c) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("bing-category-rebuild", e), Ce("bing-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            },
            async selectLanguage(e, t) {
                this.current_metrics_language = [], t && t.target.checked && this.current_metrics_language.push(e.id)
            }
        }
    },
    vA = {
        class: "search-results-settings my-2"
    },
    kA = {
        class: "search-results-settings-display mx-n1"
    },
    xA = {
        class: "row"
    },
    CA = {
        class: "col"
    },
    SA = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    TA = {
        class: "row"
    },
    FA = {
        class: "col-12 col-md-6"
    },
    qA = {
        class: "search-results-settings-modal-search-network mb-3"
    },
    EA = {
        class: "form-label search-results-settings-modal-search-network-label"
    },
    UA = {
        key: 0,
        class: "col-12 col-md-6"
    },
    MA = {
        class: "search-results-settings-modal-currency mb-3"
    },
    AA = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    PA = {
        class: "row"
    },
    LA = {
        class: "col"
    },
    BA = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    $A = {
        key: 1,
        class: "row"
    },
    DA = {
        class: "col-12 col-md-6"
    },
    jA = {
        class: "col-12 col-md-6"
    },
    OA = {
        key: 0,
        class: "search-results-settings-modal-competition mb-3"
    },
    VA = {
        class: "form-label search-results-settings-modal-competition-label"
    },
    HA = {
        class: "search-results-settings-modal-competition-value form-check"
    },
    IA = {
        for: "low",
        class: "search-results-settings-modal-competition-label fw-normal form-check-label"
    },
    NA = {
        class: "search-results-settings-modal-competition-value form-check"
    },
    RA = {
        for: "medium",
        class: "search-results-settings-modal-competition-label fw-normal form-check-label"
    },
    KA = {
        class: "search-results-settings-modal-competition-value form-check"
    },
    JA = {
        for: "high",
        class: "search-results-settings-modal-competition-label fw-normal form-check-label"
    },
    WA = {
        class: "row"
    },
    zA = {
        class: "col-12"
    },
    YA = {
        class: "row"
    },
    GA = {
        class: "col-12"
    },
    XA = ["innerHTML"],
    QA = ["innerHTML"],
    ZA = {
        class: "search-results-summary card my-4 bg-light"
    },
    eP = {
        class: "card-body"
    },
    tP = {
        class: "search-results-keywords my-3"
    },
    rP = {
        key: 0,
        class: "mb-4"
    },
    sP = {
        key: 1,
        class: "mb-4"
    },
    aP = {
        key: 2,
        class: "mb-4"
    },
    oP = {
        key: 3,
        class: "mb-4"
    };
const iP = Ue(bA, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-split-filter-keywords"),
                h = k("current-split-filter-negative-keywords"),
                p = k("tom-select"),
                f = k("search-results-settings-modal-search-volume"),
                w = k("search-results-settings-modal-search-volume-trend"),
                U = k("search-results-settings-modal-average-cpc"),
                M = k("search-results-settings-filter-positive-keywords"),
                A = k("search-results-settings-filter-negative-keywords"),
                P = k("alert-pro-upsell"),
                L = k("search-results-settings-modal-keyword-result-period"),
                $ = k("search-results-settings-modal"),
                D = k("search-results-tabs"),
                j = k("has-error"),
                O = k("suggest-page-reload"),
                V = k("bing-search-volume-summary"),
                H = k("show-upsell"),
                I = k("bing-search-volume-result"),
                N = k("search-results-table-wrapper"),
                R = k("search-results-no-keyword-found"),
                K = k("has-more"),
                J = k("dropdown-menu-item-add-basket"),
                W = k("dropdown-menu-item-divider"),
                z = k("dropdown-menu-item-export-excel"),
                Y = k("dropdown-menu-item-export-csv"),
                G = k("dropdown-menu-item-copy-keywords"),
                X = k("dropdown-menu-item-copy-keywords-search-volume"),
                Q = k("dropdown-menu-item-copy-keywords-all-data"),
                Z = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", vA, [S("div", kA, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), E(d, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"]), E(m, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(h, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E($, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [S("div", xA, [S("div", CA, [S("h5", SA, v(e.trans.get("Search Volume Settings")), 1)])]), T("", !0), S("div", TA, [S("div", FA, [S("div", qA, [S("label", EA, v(e.trans.get("Search Network")), 1), E(p, {
                    id: "metrics_network_selection",
                    class: "search-results-settings-modal-search-network-value",
                    "model-value": e.current_metrics_network,
                    "onUpdate:modelValue": t[2] || (t[2] = t => e.current_metrics_network = t),
                    options: e.current_network_list,
                    settings: {},
                    disabled: 4 == e.current_tab,
                    placeholder: e.trans.get("Type a search network")
                }, null, 8, ["model-value", "options", "disabled", "placeholder"])])]), e.current_permissions.show_currency_settings ? (b(), g("div", UA, [S("div", MA, [S("label", AA, v(e.trans.get("Currency")), 1), E(p, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])], 64)) : T("", !0), S("div", PA, [S("div", LA, [S("h5", BA, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", $A, [S("div", DA, [E(f, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[3] || (t[3] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[4] || (t[4] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(w, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[5] || (t[5] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[6] || (t[6] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", jA, [E(U, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[7] || (t[7] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[8] || (t[8] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_data ? (b(), g("div", OA, [S("label", VA, v(e.trans.get("Competition")), 1), S("div", HA, [F(S("input", {
                    type: "checkbox",
                    class: "form-check-input",
                    id: "low",
                    value: "Low",
                    name: "competition_low",
                    "onUpdate:modelValue": t[9] || (t[9] = t => e.current_filter_competition = t)
                }, null, 512), [
                    [q, e.current_filter_competition]
                ]), S("label", IA, v(e.trans.get("Low")), 1)]), S("div", NA, [F(S("input", {
                    type: "checkbox",
                    class: "form-check-input",
                    id: "medium",
                    value: "Medium",
                    name: "competition_medium",
                    "onUpdate:modelValue": t[10] || (t[10] = t => e.current_filter_competition = t)
                }, null, 512), [
                    [q, e.current_filter_competition]
                ]), S("label", RA, v(e.trans.get("Medium")), 1)]), S("div", KA, [F(S("input", {
                    type: "checkbox",
                    class: "form-check-input",
                    id: "high",
                    value: "High",
                    name: "competition_high",
                    "onUpdate:modelValue": t[11] || (t[11] = t => e.current_filter_competition = t)
                }, null, 512), [
                    [q, e.current_filter_competition]
                ]), S("label", JA, v(e.trans.get("High")), 1)])])) : T("", !0)])])) : T("", !0), S("div", WA, [S("div", zA, [E(M, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[12] || (t[12] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[13] || (t[13] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", YA, [S("div", GA, [E(A, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[14] || (t[14] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(P, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, XA)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, QA)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(L, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[15] || (t[15] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(D, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(j, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(O, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", ZA, [S("div", eP, [E(V, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), !o.show_upsell || 1 != e.current_tab && 6 != e.current_tab && 3 != e.current_tab ? T("", !0) : (b(), x(H, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", tP, [E(N, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(I, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(R, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [6 == e.current_tab ? (b(), g("h4", rP, v(e.trans.get("Sorry, Bing does not provide any prepositions for your query")), 1)) : 3 == e.current_tab ? (b(), g("h4", sP, v(e.trans.get("Sorry, Bing does not provide any questions for your query")), 1)) : 2 == e.current_tab ? (b(), g("h4", aP, v(e.trans.get("Sorry, Bing does not provide any related keywords for your query")), 1)) : (b(), g("h4", oP, v(e.trans.get("Sorry, Bing does not provide any keyword suggestions for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(K, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(Z, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(J, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(W, {
                    key: 1
                })) : T("", !0), E(z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Y, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(W), E(G, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(X, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(Q, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    nP = {
        class: "row g-0 me-lg-n1px"
    },
    lP = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    cP = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const _P = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/bing/languages",
            locations_url: "/search/keywords/bing/locations",
            location_search_engine: "bing",
            rebuild_event: "bing-language-rebuild",
            cookie: "bing_search_engine",
            location_container_css_class: "bing-location-select2",
            location_fav_cookie: "bing_locations_fav",
            language_container_css_class: "bing-language-select2",
            language_fav_cookie: "bing_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", nP, [S("div", lP, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a location")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", cP, [E(i, {
                id: "language_" + e.id,
                disabled: e.loading,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["id", "disabled", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    uP = ["value"],
    dP = ["value"],
    mP = ["value"],
    hP = ["value"],
    pP = ["value"],
    gP = {
        class: "row"
    },
    yP = {
        class: "col-12"
    },
    fP = {
        class: "check-search-volume-settings-locations mb-3"
    },
    wP = {
        key: 0,
        class: "form-label check-search-volume-settings-locations-label"
    },
    bP = {
        key: 1,
        class: "form-label check-search-volume-settings-locations-label"
    },
    vP = {
        key: 2,
        class: "check-search-volume-settings-locations-help form-text text-muted"
    },
    kP = {
        key: 1,
        class: "row"
    },
    xP = {
        class: "col-12"
    },
    CP = {
        class: "check-search-volume-settings-language mb-3"
    },
    SP = {
        class: "form-label check-search-volume-settings-language-label"
    },
    TP = {
        class: "form-check"
    },
    FP = ["onChange", "id", "checked", "value"],
    qP = ["for"],
    EP = {
        key: 2,
        class: "row"
    },
    UP = {
        class: "col-12"
    },
    MP = {
        class: "check-search-volume-settings-network mb-3"
    },
    AP = {
        class: "form-label check-search-volume-settings-network-label"
    };
const PP = Ue({
        mixins: [DT, NT],
        data: () => ({
            locations_settings: {},
            locations_limit: 10,
            locations_term: "",
            facet_filters: [],
            exclude_filters: []
        }),
        async created() {
            this.country_list && this.country_list.length && this.facet_filters.push(this.country_list.map((e => ({
                field: "country_code",
                value: e
            })))), this.exclude_locations && this.exclude_locations.length && this.exclude_filters.push(this.exclude_locations.map((e => ({
                field: "location_id",
                value: e
            })))), this.exclude_location_countries && this.exclude_location_countries.length && this.exclude_filters.push(this.exclude_location_countries.map((e => ({
                field: "country_code",
                value: e
            })))), this.location_country_only && this.facet_filters.push([{
                field: "location_type",
                value: "Country"
            }, {
                field: "location_type",
                value: "All Countries"
            }]), this.locations_settings = {
                load: async (e, t) => {
                    this.locations_term = e;
                    var r = {
                        query: e,
                        facets: "*,country_code",
                        facetFilters: this.facet_filters,
                        excludeFilters: this.exclude_filters,
                        hitsPerPage: this.locations_limit,
                        search_engine: "bing"
                    };
                    this.locationSearchSuggest(r).then((e => {
                        if (e.query == this.locations_term) {
                            let r = e.hits ? e.hits : [];
                            t(this.processLocations(r))
                        } else t()
                    }))
                },
                autocomplete: !0
            }, this.location_country_only || (this.locations_settings.maxItems = 10, this.locations_settings.multiple = !0)
        },
        methods: {
            async selectLanguage(e, t) {
                this.current_metrics_language = [], t && t.target.checked && this.current_metrics_language.push(e.id)
            },
            processLocations(e) {
                return {
                    results: e.map((e => ({
                        country: e.country_code,
                        html: this.locationResultsFormat(e),
                        id: e.location_id,
                        text: this.locationTextFormat(e)
                    })))
                }
            },
            locationResults: e => e.loading ? "Searching..." : e.html ? e.html : e.text,
            async selectLocations(e) {
                this.current_metrics_country = e.country
            },
            allowHtml: e => e
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", null, [S("input", {
                name: "metrics_location",
                type: "hidden",
                value: e.locations
            }, null, 8, uP), S("input", {
                name: "metrics_language",
                type: "hidden",
                value: e.language
            }, null, 8, dP), S("input", {
                name: "metrics_network",
                type: "hidden",
                value: e.network
            }, null, 8, mP), S("input", {
                name: "metrics_currency",
                type: "hidden",
                value: e.currency
            }, null, 8, hP), e.location_country_only ? (b(), g("input", {
                key: 0,
                name: "metrics_country",
                type: "hidden",
                value: e.country
            }, null, 8, pP)) : T("", !0), S("div", gP, [S("div", yP, [S("div", fP, [e.location_country_only ? (b(), g("label", wP, v(e.trans.get("Location")), 1)) : (b(), g("label", bP, v(e.trans.get("Locations")), 1)), E(i, {
                multiple: a.locations_settings.multiple,
                settings: a.locations_settings,
                options: e.current_location_list,
                onSelect: t[0] || (t[0] = e => o.selectLocations(e)),
                class: "check-search-volume-settings-locations-value",
                id: "metrics_locations_selection",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_location = t),
                "model-value": e.current_metrics_location,
                placeholder: e.trans.get("Type a location")
            }, null, 8, ["multiple", "settings", "options", "model-value", "placeholder"]), e.location_country_only ? T("", !0) : (b(), g("small", vP, v(e.trans.get("Enter one or up to 10 locations to target.")), 1))])])]), e.current_language_list.length ? (b(), g("div", kP, [S("div", xP, [S("div", CP, [S("label", SP, v(e.trans.get("Language")), 1), (b(!0), g(y, null, f(e.current_language_list, (t => (b(), g("div", TP, [S("input", {
                onChange: e => o.selectLanguage(t, e),
                id: "bing_language_" + t.id,
                class: "check-search-volume-settings-language-value form-check-input",
                type: "radio",
                checked: e.current_metrics_language.indexOf(t.id.toString()) >= 0,
                value: t.id
            }, null, 40, FP), S("label", {
                for: "bing_language_" + t.id,
                class: "check-search-volume-settings-language-label form-check-label"
            }, v(t.text), 9, qP)])))), 256))])])])) : T("", !0), e.current_network_list.length ? (b(), g("div", EP, [S("div", UP, [S("div", MP, [S("label", AP, v(e.trans.get("Search Network")), 1), E(i, {
                options: e.current_network_list,
                settings: e.currency_settings,
                class: "check-search-volume-settings-network-value",
                id: "metrics_network_selection",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.current_metrics_network = t),
                "model-value": e.current_metrics_network,
                placeholder: e.trans.get("Type a search network")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
        }]
    ]),
    LP = {
        class: "search-results-settings my-2"
    },
    BP = {
        class: "search-results-settings-display mx-n1"
    },
    $P = {
        key: 0,
        class: "row"
    },
    DP = {
        class: "col"
    },
    jP = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    OP = {
        key: 1,
        class: "row"
    },
    VP = {
        class: "col-12 col-md-6"
    },
    HP = {
        class: "search-results-settings-modal-country mb-3"
    },
    IP = {
        class: "form-label search-results-settings-modal-country-label"
    },
    NP = ["value"],
    RP = {
        key: 0,
        class: "col-12 col-md-6"
    },
    KP = {
        class: "search-results-settings-modal-currency mb-3"
    },
    JP = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    WP = {
        key: 2,
        class: "row"
    },
    zP = {
        key: 0,
        class: "col-12 col-md-6"
    },
    YP = {
        key: 1,
        class: "col-12 col-md-6"
    },
    GP = {
        class: "row"
    },
    XP = {
        class: "col"
    },
    QP = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    ZP = {
        key: 1,
        class: "row"
    },
    eL = {
        class: "col-12 col-md-6"
    },
    tL = {
        class: "col-12 col-md-6"
    },
    rL = {
        class: "row"
    },
    sL = {
        class: "col-12"
    },
    aL = {
        class: "row"
    },
    oL = {
        class: "col-12"
    },
    iL = ["innerHTML"],
    nL = ["innerHTML"],
    lL = {
        class: "search-results-summary card my-4 bg-light"
    },
    cL = {
        class: "card-body"
    },
    _L = {
        class: "search-results-keywords my-3"
    },
    uL = {
        key: 0,
        class: "mb-4"
    },
    dL = {
        key: 1,
        class: "mb-4"
    };
const mL = Ue({
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e = !1,
                    t = {},
                    r = 0,
                    s = 0;
                if (this.current_scrape_urls) {
                    var a = [];
                    for (var o in this.current_scrape_urls) this.current_scrape_urls.hasOwnProperty(o) && (a.push({
                        url: this.current_scrape_urls[o],
                        term: o
                    }), s++);
                    try {
                        var i = await Promise.all(a.map((e => new Promise(((t, s) => {
                            let a = new XMLHttpRequest,
                                o = e.url;
                            a.timeout = 12e3, a.open("GET", o, !0), a.overrideMimeType("application/json"), a.send(), a.onload = () => {
                                try {
                                    if (a.readyState === a.DONE && 200 === a.status) {
                                        let r = JSON.parse(a.responseText);
                                        if (r.url = e.url, r.term = e.term, this.keywords.length <= 100 && void 0 !== r.res && void 0 !== r.res.sug)
                                            for (var s = r.res.sug.length; s--;) {
                                                var o = r.res.sug[s].toLowerCase().replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                this.keywords.push({
                                                    keyword: o,
                                                    keyword_rank: 0
                                                })
                                            }
                                        t(r)
                                    } else r++, t(!1)
                                } catch (i) {
                                    r++, t(!1)
                                }
                            }, a.onerror = () => {
                                r++, t(!1)
                            }, a.ontimeout = () => {
                                r++, t(!1)
                            }
                        })))))
                    } catch (c) {
                        console.log(c)
                    }
                    if (s > 0 && s == r && (e = !0), e && this.captcha_url) return window.location.href = this.url_add_param(this.captcha_url, "redirect", window.location.href), !1;
                    i && i.map((e => {
                        e && (t[e.term] = e)
                    }))
                }
                try {
                    var n;
                    this.error = this.list = null;
                    var l = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    n = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(t))
                    }, {
                        headers: l
                    }), this.has_all_error = n.data.has_all_error, this.has_error = n.data.has_error, this.keywords = n.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = n.data.breakdown_url ? n.data.breakdown_url : null, this.device_breakdown_url = n.data.device_breakdown_url ? n.data.device_breakdown_url : null, this.keywords_payload = n.data.keywords_payload, this.metrics_url = n.data.metrics_url, this.current_scrape_urls = n.data.scrape_urls, await this.metrics(!0)
                } catch (c) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("ebay-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                w = k("search-results-settings-modal-search-network"),
                q = k("search-results-settings-modal-currency"),
                U = k("search-results-settings-modal-search-volume"),
                M = k("search-results-settings-modal-search-volume-trend"),
                A = k("search-results-settings-modal-average-cpc"),
                P = k("search-results-settings-modal-bing-competition"),
                L = k("search-results-settings-modal-competition"),
                $ = k("search-results-settings-filter-positive-keywords"),
                D = k("search-results-settings-filter-negative-keywords"),
                j = k("alert-pro-upsell"),
                O = k("search-results-settings-modal-keyword-result-period"),
                V = k("search-results-settings-modal"),
                H = k("search-results-tabs"),
                I = k("has-error"),
                N = k("suggest-page-reload"),
                R = k("google-search-volume-summary"),
                K = k("show-upsell"),
                J = k("google-search-volume-result"),
                W = k("search-results-table-wrapper"),
                z = k("search-results-no-keyword-found"),
                Y = k("has-more"),
                G = k("dropdown-menu-item-add-basket"),
                X = k("dropdown-menu-item-divider"),
                Q = k("dropdown-menu-item-export-excel"),
                Z = k("dropdown-menu-item-export-csv"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", LP, [S("div", BP, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(V, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", $P, [S("div", DP, [S("h5", jP, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", OP, [S("div", VP, [S("div", HP, [S("label", IP, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, NP)])]), e.current_permissions.show_currency_settings ? (b(), g("div", RP, [S("div", KP, [S("label", JP, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", WP, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", zP, [E(w, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", YP, [E(q, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", GP, [S("div", XP, [S("h5", QP, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", ZP, [S("div", eL, [E(U, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(M, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", tL, [E(A, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(P, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(L, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", rL, [S("div", sL, [E($, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", aL, [S("div", oL, [E(D, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(j, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, iL)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, nL)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(O, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(H, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(I, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(N, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", lL, [S("div", cL, [E(R, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), !o.show_upsell || 1 != e.current_tab && 6 != e.current_tab ? T("", !0) : (b(), x(K, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", _L, [E(W, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(J, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [6 == e.current_tab ? (b(), g("h4", uL, v(e.trans.get("Sorry, eBay does not provide any prepositions for your query")), 1)) : (b(), g("h4", dL, v(e.trans.get("Sorry, eBay does not provide any keyword suggestions for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Y, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(G, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(X, {
                    key: 1
                })) : T("", !0), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(X), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    hL = {
        class: "row g-0 me-lg-n1px"
    },
    pL = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const gL = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "ebay-language-select2",
            languages_url: "/search/keywords/ebay/languages",
            rebuild_event: "ebay-language-rebuild",
            cookie: "ebay_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", hL, [S("div", pL, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    yL = {
        class: "row g-0 me-lg-n1px"
    },
    fL = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    wL = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const bL = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/ebay/languages",
            locations_url: "/search/keywords/ebay/locations",
            location_search_engine: "google",
            rebuild_event: "ebay-language-rebuild",
            cookie: "ebay_search_engine",
            location_container_css_class: "ebay-location-select2",
            location_fav_cookie: "ebay_locations_fav",
            language_container_css_class: "ebay-language-select2",
            language_fav_cookie: "ebay_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", yL, [S("div", fL, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", wL, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    vL = ["value"],
    kL = ["value"],
    xL = {
        key: 2,
        class: "row"
    },
    CL = {
        class: "col-12"
    },
    SL = {
        class: "check-search-volume-settings-country mb-3"
    },
    TL = {
        class: "form-label check-search-volume-settings-country-label"
    },
    FL = {
        key: 3,
        class: "row"
    },
    qL = {
        class: "col-12"
    },
    EL = {
        class: "check-search-volume-settings-currency mb-3"
    },
    UL = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const ML = Ue({
    mixins: [NT]
}, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("tom-select");
        return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
            key: 0,
            name: "metrics_country",
            type: "hidden",
            value: e.country
        }, null, 8, vL)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
            key: 1,
            name: "metrics_currency",
            type: "hidden",
            value: e.currency
        }, null, 8, kL)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", xL, [S("div", CL, [S("div", SL, [S("label", TL, v(e.trans.get("Country")), 1), E(i, {
            options: e.current_country_list,
            settings: e.country_settings,
            class: "check-search-volume-settings-country-value",
            id: "metrics_country_selection",
            "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
            "model-value": e.current_metrics_country,
            placeholder: e.trans.get("Type a country")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", FL, [S("div", qL, [S("div", EL, [S("label", UL, v(e.trans.get("Currency")), 1), E(i, {
            options: e.current_currency_list,
            settings: e.currency_settings,
            class: "check-search-volume-settings-currency-value",
            id: "metrics_currency_selection",
            "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
            "model-value": e.current_metrics_currency,
            placeholder: e.trans.get("Type a currency")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
    }]
]);
const AL = Ue({
        mixins: [_p],
        components: {},
        props: ["preoptions"],
        data() {
            return {
                container_css_class: "google-category-select2",
                rebuild_event: "google-category-rebuild",
                cookie: "google_search_engine",
                options_data: this.preoptions
            }
        },
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), x(i, {
                disabled: e.loading || 2 == e.search_type,
                id: "category_" + e.id,
                options: e.options,
                required: !0,
                settings: e.settings,
                name: "category",
                "model-value": e.category,
                class: w("rounded-top-end-0 rounded-bottom-end-0"),
                searchable: !1
            }, null, 8, ["disabled", "id", "options", "settings", "model-value"])
        }]
    ]),
    PL = {
        async mounted() {
            await new Promise((async (e, t) => {
                var r = document.createElement("div");
                r.classList.add("d-none"), r.setAttribute("id", "chart_embedinit"), r.setAttribute("style", "display:none"), document.body.appendChild(r);
                var s = document.createElement("script");
                s.async = !0, s.onload = () => {
                    e(!0)
                }, s.src = "https://ssl.gstatic.com/trends_nrtr/760_RC08/embed_loader.js", document.body.appendChild(s)
            }))
        },
        methods: {
            inittrends() {
                this.$nextTick((() => {
                    var e = document.getElementById("google-trends-carousel");
                    e && (e.addEventListener("slide.bs.carousel", (e => {
                        "google-trends-chart" == e.relatedTarget.id && this.embedTrends("chart_trends", "GEO_MAP", this.keyword)
                    })), bootstrap.Carousel.getOrCreateInstance(e, {
                        interval: !1
                    }))
                }))
            },
            embedTrends(e, t, r = "") {
                if ("undefined" != typeof trends) {
                    var s = document.getElementById(e);
                    if (s) null == s.getElementsByTagName("iframe")[0] && trends.embed.renderExploreWidgetTo(s, t, {
                        comparisonItem: [{
                            keyword: r,
                            geo: this.geo,
                            time: "today 12-m"
                        }],
                        category: 0,
                        property: this.property
                    }, {
                        exploreQuery: "cat=0&geo=" + this.geo + "&gprop=" + this.property + "&q=" + encodeURIComponent(r) + "&date=today 12-m",
                        guestPath: "https://trends.google.com:443/trends/embed/"
                    })
                }
            }
        }
    },
    LL = {
        class: "search-results-settings my-2"
    },
    BL = {
        class: "search-results-settings-display mx-n1"
    },
    $L = {
        class: "row"
    },
    DL = {
        class: "col"
    },
    jL = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    OL = {
        class: "row"
    },
    VL = {
        key: 0,
        class: "col-12 col-md-6"
    },
    HL = {
        key: 1,
        class: "col-12 col-md-6"
    },
    IL = {
        class: "row"
    },
    NL = {
        class: "col"
    },
    RL = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    KL = {
        key: 0,
        class: "row"
    },
    JL = {
        class: "col-12 col-md-6"
    },
    WL = {
        class: "col-12 col-md-6"
    },
    zL = {
        key: 1,
        class: "row"
    },
    YL = {
        class: "col-12 col-md-6"
    },
    GL = {
        key: 0,
        class: "search-results-settings-modal-low-top-page-bid mb-3"
    },
    XL = {
        class: "form-label search-results-settings-modal-low-top-page-bid-label"
    },
    QL = {
        class: "search-results-settings-modal-low-top-page-bid-value input-group"
    },
    ZL = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    eB = {
        class: "col-12 col-md-6"
    },
    tB = {
        key: 0,
        class: "search-results-settings-modal-high-top-page-bid mb-3"
    },
    rB = {
        class: "form-label search-results-settings-modal-high-top-page-bid-label"
    },
    sB = {
        class: "search-results-settings-modal-high-top-page-bid-value input-group"
    },
    aB = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    oB = {
        class: "row"
    },
    iB = {
        class: "col-12"
    },
    nB = {
        class: "row"
    },
    lB = {
        class: "col-12"
    },
    cB = ["innerHTML"],
    _B = ["innerHTML"],
    uB = {
        class: "search-results-summary card my-4 bg-light"
    },
    dB = {
        key: 0,
        class: "card-body"
    },
    mB = {
        class: "search-results-keywords my-3"
    },
    hB = {
        key: 0,
        class: "mb-4"
    },
    pB = {
        key: 1,
        class: "mb-4"
    },
    gB = {
        key: 2,
        class: "mb-4"
    },
    yB = {
        key: 3,
        class: "mb-4"
    };
const fB = Ue({
        mixins: [mp, PL],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        data: () => ({
            show_google_trends_chart: !0
        }),
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e = !1,
                    t = {},
                    r = 0,
                    s = 0;
                if (this.current_scrape_urls) {
                    var a = [];
                    for (var o in this.current_scrape_urls) this.current_scrape_urls.hasOwnProperty(o) && (a.push({
                        url: this.current_scrape_urls[o],
                        term: o
                    }), s++);
                    try {
                        var i = await Promise.all(a.map((e => new Promise(((t, s) => {
                            let a = document.createElement("script"),
                                o = "_callback_" + se().replaceAll("-", ""),
                                i = e.url;
                            i.match(/\?/) ? i += "&callback=" + o : i += "?callback=" + o, a.async = !0, a.src = i;
                            let n = setTimeout((() => {
                                window[o] && (a.remove(), delete window[o], r++, t(!1))
                            }), 12e3);
                            window[o] = s => {
                                try {
                                    if (s.url = e.url, s.term = e.term, this.keywords.length <= 100)
                                        if (void 0 !== s[0] && void 0 !== s[1] && void 0 !== s[1].q) {
                                            if (s[0].length > 0)
                                                for (var i = s[0].length; i--;)
                                                    if (void 0 === s[0][i][3]) {
                                                        var l = s[0][i][0].toLowerCase().replace(/(<([^>]+)>)/gi, "").replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                        this.keywords.push({
                                                            keyword: '<span class="fw-bold">' + l + "</span>",
                                                            keyword_rank: 0
                                                        })
                                                    }
                                        } else if (void 0 !== s[1] && void 0 !== s[4]) {
                                        if (void 0 !== s[4]["google:suggesttype"])
                                            for (i = s[4]["google:suggesttype"].length; i--;)
                                                if (void 0 !== s[4]["google:suggesttype"][i] && "QUERY" == s[4]["google:suggesttype"][i]) {
                                                    l = s[1][i].toLowerCase().replace(/(<([^>]+)>)/gi, "").replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                    this.keywords.push({
                                                        keyword: '<span class="fw-bold">' + l + "</span>",
                                                        keyword_rank: 0
                                                    })
                                                }
                                    } else if (void 0 !== s[1] && void 0 !== s[2] && void 0 !== s[2].q && s[1].length > 0)
                                        for (i = s[1].length; i--;) {
                                            l = s[1][i][0].toLowerCase().replace(/(<([^>]+)>)/gi, "");
                                            this.keywords.push({
                                                keyword: '<span class="fw-bold">' + l + "</span>",
                                                keyword_rank: 0
                                            })
                                        }
                                    clearTimeout(n), a.remove(), delete window[o], t(s)
                                } catch (c) {
                                    window[o] && (clearTimeout(n), a.remove(), delete window[o]), r++, t(!1)
                                }
                            }, document.body.appendChild(a)
                        })))))
                    } catch (c) {
                        console.log(c)
                    }
                    if (s > 0 && s == r && (e = !0), e && this.captcha_url) return window.location.href = this.url_add_param(this.captcha_url, "redirect", window.location.href), !1;
                    i && i.map((e => {
                        e && (t[e.term] = e)
                    }))
                }
                try {
                    var n;
                    this.error = this.list = null;
                    var l = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    n = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(t))
                    }, {
                        headers: l
                    }), this.has_all_error = n.data.has_all_error, this.has_error = n.data.has_error, this.keywords = n.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = n.data.breakdown_url ? n.data.breakdown_url : null, this.device_breakdown_url = n.data.device_breakdown_url ? n.data.device_breakdown_url : null, this.keywords_payload = n.data.keywords_payload, this.metrics_url = n.data.metrics_url, this.current_scrape_urls = n.data.scrape_urls, await this.metrics(!0), this.inittrends()
                } catch (c) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("search-form-keyword-rebuild"), Ce("google-category-rebuild", e), Ce("google-language-rebuild", e), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-low-top-page-bid"),
                m = k("current-filter-high-top-page-bid"),
                h = k("current-filter-bing-competition"),
                p = k("current-filter-competition"),
                f = k("current-split-filter-keywords"),
                q = k("current-split-filter-negative-keywords"),
                M = k("search-results-settings-modal-search-network"),
                A = k("search-results-settings-modal-currency"),
                P = k("search-results-settings-modal-search-volume"),
                $ = k("search-results-settings-modal-search-volume-trend"),
                D = k("search-results-settings-modal-average-cpc"),
                j = k("search-results-settings-modal-bing-competition"),
                O = k("search-results-settings-modal-competition"),
                V = k("search-results-settings-filter-positive-keywords"),
                H = k("search-results-settings-filter-negative-keywords"),
                I = k("alert-pro-upsell"),
                N = k("search-results-settings-modal-keyword-result-period"),
                R = k("search-results-settings-modal"),
                K = k("search-results-tabs"),
                J = k("has-error"),
                W = k("suggest-page-reload"),
                z = k("google-search-volume-summary"),
                Y = k("show-upsell"),
                G = k("google-search-volume-result"),
                X = k("search-results-table-wrapper"),
                Q = k("search-results-no-keyword-found"),
                Z = k("has-more"),
                ee = k("dropdown-menu-item-add-basket"),
                te = k("dropdown-menu-item-divider"),
                re = k("dropdown-menu-item-export-excel"),
                se = k("dropdown-menu-item-export-csv"),
                ae = k("dropdown-menu-item-copy-keywords"),
                oe = k("dropdown-menu-item-copy-keywords-search-volume"),
                ie = k("dropdown-menu-item-copy-keywords-all-data"),
                ne = k("search-results-actions"),
                le = L("mask");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", LL, [S("div", BL, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), E(d, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_low_top_page_bid_min: e.show_current_filter_low_top_page_bid_min,
                show_current_filter_low_top_page_bid_max: e.show_current_filter_low_top_page_bid_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_low_top_page_bid_min", "show_current_filter_low_top_page_bid_max"]), E(m, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_high_top_page_bid_min: e.show_current_filter_high_top_page_bid_min,
                show_current_filter_high_top_page_bid_max: e.show_current_filter_high_top_page_bid_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_high_top_page_bid_min", "show_current_filter_high_top_page_bid_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(h, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(p, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(f, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(q, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(R, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data && (e.current_permissions.show_currency_settings || e.current_permissions.show_search_network_settings) ? (b(), g(y, {
                    key: 0
                }, [S("div", $L, [S("div", DL, [S("h5", jL, v(e.trans.get("Search Volume Settings")), 1)])]), S("div", OL, [e.current_permissions.show_search_network_settings ? (b(), g("div", VL, [E(M, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])) : T("", !0), e.current_permissions.show_currency_settings ? (b(), g("div", HL, [E(A, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)])], 64)) : T("", !0), S("div", IL, [S("div", NL, [S("h5", RL, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data || e.current_permissions.show_low_top_page_bid_data || e.current_permissions.show_high_top_page_bid_data ? (b(), g(y, {
                    key: 1
                }, [e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", KL, [S("div", JL, [E(P, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E($, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", WL, [E(D, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(j, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(O, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), e.current_permissions.show_low_top_page_bid_data || e.current_permissions.show_high_top_page_bid_data ? (b(), g("div", zL, [S("div", YL, [e.current_permissions.show_low_top_page_bid_data ? (b(), g("div", GL, [S("label", XL, v(e.trans.get("Top of Page Bid (Low Range)")), 1), S("div", QL, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.low_top_page_bid_min
                    }]),
                    "onUpdate:modelValue": t[11] || (t[11] = t => e.current_filter_low_top_page_bid_min = t),
                    name: "low_top_page_bid_min"
                }, null, 2), [
                    [le, e.low_top_page_bid_format],
                    [U, e.current_filter_low_top_page_bid_min]
                ]), S("span", ZL, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.low_top_page_bid_max
                    }]),
                    "onUpdate:modelValue": t[12] || (t[12] = t => e.current_filter_low_top_page_bid_max = t),
                    name: "low_top_page_bid_max"
                }, null, 2), [
                    [le, e.low_top_page_bid_format],
                    [U, e.current_filter_low_top_page_bid_max]
                ])])])) : T("", !0)]), S("div", eB, [e.current_permissions.show_high_top_page_bid_data ? (b(), g("div", tB, [S("label", rB, v(e.trans.get("Top of Page Bid (High Range)")), 1), S("div", sB, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.high_top_page_bid_min
                    }]),
                    "onUpdate:modelValue": t[13] || (t[13] = t => e.current_filter_high_top_page_bid_min = t),
                    name: "high_top_page_bid_min"
                }, null, 2), [
                    [le, e.high_top_page_bid_format],
                    [U, e.current_filter_high_top_page_bid_min]
                ]), S("span", aB, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.high_top_page_bid_max
                    }]),
                    "onUpdate:modelValue": t[14] || (t[14] = t => e.current_filter_high_top_page_bid_max = t),
                    name: "high_top_page_bid_max"
                }, null, 2), [
                    [le, e.high_top_page_bid_format],
                    [U, e.current_filter_high_top_page_bid_max]
                ])])])) : T("", !0)])])) : T("", !0)], 64)) : T("", !0), S("div", oB, [S("div", iB, [E(V, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[15] || (t[15] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[16] || (t[16] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", nB, [S("div", lB, [E(H, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[17] || (t[17] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(I, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, cB)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, _B)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(N, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[18] || (t[18] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(K, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(J, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(W, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", uB, [e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide ? (b(), g("div", dB, [E(z, {
                loading: e.loading,
                current_tab: e.current_tab,
                show_google_trends_chart: a.show_google_trends_chart,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                inittrends: e.inittrends,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "show_google_trends_chart", "summaries", "pie_summaries", "show_pie_chart", "inittrends", "current_permissions", "current_metrics_currency"]), !o.show_upsell || 1 != e.current_tab && 6 != e.current_tab && 3 != e.current_tab ? T("", !0) : (b(), x(Y, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name,
                search_engine: e.search_engine
            }, null, 8, ["routes", "selected_language_name", "search_engine"]))])) : T("", !0)], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", mB, [E(X, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(G, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(Q, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [6 == e.current_tab ? (b(), g("h4", hB, v(e.trans.get("Sorry, Google does not provide any prepositions for your query")), 1)) : 3 == e.current_tab ? (b(), g("h4", pB, v(e.trans.get("Sorry, Google does not provide any questions for your query")), 1)) : 2 == e.current_tab ? (b(), g("h4", gB, v(e.trans.get("Sorry, Google does not provide any related keywords for your query")), 1)) : (b(), g("h4", yB, v(e.trans.get("Sorry, Google does not provide any keyword suggestions for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Z, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(ne, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(ee, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(te, {
                    key: 1
                })) : T("", !0), E(re, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(se, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(te), E(ae, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(oe, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(ie, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    wB = {
        class: "row g-0 me-lg-n1px"
    },
    bB = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const vB = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "google-language-select2",
            languages_url: "/search/keywords/google/languages",
            rebuild_event: "google-language-rebuild",
            cookie: "google_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", wB, [S("div", bB, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    kB = {
        class: "row g-0 me-lg-n1px"
    },
    xB = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    CB = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const SB = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/google/languages",
            locations_url: "/search/keywords/google/locations",
            location_search_engine: "google",
            rebuild_event: "google-language-rebuild",
            cookie: "google_search_engine",
            location_container_css_class: "google-location-select2",
            location_fav_cookie: "google_locations_fav",
            language_container_css_class: "google-language-select2",
            language_fav_cookie: "google_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", kB, [S("div", xB, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a location")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", CB, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    TB = ["value"],
    FB = ["value"],
    qB = ["value"],
    EB = ["value"],
    UB = {
        key: 4,
        class: "row"
    },
    MB = {
        class: "col-12"
    },
    AB = {
        class: "check-search-volume-settings-locations mb-3"
    },
    PB = {
        key: 0,
        class: "form-label check-search-volume-settings-locations-label"
    },
    LB = {
        key: 1,
        class: "form-label check-search-volume-settings-locations-label"
    },
    BB = {
        key: 2,
        class: "check-search-volume-settings-locations-help form-text text-muted"
    },
    $B = {
        key: 5,
        class: "row"
    },
    DB = {
        class: "col-12"
    },
    jB = {
        class: "check-search-volume-settings-network mb-3"
    },
    OB = {
        class: "form-label check-search-volume-settings-network-label"
    },
    VB = {
        class: "form-check"
    },
    HB = ["id", "value"],
    IB = ["for"],
    NB = {
        key: 6,
        class: "row"
    },
    RB = {
        class: "col-12"
    },
    KB = {
        class: "check-search-volume-settings-currency mb-3"
    },
    JB = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const WB = Ue({
    mixins: [DT, NT],
    data: () => ({
        locations_settings: {},
        locations_limit: 10,
        locations_term: "",
        facet_filters: [],
        exclude_filters: []
    }),
    async created() {
        this.country_list && this.country_list.length && this.facet_filters.push(this.country_list.map((e => ({
            field: "country_code",
            value: e
        })))), this.exclude_locations && this.exclude_locations.length && this.exclude_filters.push(this.exclude_locations.map((e => ({
            field: "location_id",
            value: e
        })))), this.exclude_location_countries && this.exclude_location_countries.length && this.exclude_filters.push(this.exclude_location_countries.map((e => ({
            field: "country_code",
            value: e
        })))), this.location_country_only && this.facet_filters.push([{
            field: "location_type",
            value: "Country"
        }, {
            field: "location_type",
            value: "All Countries"
        }]), this.locations_settings = {
            load: async (e, t) => {
                this.locations_term = e;
                var r = {
                    query: e,
                    facets: "*,country_code",
                    facetFilters: this.facet_filters,
                    excludeFilters: this.exclude_filters,
                    hitsPerPage: this.locations_limit,
                    search_engine: "google"
                };
                this.locationSearchSuggest(r).then((e => {
                    if (e.query == this.locations_term) {
                        let r = e.hits ? e.hits : [];
                        t(this.processLocations(r))
                    } else t()
                }))
            },
            autocomplete: !0
        }, this.location_country_only || (this.locations_settings.maxItems = 10, this.locations_settings.multiple = !0)
    },
    methods: {
        processLocations(e) {
            return {
                results: e.map((e => ({
                    country: e.country_code,
                    html: this.locationResultsFormat(e),
                    id: e.location_id,
                    text: this.locationTextFormat(e)
                })))
            }
        },
        locationResults: e => e.loading ? "Searching..." : e.html ? e.html : e.text,
        async selectLocations(e) {
            this.current_metrics_country = e.country
        },
        allowHtml: e => e
    }
}, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("tom-select");
        return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
            key: 0,
            name: "metrics_location",
            type: "hidden",
            value: e.locations
        }, null, 8, TB)) : T("", !0), e.permissions.show_search_location_settings && e.location_country_only ? (b(), g("input", {
            key: 1,
            name: "metrics_country",
            type: "hidden",
            value: e.country
        }, null, 8, FB)) : T("", !0), e.permissions.show_search_network_settings ? (b(), g("input", {
            key: 2,
            name: "metrics_network",
            type: "hidden",
            value: e.network
        }, null, 8, qB)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
            key: 3,
            name: "metrics_currency",
            type: "hidden",
            value: e.currency
        }, null, 8, EB)) : T("", !0), e.permissions.show_search_location_settings ? (b(), g("div", UB, [S("div", MB, [S("div", AB, [e.location_country_only ? (b(), g("label", PB, v(e.trans.get("Location")), 1)) : (b(), g("label", LB, v(e.trans.get("Locations")), 1)), E(i, {
            multiple: a.locations_settings.multiple,
            settings: a.locations_settings,
            options: e.current_location_list,
            onSelect: t[0] || (t[0] = e => o.selectLocations(e)),
            class: "check-search-volume-settings-locations-value",
            id: "metrics_locations_selection",
            "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_location = t),
            "model-value": e.current_metrics_location,
            placeholder: e.trans.get("Type a location")
        }, null, 8, ["multiple", "settings", "options", "model-value", "placeholder"]), e.location_country_only ? T("", !0) : (b(), g("small", BB, v(e.trans.get("Enter one or up to 10 locations to target.")), 1))])])])) : T("", !0), e.current_network_list.length && e.permissions.show_search_network_settings ? (b(), g("div", $B, [S("div", DB, [S("div", jB, [S("label", OB, v(e.trans.get("Search Network")), 1), (b(!0), g(y, null, f(e.current_network_list, (r => (b(), g("div", VB, [F(S("input", {
            id: "google_network_" + r.id,
            class: "check-search-volume-settings-network-value form-check-input",
            type: "radio",
            "onUpdate:modelValue": t[2] || (t[2] = t => e.current_metrics_network = t),
            value: r.id
        }, null, 8, HB), [
            [O, e.current_metrics_network]
        ]), S("label", {
            for: "google_network_" + r.id,
            class: "check-search-volume-settings-network-label form-check-label"
        }, v(r.text), 9, IB)])))), 256))])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", NB, [S("div", RB, [S("div", KB, [S("label", JB, v(e.trans.get("Currency")), 1), E(i, {
            settings: e.currency_settings,
            options: e.current_currency_list,
            class: "check-search-volume-settings-currency-value",
            id: "metrics_currency_selection",
            "onUpdate:modelValue": t[3] || (t[3] = t => e.current_metrics_currency = t),
            "model-value": e.current_metrics_currency,
            placeholder: e.trans.get("Type a currency")
        }, null, 8, ["settings", "options", "model-value", "placeholder"])])])])) : T("", !0)])
    }]
]);
const zB = Ue({
        mixins: [_p],
        components: {},
        props: ["preoptions"],
        data() {
            return {
                container_css_class: "google-trends-category-select2",
                rebuild_event: "google-trends-category-rebuild",
                cookie: "google_trends_search_engine",
                options_data: this.preoptions
            }
        },
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), x(i, {
                disabled: e.loading,
                id: "category_" + e.id,
                options: e.options,
                required: !0,
                settings: e.settings,
                name: "category",
                "model-value": e.category,
                class: w("rounded-top-end-0 rounded-bottom-end-0"),
                placeholder: e.trans.get("Type a category")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])
        }]
    ]),
    YB = {
        class: "row g-0"
    },
    GB = {
        class: "col-12 my-1"
    };
const XB = Ue({
        components: {},
        data: () => ({
            country: "",
            id: null,
            loading: !0,
            options: [],
            settings: {},
            search_type: null,
            url: "/search/keywords/google-trends/countries"
        }),
        computed: {
            placeholder() {
                return this.loading ? "Loading..." : ""
            }
        },
        async created() {
            this.id = se(), this.search_type = window.param("search_type"), this.settings = {
                containerCssClass: " country-dropdown form-control google-trends-country-select2 rounded-top-start-md-0 rounded-bottom-start-md-0 rounded-top-end-lg-0 rounded-bottom-end-lg-0 pe-3",
                create: !1,
                allowEmptyOption: !1,
                duplicates: !1,
                preload: !0,
                favCookie: "google_trends_locations_fav"
            }, this.build(), xe("google-trends-country-rebuild", (e => {
                this.search_type = e, this.build()
            }))
        },
        methods: {
            async build() {
                this.options = [], this.loading = !0, Ce("loading-country", !0);
                let e = await axios.get(this.url, {
                    country: window.param("country"),
                    search_type: this.search_type
                });
                this.country = e.data && e.data.selected ? e.data.selected.id : "GLB", this.options = e.data && e.data.countries ? e.data.countries : [], this.loading = !1, Ce("loading-country", !1)
            },
            allowHtml: e => e,
            countryResults: (e, t) => e.html ? e.html : e.text
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", YB, [S("div", GB, [E(i, {
                disabled: a.loading,
                id: "country_" + a.id,
                options: a.options,
                required: !0,
                settings: a.settings,
                name: "country",
                "model-value": a.country,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    QB = {
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        data: () => ({
            show_google_trends_chart: !0,
            has_embed: !1
        }),
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading && !this.has_embed
            }
        },
        async mounted() {
            this.$nextTick((() => {
                this.initTrends()
            })), await this.defaultValue(), this.showFilter(), this.fetch()
        },
        methods: {
            async initTrends() {
                await new Promise((async (e, t) => {
                    var r = document.createElement("div");
                    r.classList.add("d-none"), r.setAttribute("style", "display:none");
                    var s = document.createElement("tr");
                    s.classList.add("d-none"), r.appendChild(s);
                    var a = document.createElement("td");
                    a.setAttribute("id", "chart_embedinit"), s.appendChild(a), document.body.appendChild(r);
                    var o = document.createElement("script");
                    o.async = !0, o.onload = () => {
                        e(!0)
                    }, o.src = "https://ssl.gstatic.com/trends_nrtr/760_RC08/embed_loader.js", document.body.appendChild(o)
                }))
            },
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.sort_by = "keywords", this.sort_direction = "Asc", this.summaries = {}, this.pie_summaries = {};
                try {
                    var e;
                    this.error = this.list = null;
                    var t = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    e = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify({}))
                    }, {
                        headers: t
                    }), this.has_all_error = e.data.has_all_error, this.has_error = e.data.has_error, this.keywords = e.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = e.data.breakdown_url ? e.data.breakdown_url : null, this.device_breakdown_url = e.data.device_breakdown_url ? e.data.device_breakdown_url : null, this.keywords_payload = e.data.keywords_payload, this.metrics_url = e.data.metrics_url, await this.metrics(!0), this.current_permissions.show_search_volume_data && this.keywords.length > 0 && this.embed(this.keywords[0].keyword_source, this.keywords[0].id)
                } catch (r) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("google-trends-category-rebuild", e), Ce("google-trends-country-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            },
            embed(e, t) {
                if ("undefined" != typeof trends) {
                    var r = document.getElementById("chart_" + t);
                    r && r.parentNode && "TR" == r.parentNode.nodeName && (r.parentNode.classList.contains("d-none") ? (r.parentNode.classList.remove("d-none"), r.parentNode.classList.add("embed"), trends.embed.renderExploreWidgetTo(r, "TIMESERIES", {
                        comparisonItem: [{
                            keyword: e,
                            geo: this.geo,
                            time: "today 12-m"
                        }],
                        category: 0,
                        property: this.property
                    }, {
                        exploreQuery: "cat=0&geo=" + this.geo + "&gprop=" + this.property + "&q=" + encodeURIComponent(e) + "&date=today 12-m",
                        guestPath: "https://trends.google.com:443/trends/embed/"
                    }), "embedinit" != t && (this.has_embed = !0)) : (r.parentNode.classList.remove("embed"), r.parentNode.classList.add("d-none"), r.innerHTML = "", "embedinit" != t && document.querySelectorAll("tr.embed.iframe-google-trends-chart").length <= 0 && (this.has_embed = !1)))
                }
            }
        }
    },
    ZB = {
        class: "search-results-settings my-2"
    },
    e$ = {
        class: "search-results-settings-display mx-n1"
    },
    t$ = {
        class: "row"
    },
    r$ = {
        class: "col"
    },
    s$ = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    a$ = {
        class: "row"
    },
    o$ = {
        key: 0,
        class: "col-12 col-md-6"
    },
    i$ = {
        key: 1,
        class: "col-12 col-md-6"
    },
    n$ = {
        class: "row"
    },
    l$ = {
        class: "col"
    },
    c$ = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    _$ = {
        key: 1,
        class: "row"
    },
    u$ = {
        class: "col-12 col-md-6"
    },
    d$ = {
        class: "col-12 col-md-6"
    },
    m$ = {
        class: "row"
    },
    h$ = {
        class: "col-12"
    },
    p$ = {
        class: "row"
    },
    g$ = {
        class: "col-12"
    },
    y$ = {
        key: 2,
        class: "alert-pro-upsell alert-pro-upsell-above-summary mb-4 mt-2",
        role: "alert"
    },
    f$ = {
        class: "row"
    },
    w$ = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1),
    b$ = {
        class: "col-sm-12 col-md-12 col-lg-10"
    },
    v$ = {
        class: "card text-center shadow"
    },
    k$ = {
        class: "card-body"
    },
    x$ = S("h5", {
        class: "card-title"
    }, " 🚀 Keyword Tool Pro ", -1),
    C$ = {
        class: "card-text"
    },
    S$ = ["innerHTML"],
    T$ = ["href"],
    F$ = S("i", {
        class: "bi bi-box-arrow-in-right me-1"
    }, null, -1),
    q$ = ["innerHTML"],
    E$ = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1),
    U$ = {
        class: "search-results-summary card my-4 bg-light"
    },
    M$ = {
        class: "card-body"
    },
    A$ = {
        class: "search-results-keywords my-3"
    },
    P$ = {
        class: "mb-4"
    };
const L$ = Ue(QB, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-location-name"),
                c = k("current-metrics-language-name"),
                _ = k("current-metrics-network"),
                u = k("current-filter-search-volume"),
                d = k("current-filter-search-volume-trend"),
                m = k("current-filter-average-cpc"),
                h = k("current-filter-bing-competition"),
                p = k("current-filter-competition"),
                f = k("current-split-filter-keywords"),
                w = k("current-split-filter-negative-keywords"),
                q = k("search-results-settings-modal-search-network"),
                U = k("search-results-settings-modal-currency"),
                M = k("search-results-settings-modal-search-volume"),
                A = k("search-results-settings-modal-search-volume-trend"),
                P = k("search-results-settings-modal-average-cpc"),
                L = k("search-results-settings-modal-bing-competition"),
                $ = k("search-results-settings-modal-competition"),
                D = k("search-results-settings-filter-positive-keywords"),
                j = k("search-results-settings-filter-negative-keywords"),
                O = k("search-results-settings-modal-keyword-result-period"),
                V = k("search-results-settings-modal"),
                H = k("search-results-tabs"),
                I = k("has-error"),
                N = k("suggest-page-reload"),
                R = k("google-search-volume-summary"),
                K = k("show-upsell"),
                J = k("google-search-volume-result"),
                W = k("search-results-table-wrapper"),
                z = k("search-results-no-keyword-found"),
                Y = k("has-more"),
                G = k("dropdown-menu-item-add-basket"),
                X = k("dropdown-menu-item-divider"),
                Q = k("dropdown-menu-item-export-excel"),
                Z = k("dropdown-menu-item-export-csv"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", ZB, [S("div", e$, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_location_name: e.show_current_metrics_location_name,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_location_name", "show_metrics_is_estimated"]), E(c, {
                current_permissions: e.current_permissions,
                show_current_metrics_language_name: e.show_current_metrics_language_name,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_language_name", "show_metrics_is_estimated"]), E(_, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(d, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(m, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(h, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(p, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(f, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(w, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(V, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [S("div", t$, [S("div", r$, [S("h5", s$, v(e.trans.get("Search Volume Settings")), 1)])]), S("div", a$, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", o$, [E(q, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", i$, [E(U, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)])], 64)) : T("", !0), S("div", n$, [S("div", l$, [S("h5", c$, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", _$, [S("div", u$, [E(M, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(A, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", d$, [E(P, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(L, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x($, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", m$, [S("div", h$, [E(D, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", p$, [S("div", g$, [E(j, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), e.user_is_paid || e.current_permissions.pro_is_paused ? T("", !0) : (b(), g("div", y$, [S("div", f$, [w$, S("div", b$, [S("div", v$, [S("div", k$, [x$, S("div", C$, [S("p", {
                    innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                        count_free: 5
                    })
                }, null, 8, S$)]), S("a", {
                    href: e.routes.page_pro_index,
                    target: "_blank",
                    rel: "noopener",
                    class: "btn btn-warning"
                }, [F$, S("span", {
                    innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                        count_pro: "2,000"
                    })
                }, null, 8, q$)], 8, T$)])])]), E$])])), E(O, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(H, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(I, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(N, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", U$, [S("div", M$, [E(R, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), !o.show_upsell || 8 != e.current_tab && 9 != e.current_tab ? T("", !0) : (b(), x(K, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", A$, [E(W, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(J, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    onEmbed: o.embed,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "onEmbed", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [S("h4", P$, v(e.trans.get("Sorry, Google Trends does not provide any keyword suggestions for your query")), 1)])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Y, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(G, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(X, {
                    key: 1
                })) : T("", !0), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(X), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    B$ = {
        components: {
            "pie-chart": hp
        },
        props: {
            loading: {
                type: Boolean,
                required: !0,
                default: !1
            },
            show_pie_chart: {
                type: Boolean,
                required: !0,
                default: !1
            },
            current_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            show_google_trends_chart: {
                type: Boolean,
                required: !1,
                default: !1
            },
            show_settings_button: {
                type: Boolean,
                required: !1,
                default: !0
            },
            summaries: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            pie_summaries: {
                type: [Array, Object],
                required: !0,
                default: function() {
                    return {}
                }
            },
            inittrends: {
                type: Function,
                required: !1,
                default: function() {}
            },
            current_permissions: {
                type: Object,
                required: !0,
                default: function() {
                    return {}
                }
            },
            current_metrics_currency: {
                type: String,
                required: !1,
                default: ""
            }
        },
        data: () => ({}),
        mounted() {
            this.initPopover()
        },
        updated() {
            this.initPopover()
        },
        beforeUnmount() {
            this.$nextTick((() => {
                this.popoverList.forEach((e => {
                    e.dispose()
                }))
            }))
        },
        computed: {},
        methods: {
            initPopover() {
                this.$nextTick((() => {
                    var e = document.querySelectorAll('[data-bs-toggle="popover-sv-summary"]');
                    this.popoverList = [...e].map((e => new bootstrap.Popover(e, {
                        sanitize: !1,
                        html: !0
                    })))
                }))
            }
        }
    },
    $$ = {
        class: "row g-0"
    },
    D$ = {
        class: "col-xl-11 col-lg-11 col-12"
    },
    j$ = {
        class: "row row-cols-md-3 row-cols-lg-3 row-cols-xl-3"
    },
    O$ = {
        class: "col my-1"
    },
    V$ = {
        key: 0,
        class: "search-results-summary-unique-keywords-label"
    },
    H$ = {
        key: 1,
        class: "search-results-summary-unique-keywords-label"
    },
    I$ = {
        key: 2,
        class: "search-results-summary-unique-keywords-label"
    },
    N$ = {
        class: "search-results-summary-unique-keywords-value h3"
    },
    R$ = {
        key: 0
    },
    K$ = {
        key: 1
    },
    J$ = {
        key: 0,
        class: "col my-1"
    },
    W$ = {
        key: 0
    },
    z$ = {
        class: "search-results-summary-total-post-label"
    },
    Y$ = {
        key: 0,
        class: "search-results-summary-total-posts-value h3"
    },
    G$ = {
        key: 0
    },
    X$ = {
        key: 1
    },
    Q$ = {
        key: 1,
        class: "search-results-summary-posts-value text-blur h3"
    },
    Z$ = {
        class: "col my-1"
    },
    eD = {
        key: 0
    },
    tD = {
        class: "search-results-summary-total-search-volume-label"
    },
    rD = ["data-bs-content"],
    sD = {
        key: 0,
        class: "search-results-summary-total-search-volume-value h3"
    },
    aD = {
        key: 0
    },
    oD = {
        key: 1,
        class: "text-muted"
    },
    iD = ["data-bs-content"],
    nD = {
        key: 1,
        class: "search-results-summary-search-volume-value text-blur h3"
    },
    lD = {
        class: "col my-1"
    },
    cD = {
        key: 0
    },
    _D = {
        class: "search-results-summary-average-trend-label"
    },
    uD = ["data-bs-content"],
    dD = {
        key: 0,
        class: "search-results-summary-average-trend-value h3"
    },
    mD = {
        key: 0
    },
    hD = {
        key: 0,
        class: "text-success"
    },
    pD = S("i", {
        class: "bi bi-arrow-up"
    }, null, -1),
    gD = {
        key: 1,
        class: "text-danger"
    },
    yD = S("i", {
        class: "bi bi-arrow-down"
    }, null, -1),
    fD = {
        key: 2
    },
    wD = {
        key: 0
    },
    bD = {
        key: 1,
        class: "text-muted"
    },
    vD = ["data-bs-content"],
    kD = {
        key: 1,
        class: "search-results-summary-average-trend-value text-blur h3"
    },
    xD = {
        key: 1,
        class: "col my-1"
    },
    CD = {
        key: 0
    },
    SD = {
        class: "search-results-summary-average-cpc-label"
    },
    TD = ["data-bs-content"],
    FD = {
        key: 0,
        class: "search-results-summary-average-cpc-value h3"
    },
    qD = {
        key: 0
    },
    ED = {
        key: 1,
        class: "text-muted"
    },
    UD = ["data-bs-content"],
    MD = {
        key: 1,
        class: "search-results-summary-average-cpc-value text-blur h3"
    },
    AD = {
        key: 1
    },
    PD = {
        class: "search-results-summary-top-page-bid-label"
    },
    LD = {
        class: "row"
    },
    BD = {
        class: "col"
    },
    $D = {
        key: 0,
        class: "search-results-summary-low-top-page-bid-value h5 mb-0"
    },
    DD = {
        key: 0
    },
    jD = {
        key: 1,
        class: "text-muted"
    },
    OD = ["data-bs-content"],
    VD = {
        key: 1,
        class: "search-results-summary-low-top-page-bid-value text-blur h3"
    },
    HD = {
        key: 0,
        class: "row"
    },
    ID = {
        class: "col"
    },
    ND = {
        key: 0,
        class: "search-results-summary-high-top-page-bid-value h3"
    },
    RD = {
        key: 0
    },
    KD = {
        key: 1,
        class: "text-muted"
    },
    JD = ["data-bs-content"],
    WD = {
        key: 1,
        class: "search-results-summary-high-top-page-bid-value text-blur h3"
    },
    zD = {
        class: "col my-1"
    },
    YD = {
        key: 0
    },
    GD = {
        class: "search-results-summary-average-competition-label"
    },
    XD = ["data-bs-content"],
    QD = {
        key: 0,
        class: "search-results-summary-average-competition-value h3"
    },
    ZD = {
        key: 0
    },
    ej = {
        key: 0
    },
    tj = {
        key: 1
    },
    rj = {
        key: 1,
        class: "text-muted"
    },
    sj = ["data-bs-content"],
    aj = {
        key: 1,
        class: "search-results-summary-average-competition-value text-blur h3"
    },
    oj = {
        class: "col-1"
    },
    ij = {
        class: "row"
    },
    nj = {
        class: "col my-1"
    },
    lj = {
        key: 0
    },
    cj = {
        class: "search-results-settings-modal btn btn-outline-primary float-lg-end text-nowrap",
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        type: "button"
    },
    _j = S("i", {
        class: "bi bi-gear me-1"
    }, null, -1),
    uj = {
        key: 0,
        class: "row mt-2"
    };
const dj = {
        mixins: [mp],
        components: {
            "instagram-search-volume-summary": Ue(B$, [
                ["render", function(e, t, r, s, a, o) {
                    const i = k("bar-chart"),
                        n = k("pie-chart");
                    return b(), g("div", null, [S("div", $$, [S("div", D$, [S("div", j$, [S("div", O$, [7 == r.current_tab ? (b(), g("div", V$, v(e.trans.get("Total Hashtags")), 1)) : 10 == r.current_tab ? (b(), g("div", H$, v(e.trans.get("Total People")), 1)) : (b(), g("div", I$, v(e.trans.get("Total Keywords")), 1)), S("div", N$, [r.summaries.search_total_keywords_format ? (b(), g("span", R$, v(r.summaries.search_total_keywords_format), 1)) : (b(), g("span", K$, v(e.$filters.digit(r.summaries.total_keywords)), 1))])]), 7 == r.current_tab ? (b(), g("div", J$, [r.current_permissions.show_posts_column ? (b(), g("div", W$, [S("div", z$, v(e.trans.get("Total Posts")), 1), r.current_permissions.show_posts_data ? (b(), g("div", Y$, [r.summaries.total_posts_format ? (b(), g("span", G$, v(r.summaries.total_posts_format), 1)) : (b(), g("span", X$, v(e.$filters.digit(r.summaries.total_posts)), 1))])) : (b(), g("div", Q$, "88,888"))])) : T("", !0)])) : T("", !0), S("div", Z$, [r.current_permissions.show_search_volume_column ? (b(), g("div", eD, [S("div", tD, [A(v(e.trans.get("Total Search Volume")) + " ", 1), S("i", {
                        class: "bi bi-info-circle-fill ms-1",
                        "data-bs-content": e.trans.get("Total Search Volume is the sum of Search Volume values for keywords that were found."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, null, 8, rD)]), r.current_permissions.show_search_volume_data ? (b(), g("div", sD, [r.summaries.search_volume_format ? (b(), g("div", aD, v(r.summaries.search_volume_format), 1)) : (b(), g("div", oD, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, iD)]))])) : (b(), g("div", nD, "88,888"))])) : T("", !0)]), S("div", lD, [r.current_permissions.show_search_volume_column ? (b(), g("div", cD, [S("div", _D, [A(v(e.trans.get("Average Trend")) + " ", 1), S("i", {
                        class: "bi bi-info-circle-fill ms-1",
                        "data-bs-content": e.trans.get("Average Trend is the average of Trend values for keywords that were found."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, null, 8, uD)]), r.current_permissions.show_search_volume_data ? (b(), g("div", dD, [r.summaries.search_volume_trend_format ? (b(), g("div", mD, [r.summaries.search_volume_trend > 0 ? (b(), g("span", hD, [pD, A(" " + v(r.summaries.search_volume_trend_format), 1)])) : r.summaries.search_volume_trend < 0 ? (b(), g("span", gD, [yD, A(" " + v(r.summaries.search_volume_trend_format), 1)])) : (b(), g("span", fD, [0 == r.summaries.search_volume_trend ? (b(), g("span", wD)) : T("", !0), A(" " + v(r.summaries.search_volume_trend_format), 1)]))])) : (b(), g("div", bD, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, vD)]))])) : (b(), g("div", kD, "88%"))])) : T("", !0)]), 12 != r.current_tab ? (b(), g("div", xD, [r.current_permissions.show_cpc_column ? (b(), g("div", CD, [S("div", SD, [A(v(e.trans.get("Average CPC")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g(y, {
                        key: 0
                    }, [A("(" + v(r.current_metrics_currency) + ") ", 1)], 64)) : T("", !0), S("i", {
                        class: "bi bi-info-circle-fill ms-1",
                        "data-bs-content": e.trans.get("Average CPC is the average of CPC values for keywords that were found."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, null, 8, TD)]), r.current_permissions.show_cpc_data ? (b(), g("div", FD, [r.summaries.average_cpc_format ? (b(), g("div", qD, v(r.summaries.average_cpc_format), 1)) : (b(), g("div", ED, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, UD)]))])) : (b(), g("div", MD, "8.88"))])) : r.current_permissions.show_low_top_page_bid_column || r.current_permissions.show_high_top_page_bid_column ? (b(), g("div", AD, [S("div", PD, [A(v(e.trans.get("Top of Page Bid")) + " ", 1), r.current_permissions.show_currency_data && r.current_metrics_currency ? (b(), g(y, {
                        key: 0
                    }, [A("(" + v(r.current_metrics_currency) + ") ", 1)], 64)) : T("", !0)]), S("div", LD, [S("div", BD, [r.current_permissions.show_low_top_page_bid_data ? (b(), g("div", $D, [r.summaries.low_top_page_bid ? (b(), g("div", DD, v(r.summaries.low_top_page_bid_format) + " (" + v(e.trans.get("Low")) + ")", 1)) : (b(), g("div", jD, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, OD)]))])) : (b(), g("div", VD, "8.88"))])]), r.summaries.low_top_page_bid && r.summaries.high_top_page_bid ? (b(), g("div", HD, [S("div", ID, [r.current_permissions.show_high_top_page_bid_data ? (b(), g("div", ND, [r.summaries.high_top_page_bid ? (b(), g("div", RD, v(r.summaries.high_top_page_bid_format) + " (" + v(e.trans.get("High")) + ")", 1)) : (b(), g("div", KD, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, JD)]))])) : (b(), g("div", WD, "8.88"))])])) : T("", !0)])) : T("", !0)])) : T("", !0), S("div", zD, [r.current_permissions.show_competition_column ? (b(), g("div", YD, [S("div", GD, [A(v(e.trans.get("Average Competition")) + " ", 1), S("i", {
                        class: "bi bi-info-circle-fill ms-1",
                        "data-bs-content": e.trans.get("Average Competition is the average of Competition values for keywords that were found."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, null, 8, XD)]), r.current_permissions.show_competition_data ? (b(), g("div", QD, [r.summaries.competition_format ? (b(), g("div", ZD, ["" !== r.summaries.competition_class && null !== r.summaries.competition_class ? (b(), g("span", ej, [S("span", {
                        class: w(r.summaries.competition_class)
                    }, v(r.summaries.competition_format), 3)])) : (b(), g("span", tj, v(r.summaries.competition_format), 1))])) : (b(), g("div", rj, [S("span", {
                        class: "cursor-help",
                        "data-bs-content": e.trans.get("Sorry, Google does not provide data for these keywords at the moment."),
                        "data-bs-toggle": "popover-sv-summary",
                        "data-bs-placement": "bottom",
                        "data-bs-trigger": "hover focus"
                    }, "-", 8, sj)]))])) : (b(), g("div", aj, "8.88"))])) : T("", !0)])])]), S("div", oj, [S("div", ij, [S("div", nj, [r.show_settings_button ? (b(), g("div", lj, [S("button", cj, [_j, S("span", null, v(e.trans.get("Settings")), 1)])])) : T("", !0)])])])]), r.current_permissions.show_search_volume_data && r.summaries.search_volume_trend_data ? (b(), g("div", uj, [S("div", {
                        class: w(r.show_pie_chart ? "col-lg-9 col-md-8 col-sm-12" : "col-lg-12")
                    }, [E(i, {
                        styles: r.show_pie_chart ? {
                            position: "relative",
                            margin: "auto",
                            height: "28vh"
                        } : {
                            position: "relative",
                            margin: "auto",
                            height: "24vh"
                        },
                        maintainAspectRatio: !1,
                        charttitle: r.summaries.search_volume_trend_title,
                        chartlabels: r.summaries.search_volume_trend_labels,
                        chartdata: r.summaries.search_volume_trend_data
                    }, null, 8, ["styles", "charttitle", "chartlabels", "chartdata"])], 2), r.show_pie_chart ? (b(), g("div", {
                        key: 0,
                        class: w(r.show_pie_chart ? "col-lg-3 col-md-4 d-none d-lg-block d-md-block" : "")
                    }, [E(n, {
                        height: 220,
                        charttitle: "",
                        chartlabels: r.pie_summaries.search_volume_trend_labels,
                        chartdata: r.pie_summaries.search_volume_trend_data
                    }, null, 8, ["chartlabels", "chartdata"])], 2)) : T("", !0)])) : T("", !0)])
                }]
            ]),
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_posts_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e = !1,
                    t = {},
                    r = 0,
                    s = 0;
                if (this.current_scrape_urls) {
                    var a = [];
                    for (var o in this.current_scrape_urls) this.current_scrape_urls.hasOwnProperty(o) && (a.push({
                        url: this.current_scrape_urls[o],
                        term: o
                    }), s++);
                    try {
                        var i = await Promise.all(a.map((e => new Promise(((t, s) => {
                            let a = new XMLHttpRequest,
                                o = e.url;
                            a.timeout = 12e3, a.open("GET", o, !0), a.overrideMimeType("application/json"), a.send(), a.onload = () => {
                                try {
                                    if (a.readyState === a.DONE && 200 === a.status) {
                                        let r = JSON.parse(a.responseText);
                                        if (r.url = e.url, r.term = e.term, this.keywords.length <= 100) {
                                            if (void 0 !== r.hashtags)
                                                for (let e = 0; e < r.hashtags.length; e++) {
                                                    let t = r.hashtags[e];
                                                    if (void 0 !== t.hashtag.name) s = (s = "#" + t.hashtag.name.toLowerCase()).replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>"), this.keywords.push({
                                                        keyword: s,
                                                        keyword_rank: 0
                                                    })
                                                }
                                            if (void 0 !== r.users)
                                                for (let e = 0; e < r.users.length; e++) {
                                                    let t = r.users[e];
                                                    if (void 0 !== t.user.username) s = (s = "@" + t.user.username.toLowerCase()).replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>"), this.keywords.push({
                                                        keyword: s,
                                                        keyword_rank: 0
                                                    })
                                                }
                                            if (void 0 !== r.res && void 0 !== r.res.sug)
                                                for (let e = 0; e < r.res.sug.length; e++) {
                                                    var s = r.res.sug[e].toLowerCase().replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                    this.keywords.push({
                                                        keyword: s,
                                                        keyword_rank: 0
                                                    })
                                                }
                                        }
                                        t(r)
                                    } else r++, t(!1)
                                } catch (o) {
                                    r++, t(!1)
                                }
                            }, a.onerror = () => {
                                r++, t(!1)
                            }, a.ontimeout = () => {
                                r++, t(!1)
                            }
                        })))))
                    } catch (c) {
                        console.log(c)
                    }
                    if (s > 0 && s == r && (e = !0), e && this.captcha_url) return window.location.href = this.url_add_param(this.captcha_url, "redirect", window.location.href), !1;
                    i && i.map((e => {
                        e && (t[e.term] = e)
                    }))
                }
                try {
                    var n;
                    this.error = this.list = null;
                    var l = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    n = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(t))
                    }, {
                        headers: l
                    }), this.has_all_error = n.data.has_all_error, this.has_error = n.data.has_error, this.keywords = n.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = n.data.breakdown_url ? n.data.breakdown_url : null, this.device_breakdown_url = n.data.device_breakdown_url ? n.data.device_breakdown_url : null, this.keywords_payload = n.data.keywords_payload, this.metrics_url = n.data.metrics_url, this.current_scrape_urls = n.data.scrape_urls, await this.metrics(!0)
                } catch (c) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("instagram-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    },
    mj = {
        class: "search-results-settings my-2"
    },
    hj = {
        class: "search-results-settings-display mx-n1"
    },
    pj = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-posts btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    gj = {
        class: "search-results-settings-display-posts-label"
    },
    yj = {
        key: 0,
        class: "search-results-settings-display-posts-value"
    },
    fj = {
        key: 1,
        class: "search-results-settings-display-posts-value"
    },
    wj = {
        key: 2,
        class: "search-results-settings-display-posts-value"
    },
    bj = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-full-name btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    vj = {
        class: "search-results-settings-display-full-name-label"
    },
    kj = {
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        class: "search-results-settings-display-full-name-value cursor-pointer"
    },
    xj = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-is-private btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    Cj = {
        class: "search-results-settings-display-is-private-label"
    },
    Sj = {
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        class: "search-results-settings-display-is-private-value cursor-pointer"
    },
    Tj = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-is-verified btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    Fj = {
        class: "search-results-settings-display-is-verified-label"
    },
    qj = {
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        class: "search-results-settings-display-is-verified-value cursor-pointer"
    },
    Ej = {
        key: 0,
        class: "row"
    },
    Uj = {
        class: "col"
    },
    Mj = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    Aj = {
        key: 1,
        class: "row"
    },
    Pj = {
        class: "col-12 col-md-6"
    },
    Lj = {
        class: "search-results-settings-modal-country mb-3"
    },
    Bj = {
        class: "form-label search-results-settings-modal-country-label"
    },
    $j = ["value"],
    Dj = {
        key: 0,
        class: "col-12 col-md-6"
    },
    jj = {
        class: "search-results-settings-modal-currency mb-3"
    },
    Oj = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    Vj = {
        key: 2,
        class: "row"
    },
    Hj = {
        key: 0,
        class: "col-12 col-md-6"
    },
    Ij = {
        key: 1,
        class: "col-12 col-md-6"
    },
    Nj = {
        class: "row"
    },
    Rj = {
        class: "col"
    },
    Kj = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    Jj = {
        key: 1,
        class: "row"
    },
    Wj = {
        class: "col-12 col-md-6"
    },
    zj = {
        class: "col-12 col-md-6"
    },
    Yj = {
        key: 2,
        class: "row"
    },
    Gj = {
        class: "col-12 col-md-6"
    },
    Xj = {
        class: "search-results-settings-modal-posts mb-3"
    },
    Qj = {
        class: "form-label search-results-settings-modal-posts-label"
    },
    Zj = {
        class: "search-results-settings-modal-posts-value input-group"
    },
    eO = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    tO = {
        key: 3,
        class: "row"
    },
    rO = {
        class: "col"
    },
    sO = {
        class: "search-results-settings-modal-is-private mb-3"
    },
    aO = {
        class: "form-label search-results-settings-modal-is-private-label"
    },
    oO = {
        class: "form-check"
    },
    iO = ["checked"],
    nO = S("label", {
        class: "form-check-label",
        for: "is-private-any"
    }, " Any ", -1),
    lO = {
        class: "form-check"
    },
    cO = ["checked"],
    _O = S("label", {
        class: "form-check-label",
        for: "is-private-yes"
    }, " Yes ", -1),
    uO = {
        class: "form-check disabled"
    },
    dO = ["checked"],
    mO = S("label", {
        class: "form-check-label",
        for: "is-private-no"
    }, " No ", -1),
    hO = {
        class: "col"
    },
    pO = {
        class: "search-results-settings-modal-is-verified mb-3"
    },
    gO = {
        class: "form-label search-results-settings-modal-is-verified-label"
    },
    yO = {
        class: "form-check"
    },
    fO = ["checked"],
    wO = S("label", {
        class: "form-check-label",
        for: "is-verified-any"
    }, " Any ", -1),
    bO = {
        class: "form-check"
    },
    vO = ["checked"],
    kO = S("label", {
        class: "form-check-label",
        for: "is-verified-yes"
    }, " Yes ", -1),
    xO = {
        class: "form-check disabled"
    },
    CO = ["checked"],
    SO = S("label", {
        class: "form-check-label",
        for: "is-verified-no"
    }, " No ", -1),
    TO = {
        class: "row"
    },
    FO = {
        class: "col-12"
    },
    qO = {
        class: "row"
    },
    EO = {
        class: "col-12"
    },
    UO = {
        key: 4,
        class: "row"
    },
    MO = {
        class: "col-12"
    },
    AO = {
        class: "search-results-settings-modal-filter-full-name mb-3"
    },
    PO = {
        class: "form-label search-results-settings-modal-filter-full-name-label"
    },
    LO = {
        class: "search-results-settings-modal-filter-full-name-help form-text text-muted"
    },
    BO = {
        class: "search-results-summary card my-4 bg-light"
    },
    $O = {
        key: 0,
        class: "card-body"
    },
    DO = ["innerHTML"],
    jO = ["innerHTML"],
    OO = ["innerHTML"],
    VO = ["innerHTML"],
    HO = ["innerHTML"],
    IO = {
        class: "search-results-keywords my-3"
    },
    NO = {
        key: 0,
        class: "mb-4"
    },
    RO = {
        key: 1,
        class: "mb-4"
    },
    KO = S("i", {
        class: "bi bi-clipboard me-1"
    }, null, -1);
const JO = Ue(dj, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                q = k("search-results-settings-modal-search-network"),
                M = k("search-results-settings-modal-currency"),
                P = k("search-results-settings-modal-search-volume"),
                $ = k("search-results-settings-modal-search-volume-trend"),
                D = k("search-results-settings-modal-average-cpc"),
                j = k("search-results-settings-modal-bing-competition"),
                V = k("search-results-settings-modal-competition"),
                H = k("search-results-settings-filter-positive-keywords"),
                I = k("search-results-settings-filter-negative-keywords"),
                N = k("tag-input"),
                R = k("search-results-settings-modal-keyword-result-period"),
                K = k("search-results-settings-modal"),
                J = k("search-results-tabs"),
                W = k("has-error"),
                z = k("suggest-page-reload"),
                Y = k("instagram-search-volume-summary"),
                G = k("show-upsell"),
                X = k("google-search-volume-result"),
                Q = k("search-results-table-wrapper"),
                Z = k("search-results-no-keyword-found"),
                ee = k("has-more"),
                te = k("dropdown-menu-item-add-basket"),
                re = k("dropdown-menu-item-divider"),
                se = k("dropdown-menu-item-export-excel"),
                ae = k("dropdown-menu-item-export-csv"),
                oe = k("dropdown-menu-item-copy-keywords"),
                ie = k("dropdown-menu-item-copy-keywords-search-volume"),
                ne = k("dropdown-menu-item-copy-keywords-all-data"),
                le = k("search-results-actions"),
                ce = L("mask");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", mj, [S("div", hj, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), e.current_permissions.show_posts_data ? (b(), g(y, {
                key: 0
            }, [e.show_current_filter_posts_min > 0 || e.show_current_filter_posts_max > 0 ? (b(), g("button", pj, [S("strong", gj, v(e.trans.get("Posts")) + ":", 1), e.show_current_filter_posts_min > 0 && e.show_current_filter_posts_max > 0 ? (b(), g("span", yj, v(e.$filters.digit(e.show_current_filter_posts_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(e.show_current_filter_posts_max)), 1)) : e.show_current_filter_posts_min > 0 && !e.show_current_filter_posts_max ? (b(), g("span", fj, v(e.trans.get("more than")) + " " + v(e.$filters.digit(e.show_current_filter_posts_min)), 1)) : !e.show_current_filter_posts_min && e.show_current_filter_posts_max > 0 ? (b(), g("span", wj, v(e.trans.get("less than")) + " " + v(e.$filters.digit(e.show_current_filter_posts_max)), 1)) : T("", !0), S("a", {
                onClick: t[0] || (t[0] = t => e.clearFilter("posts")),
                class: "search-results-settings-display-posts-remove ms-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 2,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"]), e.current_permissions.show_full_name_data ? (b(), g(y, {
                key: 3
            }, [e.show_current_split_filter_full_name ? (b(), g("button", bj, [S("strong", vj, v(e.trans.get("Full Name")) + ":", 1), S("span", kj, v(e.show_current_split_filter_full_name), 1), S("a", {
                class: "search-results-settings-display-full-name-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[1] || (t[1] = t => e.clearFilter("full_name", "all"))
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_is_private_data ? (b(), g(y, {
                key: 4
            }, [e.show_current_filter_is_private ? (b(), g("button", xj, [S("strong", Cj, v(e.trans.get("Is Private")) + ":", 1), S("span", Sj, v(e.format_boolean_filter(e.show_current_filter_is_private)), 1), S("a", {
                class: "search-results-settings-display-is-private-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[2] || (t[2] = t => e.clearFilter("is_private", "all"))
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_is_verified_data ? (b(), g(y, {
                key: 5
            }, [e.show_current_filter_is_verified ? (b(), g("button", Tj, [S("strong", Fj, v(e.trans.get("Is Verified")) + ":", 1), S("span", qj, v(e.format_boolean_filter(e.show_current_filter_is_verified)), 1), S("a", {
                class: "search-results-settings-display-is-verified-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[3] || (t[3] = t => e.clearFilter("is_verified", "all"))
            }, "×")])) : T("", !0)], 64)) : T("", !0)]), E(K, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", Ej, [S("div", Uj, [S("h5", Mj, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", Aj, [S("div", Pj, [S("div", Lj, [S("label", Bj, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, $j)])]), e.current_permissions.show_currency_settings ? (b(), g("div", Dj, [S("div", jj, [S("label", Oj, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", Vj, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", Hj, [E(q, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[4] || (t[4] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", Ij, [E(M, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[5] || (t[5] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", Nj, [S("div", Rj, [S("h5", Kj, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", Jj, [S("div", Wj, [E(P, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[6] || (t[6] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[7] || (t[7] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E($, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[8] || (t[8] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[9] || (t[9] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", zj, [E(D, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[10] || (t[10] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[11] || (t[11] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(j, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[12] || (t[12] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(V, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[13] || (t[13] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[14] || (t[14] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), e.current_permissions.show_posts_data ? (b(), g("div", Yj, [S("div", Gj, [S("div", Xj, [S("label", Qj, v(e.trans.get("Posts")), 1), S("div", Zj, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.posts_min
                    }]),
                    "onUpdate:modelValue": t[15] || (t[15] = t => e.current_filter_posts_min = t),
                    name: "posts_min"
                }, null, 2), [
                    [ce, e.integer_format],
                    [U, e.current_filter_posts_min]
                ]), S("span", eO, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.posts_max
                    }]),
                    "onUpdate:modelValue": t[16] || (t[16] = t => e.current_filter_posts_max = t),
                    name: "posts_max"
                }, null, 2), [
                    [ce, e.integer_format],
                    [U, e.current_filter_posts_max]
                ])])])])])) : T("", !0), e.current_permissions.show_is_private_data ? (b(), g("div", tO, [S("div", rO, [S("div", sO, [S("label", aO, v(e.trans.get("Is Private")), 1), S("div", oO, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_private",
                    id: "is-private-any",
                    value: "",
                    "onUpdate:modelValue": t[17] || (t[17] = t => e.current_filter_is_private = t),
                    checked: "" == e.current_filter_is_private
                }, null, 8, iO), [
                    [O, e.current_filter_is_private]
                ]), nO]), S("div", lO, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_private",
                    id: "is-private-yes",
                    value: "1",
                    "onUpdate:modelValue": t[18] || (t[18] = t => e.current_filter_is_private = t),
                    checked: "1" == e.current_filter_is_private
                }, null, 8, cO), [
                    [O, e.current_filter_is_private]
                ]), _O]), S("div", uO, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_private",
                    id: "is-private-no",
                    value: "0",
                    "onUpdate:modelValue": t[19] || (t[19] = t => e.current_filter_is_private = t),
                    checked: "0" == e.current_filter_is_private
                }, null, 8, dO), [
                    [O, e.current_filter_is_private]
                ]), mO])])]), S("div", hO, [S("div", pO, [S("label", gO, v(e.trans.get("Is Verified")), 1), S("div", yO, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_verified",
                    id: "is-verified-any",
                    value: "",
                    "onUpdate:modelValue": t[20] || (t[20] = t => e.current_filter_is_verified = t),
                    checked: "" == e.current_filter_is_verified
                }, null, 8, fO), [
                    [O, e.current_filter_is_verified]
                ]), wO]), S("div", bO, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_verified",
                    id: "is-verified-yes",
                    value: "1",
                    "onUpdate:modelValue": t[21] || (t[21] = t => e.current_filter_is_verified = t),
                    checked: "1" == e.current_filter_is_verified
                }, null, 8, vO), [
                    [O, e.current_filter_is_verified]
                ]), kO]), S("div", xO, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_verified",
                    id: "is-verified-no",
                    value: "0",
                    "onUpdate:modelValue": t[22] || (t[22] = t => e.current_filter_is_verified = t),
                    checked: "0" == e.current_filter_is_verified
                }, null, 8, CO), [
                    [O, e.current_filter_is_verified]
                ]), SO])])])])) : T("", !0), S("div", TO, [S("div", FO, [E(H, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[23] || (t[23] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[24] || (t[24] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", qO, [S("div", EO, [E(I, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[25] || (t[25] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), e.current_permissions.show_full_name_column && e.current_permissions.show_full_name_data ? (b(), g("div", UO, [S("div", MO, [S("div", AO, [S("label", PO, v(e.trans.get("Find Full Name Within Search Results")), 1), E(N, {
                    "model-value": e.current_filter_full_name,
                    "onUpdate:modelValue": t[26] || (t[26] = t => e.current_filter_full_name = t),
                    name: "filter_full_name",
                    placeholder: e.trans.get("eg: John Doe")
                }, null, 8, ["model-value", "placeholder"]), S("small", LO, v(e.trans.get("Press enter to add full name.")), 1)])])])) : T("", !0), E(R, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[27] || (t[27] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(J, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(W, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(z, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", BO, [e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide ? (b(), g("div", $O, [E(Y, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), o.show_upsell && 7 == e.current_tab ? (b(), x(G, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, {
                lead: C((() => [S("p", {
                    class: "d-md-none d-lg-none d-xl-none mb-0",
                    innerHTML: e.trans.get("Do you need this information?")
                }, null, 8, DO), S("p", {
                    class: "d-md-none d-lg-none d-xl-none",
                    innerHTML: e.trans.get("1000s of Instagrammers, marketers, and agencies use Keyword Tool Pro for Instagram research?")
                }, null, 8, jO), S("p", {
                    class: "d-none d-md-inline-block",
                    innerHTML: e.trans.get("Want to get up to 10x more hashtags instead?")
                }, null, 8, OO)])),
                noopener: C((() => [S("span", {
                    class: "d-md-none d-lg-none d-xl-none",
                    innerHTML: e.trans.get("Try it now!")
                }, null, 8, VO), S("span", {
                    class: "d-none d-md-inline-block",
                    innerHTML: e.trans.get("Try it now!")
                }, null, 8, HO)])),
                _: 1
            }, 8, ["routes", "selected_language_name"])) : T("", !0)])) : T("", !0)], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", IO, [E(Q, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(X, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("1000s of Instagrammers, marketers, and agencies use Keyword Tool Pro for Instagram research?"),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(Z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [10 == e.current_tab ? (b(), g("h4", NO, v(e.trans.get("Sorry, Instagram does not provide any people suggestions for your query")), 1)) : (b(), g("h4", RO, v(e.trans.get("Sorry, Instagram does not provide any hashtags for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(ee, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(le, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(te, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(re, {
                    key: 1
                })) : T("", !0), E(se, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(ae, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(re), E(oe, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), 7 == e.current_tab ? (b(), g("a", {
                    key: 2,
                    class: w([{
                        disabled: !e.current_permissions.show_posts_data
                    }, "dropdown-item btn-copy-keywords-with-posts-count"]),
                    onClick: t[28] || (t[28] = t => e.copy("posts")),
                    href: "javascript:"
                }, [KO, A(" " + v(e.trans.get("Copy with Posts Count")), 1)], 2)) : T("", !0), 7 == e.current_tab ? (b(), x(ie, {
                    key: 3,
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])) : T("", !0), 7 == e.current_tab ? (b(), x(ne, {
                    key: 4,
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])) : T("", !0)])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    WO = {
        class: "row g-0 me-lg-n1px"
    },
    zO = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const YO = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "instagram-language-select2",
            languages_url: "/search/keywords/instagram/languages",
            rebuild_event: "instagram-language-rebuild",
            cookie: "instagram_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", WO, [S("div", zO, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    GO = {
        class: "row g-0 me-lg-n1px"
    },
    XO = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    QO = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const ZO = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/instagram/languages",
            locations_url: "/search/keywords/instagram/locations",
            location_search_engine: "google",
            rebuild_event: "instagram-language-rebuild",
            cookie: "instagram_search_engine",
            location_container_css_class: "instagram-location-select2",
            location_fav_cookie: "instagram_locations_fav",
            language_container_css_class: "instagram-language-select2",
            language_fav_cookie: "instagram_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", GO, [S("div", XO, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", QO, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    eV = ["value"],
    tV = ["value"],
    rV = {
        key: 2,
        class: "row"
    },
    sV = {
        class: "col-12"
    },
    aV = {
        class: "check-search-volume-settings-country mb-3"
    },
    oV = {
        class: "form-label check-search-volume-settings-country-label"
    },
    iV = {
        key: 3,
        class: "row"
    },
    nV = {
        class: "col-12"
    },
    lV = {
        class: "check-search-volume-settings-currency mb-3"
    },
    cV = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const _V = Ue({
        mixins: [NT]
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
                key: 0,
                name: "metrics_country",
                type: "hidden",
                value: e.country
            }, null, 8, eV)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
                key: 1,
                name: "metrics_currency",
                type: "hidden",
                value: e.currency
            }, null, 8, tV)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", rV, [S("div", sV, [S("div", aV, [S("label", oV, v(e.trans.get("Country")), 1), E(i, {
                options: e.current_country_list,
                settings: e.country_settings,
                class: "check-search-volume-settings-country-value",
                id: "metrics_country_selection",
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
                "model-value": e.current_metrics_country,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.permissions.show_currency_settings ? (b(), g("div", iV, [S("div", nV, [S("div", lV, [S("label", cV, v(e.trans.get("Currency")), 1), E(i, {
                options: e.current_currency_list,
                settings: e.currency_settings,
                class: "check-search-volume-settings-currency-value",
                id: "metrics_currency_selection",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
                "model-value": e.current_metrics_currency,
                placeholder: e.trans.get("Type a currency")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
        }]
    ]),
    uV = {
        class: "search-results-settings my-2"
    },
    dV = {
        class: "search-results-settings-display mx-n1"
    },
    mV = {
        key: 0,
        class: "row"
    },
    hV = {
        class: "col"
    },
    pV = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    gV = {
        key: 1,
        class: "row"
    },
    yV = {
        class: "col-12 col-md-6"
    },
    fV = {
        class: "search-results-settings-modal-country mb-3"
    },
    wV = {
        class: "form-label search-results-settings-modal-country-label"
    },
    bV = ["value"],
    vV = {
        key: 0,
        class: "col-12 col-md-6"
    },
    kV = {
        class: "search-results-settings-modal-currency mb-3"
    },
    xV = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    CV = {
        key: 2,
        class: "row"
    },
    SV = {
        key: 0,
        class: "col-12 col-md-6"
    },
    TV = {
        key: 1,
        class: "col-12 col-md-6"
    },
    FV = {
        class: "row"
    },
    qV = {
        class: "col"
    },
    EV = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    UV = {
        key: 1,
        class: "row"
    },
    MV = {
        class: "col-12 col-md-6"
    },
    AV = {
        class: "col-12 col-md-6"
    },
    PV = {
        class: "row"
    },
    LV = {
        class: "col-12"
    },
    BV = {
        class: "row"
    },
    $V = {
        class: "col-12"
    },
    DV = ["innerHTML"],
    jV = ["innerHTML"],
    OV = {
        class: "search-results-summary card my-4 bg-light"
    },
    VV = {
        class: "card-body"
    },
    HV = {
        class: "search-results-keywords my-3"
    },
    IV = {
        class: "mb-4"
    };
const NV = Ue({
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                try {
                    var e;
                    this.error = this.list = null;
                    var t = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    e = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify({}))
                    }, {
                        headers: t
                    }), this.has_all_error = e.data.has_all_error, this.has_error = e.data.has_error, this.keywords = e.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = e.data.breakdown_url ? e.data.breakdown_url : null, this.device_breakdown_url = e.data.device_breakdown_url ? e.data.device_breakdown_url : null, this.keywords_payload = e.data.keywords_payload, this.metrics_url = e.data.metrics_url, this.current_scrape_urls = e.data.scrape_urls, await this.metrics(!0)
                } catch (r) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("pinterest-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                w = k("search-results-settings-modal-search-network"),
                q = k("search-results-settings-modal-currency"),
                U = k("search-results-settings-modal-search-volume"),
                M = k("search-results-settings-modal-search-volume-trend"),
                A = k("search-results-settings-modal-average-cpc"),
                P = k("search-results-settings-modal-bing-competition"),
                L = k("search-results-settings-modal-competition"),
                $ = k("search-results-settings-filter-positive-keywords"),
                D = k("search-results-settings-filter-negative-keywords"),
                j = k("alert-pro-upsell"),
                O = k("search-results-settings-modal-keyword-result-period"),
                V = k("search-results-settings-modal"),
                H = k("search-results-tabs"),
                I = k("has-error"),
                N = k("suggest-page-reload"),
                R = k("google-search-volume-summary"),
                K = k("show-upsell"),
                J = k("google-search-volume-result"),
                W = k("search-results-table-wrapper"),
                z = k("search-results-no-keyword-found"),
                Y = k("has-more"),
                G = k("dropdown-menu-item-add-basket"),
                X = k("dropdown-menu-item-divider"),
                Q = k("dropdown-menu-item-export-excel"),
                Z = k("dropdown-menu-item-export-csv"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", uV, [S("div", dV, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(V, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", mV, [S("div", hV, [S("h5", pV, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", gV, [S("div", yV, [S("div", fV, [S("label", wV, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, bV)])]), e.current_permissions.show_currency_settings ? (b(), g("div", vV, [S("div", kV, [S("label", xV, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", CV, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", SV, [E(w, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", TV, [E(q, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", FV, [S("div", qV, [S("h5", EV, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", UV, [S("div", MV, [E(U, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(M, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", AV, [E(A, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(P, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(L, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", PV, [S("div", LV, [E($, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", BV, [S("div", $V, [E(D, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(j, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, DV)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, jV)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(O, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(H, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(I, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(N, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", OV, [S("div", VV, [E(R, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), o.show_upsell && 1 == e.current_tab ? (b(), x(K, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"])) : T("", !0)])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", HV, [E(W, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(J, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [S("h4", IV, v(e.trans.get("Sorry, Pinterest does not provide any keyword suggestions for your query")), 1)])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Y, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(G, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(X, {
                    key: 1
                })) : T("", !0), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(X), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    RV = {
        class: "row g-0 me-lg-n1px"
    },
    KV = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const JV = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "pinterest-language-select2",
            languages_url: "/search/keywords/pinterest/languages",
            rebuild_event: "pinterest-language-rebuild",
            cookie: "pinterest_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", RV, [S("div", KV, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    WV = {
        class: "row g-0 me-lg-n1px"
    },
    zV = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    YV = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const GV = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/pinterest/languages",
            locations_url: "/search/keywords/pinterest/locations",
            location_search_engine: "google",
            rebuild_event: "pinterest-language-rebuild",
            cookie: "pinterest_search_engine",
            location_container_css_class: "pinterest-location-select2",
            location_fav_cookie: "pinterest_locations_fav",
            language_container_css_class: "pinterest-language-select2",
            language_fav_cookie: "pinterest_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", WV, [S("div", zV, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", YV, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    XV = ["value"],
    QV = ["value"],
    ZV = {
        key: 2,
        class: "row"
    },
    eH = {
        class: "col-12"
    },
    tH = {
        class: "check-search-volume-settings-country mb-3"
    },
    rH = {
        class: "form-label check-search-volume-settings-country-label"
    },
    sH = {
        key: 3,
        class: "row"
    },
    aH = {
        class: "col-12"
    },
    oH = {
        class: "check-search-volume-settings-currency mb-3"
    },
    iH = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const nH = Ue({
    mixins: [NT]
}, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("tom-select");
        return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
            key: 0,
            name: "metrics_country",
            type: "hidden",
            value: e.country
        }, null, 8, XV)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
            key: 1,
            name: "metrics_currency",
            type: "hidden",
            value: e.currency
        }, null, 8, QV)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", ZV, [S("div", eH, [S("div", tH, [S("label", rH, v(e.trans.get("Country")), 1), E(i, {
            options: e.current_country_list,
            settings: e.country_settings,
            class: "check-search-volume-settings-country-value",
            id: "metrics_country_selection",
            "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
            "model-value": e.current_metrics_country,
            placeholder: e.trans.get("Type a country")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", sH, [S("div", aH, [S("div", oH, [S("label", iH, v(e.trans.get("Currency")), 1), E(i, {
            options: e.current_currency_list,
            settings: e.currency_settings,
            class: "check-search-volume-settings-currency-value",
            id: "metrics_currency_selection",
            "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
            "model-value": e.current_metrics_currency,
            placeholder: e.trans.get("Type a currency")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
    }]
]);
const lH = Ue({
        mixins: [_p],
        components: {},
        props: ["preoptions"],
        data() {
            return {
                container_css_class: "play-store-category-select2",
                rebuild_event: "play-store-category-rebuild",
                cookie: "play_store_search_engine",
                options_data: this.preoptions
            }
        },
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), x(i, {
                disabled: e.loading,
                id: "category_" + e.id,
                options: e.options,
                required: !0,
                settings: e.settings,
                name: "category",
                "model-value": e.category,
                class: w("rounded-top-end-0 rounded-bottom-end-0"),
                placeholder: e.trans.get("Type a category")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])
        }]
    ]),
    cH = {
        class: "search-results-settings my-2"
    },
    _H = {
        class: "search-results-settings-display mx-n1"
    },
    uH = {
        key: 0,
        class: "row"
    },
    dH = {
        class: "col"
    },
    mH = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    hH = {
        key: 1,
        class: "row"
    },
    pH = {
        class: "col-12 col-md-6"
    },
    gH = {
        key: 0,
        class: "search-results-settings-modal-country mb-3"
    },
    yH = {
        class: "form-label search-results-settings-modal-country-label"
    },
    fH = ["value"],
    wH = {
        key: 0,
        class: "col-12 col-md-6"
    },
    bH = {
        class: "search-results-settings-modal-currency mb-3"
    },
    vH = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    kH = {
        key: 2,
        class: "row"
    },
    xH = {
        key: 0,
        class: "col-12 col-md-6"
    },
    CH = {
        key: 1,
        class: "col-12 col-md-6"
    },
    SH = {
        class: "row"
    },
    TH = {
        class: "col"
    },
    FH = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    qH = {
        key: 1,
        class: "row"
    },
    EH = {
        class: "col-12 col-md-6"
    },
    UH = {
        class: "col-12 col-md-6"
    },
    MH = {
        class: "row"
    },
    AH = {
        class: "col-12"
    },
    PH = {
        class: "row"
    },
    LH = {
        class: "col-12"
    },
    BH = ["innerHTML"],
    $H = ["innerHTML"],
    DH = {
        class: "search-results-summary card my-4 bg-light"
    },
    jH = {
        class: "card-body"
    },
    OH = {
        class: "search-results-keywords my-3"
    },
    VH = {
        class: "mb-4"
    };
const HH = Ue({
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                try {
                    var e;
                    this.error = this.list = null;
                    var t = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    e = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify({}))
                    }, {
                        headers: t
                    }), this.has_all_error = e.data.has_all_error, this.has_error = e.data.has_error, this.keywords = e.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = e.data.breakdown_url ? e.data.breakdown_url : null, this.device_breakdown_url = e.data.device_breakdown_url ? e.data.device_breakdown_url : null, this.keywords_payload = e.data.keywords_payload, this.metrics_url = e.data.metrics_url, this.current_scrape_urls = e.data.scrape_urls, await this.metrics(!0)
                } catch (r) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("play-store-category-rebuild", e), Ce("play-store-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                w = k("search-results-settings-modal-search-network"),
                q = k("search-results-settings-modal-currency"),
                U = k("search-results-settings-modal-search-volume"),
                M = k("search-results-settings-modal-search-volume-trend"),
                A = k("search-results-settings-modal-average-cpc"),
                P = k("search-results-settings-modal-bing-competition"),
                L = k("search-results-settings-modal-competition"),
                $ = k("search-results-settings-filter-positive-keywords"),
                D = k("search-results-settings-filter-negative-keywords"),
                j = k("alert-pro-upsell"),
                O = k("search-results-settings-modal-keyword-result-period"),
                V = k("search-results-settings-modal"),
                H = k("search-results-tabs"),
                I = k("has-error"),
                N = k("suggest-page-reload"),
                R = k("google-search-volume-summary"),
                K = k("show-upsell"),
                J = k("google-search-volume-result"),
                W = k("search-results-table-wrapper"),
                z = k("search-results-no-keyword-found"),
                Y = k("has-more"),
                G = k("dropdown-menu-item-add-basket"),
                X = k("dropdown-menu-item-divider"),
                Q = k("dropdown-menu-item-export-excel"),
                Z = k("dropdown-menu-item-export-csv"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", cH, [S("div", _H, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(V, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", uH, [S("div", dH, [S("h5", mH, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", hH, [S("div", pH, [4 == e.current_tab ? (b(), g("div", gH, [S("label", yH, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, fH)])) : T("", !0)]), e.current_permissions.show_currency_settings ? (b(), g("div", wH, [S("div", bH, [S("label", vH, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", kH, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", xH, [E(w, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", CH, [E(q, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", SH, [S("div", TH, [S("h5", FH, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", qH, [S("div", EH, [E(U, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(M, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", UH, [E(A, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(P, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(L, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", MH, [S("div", AH, [E($, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", PH, [S("div", LH, [E(D, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(j, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, BH)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, $H)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(O, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(H, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(I, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(N, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", DH, [S("div", jH, [E(R, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), o.show_upsell && 1 == e.current_tab ? (b(), x(K, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"])) : T("", !0)])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", OH, [E(W, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(J, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [S("h4", VH, v(e.trans.get("Sorry, Play Store does not provide any keyword suggestions for your query")), 1)])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Y, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(G, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(X, {
                    key: 1
                })) : T("", !0), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(X), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    IH = {
        class: "row g-0 me-lg-n1px"
    },
    NH = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const RH = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "play-store-language-select2",
            languages_url: "/search/keywords/play-store/languages",
            rebuild_event: "play-store-language-rebuild",
            cookie: "play_store_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", IH, [S("div", NH, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    KH = {
        class: "row g-0 me-lg-n1px"
    },
    JH = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    WH = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const zH = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/play-store/languages",
            locations_url: "/search/keywords/play-store/locations",
            location_search_engine: "google",
            rebuild_event: "play-store-language-rebuild",
            cookie: "play_store_search_engine",
            location_container_css_class: "play-store-location-select2",
            location_fav_cookie: "play_store_locations_fav",
            language_container_css_class: "play-store-language-select2",
            language_fav_cookie: "play_store_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", KH, [S("div", JH, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", WH, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    YH = ["value"],
    GH = ["value"],
    XH = {
        key: 2,
        class: "row"
    },
    QH = {
        class: "col-12"
    },
    ZH = {
        class: "check-search-volume-settings-country mb-3"
    },
    eI = {
        class: "form-label check-search-volume-settings-country-label"
    },
    tI = {
        key: 3,
        class: "row"
    },
    rI = {
        class: "col-12"
    },
    sI = {
        class: "check-search-volume-settings-currency mb-3"
    },
    aI = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const oI = Ue({
        mixins: [NT]
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
                key: 0,
                name: "metrics_country",
                type: "hidden",
                value: e.country
            }, null, 8, YH)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
                key: 1,
                name: "metrics_currency",
                type: "hidden",
                value: e.currency
            }, null, 8, GH)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", XH, [S("div", QH, [S("div", ZH, [S("label", eI, v(e.trans.get("Country")), 1), E(i, {
                options: e.current_country_list,
                settings: e.country_settings,
                class: "check-search-volume-settings-country-value",
                id: "metrics_country_selection",
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
                "model-value": e.current_metrics_country,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", tI, [S("div", rI, [S("div", sI, [S("label", aI, v(e.trans.get("Currency")), 1), E(i, {
                options: e.current_currency_list,
                settings: e.currency_settings,
                class: "check-search-volume-settings-currency-value",
                id: "metrics_currency_selection",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
                "model-value": e.current_metrics_currency,
                placeholder: e.trans.get("Type a currency")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
        }]
    ]),
    iI = {
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {};
                try {
                    var e;
                    this.error = this.list = null;
                    var t = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    e = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify({}))
                    }, {
                        headers: t
                    }), this.has_all_error = e.data.has_all_error, this.has_error = e.data.has_error, this.keywords = e.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = e.data.breakdown_url ? e.data.breakdown_url : null, this.device_breakdown_url = e.data.device_breakdown_url ? e.data.device_breakdown_url : null, this.keywords_payload = e.data.keywords_payload, this.metrics_url = e.data.metrics_url, this.current_scrape_urls = e.data.scrape_urls, await this.metrics(!0)
                } catch (r) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("tiktok-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    },
    nI = {
        class: "search-results-settings my-2"
    },
    lI = {
        class: "search-results-settings-display mx-n1"
    },
    cI = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-followings btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    _I = {
        class: "search-results-settings-display-followings-label"
    },
    uI = {
        key: 0,
        class: "search-results-settings-display-followings-value"
    },
    dI = {
        key: 1,
        class: "search-results-settings-display-followings-value"
    },
    mI = {
        key: 2,
        class: "search-results-settings-display-followings-value"
    },
    hI = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-followers btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    pI = {
        class: "search-results-settings-display-followers-label"
    },
    gI = {
        key: 0,
        class: "search-results-settings-display-followers-value"
    },
    yI = {
        key: 1,
        class: "search-results-settings-display-followers-value"
    },
    fI = {
        key: 2,
        class: "search-results-settings-display-followers-value"
    },
    wI = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-heart-count btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    bI = {
        class: "search-results-settings-display-heart-count-label"
    },
    vI = {
        key: 0,
        class: "search-results-settings-display-heart-count-value"
    },
    kI = {
        key: 1,
        class: "search-results-settings-display-heart-count-value"
    },
    xI = {
        key: 2,
        class: "search-results-settings-display-heart-count-value"
    },
    CI = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-video-count btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    SI = {
        class: "search-results-settings-display-video-count-label"
    },
    TI = {
        key: 0,
        class: "search-results-settings-display-video-count-value"
    },
    FI = {
        key: 1,
        class: "search-results-settings-display-video-count-value"
    },
    qI = {
        key: 2,
        class: "search-results-settings-display-video-count-value"
    },
    EI = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-digg-count btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    UI = {
        class: "search-results-settings-display-digg-count-label"
    },
    MI = {
        key: 0,
        class: "search-results-settings-display-digg-count-value"
    },
    AI = {
        key: 1,
        class: "search-results-settings-display-digg-count-value"
    },
    PI = {
        key: 2,
        class: "search-results-settings-display-digg-count-value"
    },
    LI = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-view-count btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    BI = {
        class: "search-results-settings-display-view-count-label"
    },
    $I = {
        key: 0,
        class: "search-results-settings-display-view-count-value"
    },
    DI = {
        key: 1,
        class: "search-results-settings-display-view-count-value"
    },
    jI = {
        key: 2,
        class: "search-results-settings-display-view-count-value"
    },
    OI = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-is-verified btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    VI = {
        class: "search-results-settings-display-is-verified-label"
    },
    HI = {
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        class: "search-results-settings-display-is-verified-value cursor-pointer"
    },
    II = {
        key: 0,
        class: "row"
    },
    NI = {
        class: "col"
    },
    RI = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    KI = {
        key: 1,
        class: "row"
    },
    JI = {
        class: "col-12 col-md-6"
    },
    WI = {
        class: "search-results-settings-modal-country form-group"
    },
    zI = {
        class: "search-results-settings-modal-country-label"
    },
    YI = ["value"],
    GI = {
        key: 0,
        class: "col-12 col-md-6"
    },
    XI = {
        class: "search-results-settings-modal-currency form-group"
    },
    QI = {
        class: "search-results-settings-modal-currency-label"
    },
    ZI = {
        key: 2,
        class: "row"
    },
    eN = {
        key: 0,
        class: "col-12 col-md-6"
    },
    tN = {
        key: 1,
        class: "col-12 col-md-6"
    },
    rN = {
        class: "row"
    },
    sN = {
        class: "col"
    },
    aN = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    oN = {
        key: 1,
        class: "row"
    },
    iN = {
        key: 0,
        class: "col-12 col-md-6"
    },
    nN = {
        class: "search-results-settings-modal-followings mb-3"
    },
    lN = {
        class: "form-label search-results-settings-modal-followings-label"
    },
    cN = {
        class: "search-results-settings-modal-followings-value input-group"
    },
    _N = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    uN = {
        key: 1,
        class: "col-12 col-md-6"
    },
    dN = {
        class: "search-results-settings-modal-followers mb-3"
    },
    mN = {
        class: "form-label search-results-settings-modal-followers-label"
    },
    hN = {
        class: "search-results-settings-modal-followers-value input-group"
    },
    pN = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    gN = {
        key: 2,
        class: "col-12 col-md-6"
    },
    yN = {
        class: "search-results-settings-modal-heart-count mb-3"
    },
    fN = {
        class: "form-label search-results-settings-modal-heart-count-label"
    },
    wN = {
        class: "search-results-settings-modal-heart-count-value input-group"
    },
    bN = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    vN = {
        key: 3,
        class: "col-12 col-md-6"
    },
    kN = {
        class: "search-results-settings-modal-video-count mb-3"
    },
    xN = {
        class: "form-label search-results-settings-modal-video-count-label"
    },
    CN = {
        class: "search-results-settings-modal-video-count-value input-group"
    },
    SN = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    TN = {
        key: 4,
        class: "col-12 col-md-6"
    },
    FN = {
        class: "search-results-settings-modal-digg-count mb-3"
    },
    qN = {
        class: "form-label search-results-settings-modal-digg-count-label"
    },
    EN = {
        class: "search-results-settings-modal-digg-count-value input-group"
    },
    UN = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    MN = {
        key: 5,
        class: "col-12 col-md-6"
    },
    AN = {
        class: "search-results-settings-modal-view-count form-group"
    },
    PN = {
        class: "search-results-settings-modal-view-count-label"
    },
    LN = {
        class: "search-results-settings-modal-view-count-value input-group"
    },
    BN = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    $N = {
        key: 2,
        class: "row"
    },
    DN = {
        key: 0,
        class: "col"
    },
    jN = {
        class: "search-results-settings-modal-is-verified mb-3"
    },
    ON = {
        class: "form-label search-results-settings-modal-is-verified-label"
    },
    VN = {
        class: "form-check"
    },
    HN = ["checked"],
    IN = S("label", {
        class: "form-check-label",
        for: "is-verified-any"
    }, " Any ", -1),
    NN = {
        class: "form-check"
    },
    RN = ["checked"],
    KN = S("label", {
        class: "form-check-label",
        for: "is-verified-yes"
    }, " Yes ", -1),
    JN = {
        class: "form-check disabled"
    },
    WN = ["checked"],
    zN = S("label", {
        class: "form-check-label",
        for: "is-verified-no"
    }, " No ", -1),
    YN = {
        key: 3,
        class: "row"
    },
    GN = {
        class: "col-12 col-md-6"
    },
    XN = {
        class: "col-12 col-md-6"
    },
    QN = {
        class: "row"
    },
    ZN = {
        class: "col-12"
    },
    eR = {
        class: "row"
    },
    tR = {
        class: "col-12"
    },
    rR = ["innerHTML"],
    sR = ["innerHTML"],
    aR = {
        class: "search-results-summary card my-4 bg-light"
    },
    oR = {
        class: "card-body"
    },
    iR = {
        class: "search-results-keywords my-3"
    },
    nR = {
        key: 0,
        class: "mb-4"
    },
    lR = {
        key: 1,
        class: "mb-4"
    };
const cR = Ue(iI, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                q = k("search-results-settings-modal-search-network"),
                M = k("search-results-settings-modal-currency"),
                A = k("search-results-settings-modal-search-volume"),
                P = k("search-results-settings-modal-search-volume-trend"),
                $ = k("search-results-settings-modal-average-cpc"),
                D = k("search-results-settings-modal-bing-competition"),
                j = k("search-results-settings-modal-competition"),
                V = k("search-results-settings-filter-positive-keywords"),
                H = k("search-results-settings-filter-negative-keywords"),
                I = k("alert-pro-upsell"),
                N = k("search-results-settings-modal-keyword-result-period"),
                R = k("search-results-settings-modal"),
                K = k("search-results-tabs"),
                J = k("has-error"),
                W = k("suggest-page-reload"),
                z = k("google-search-volume-summary"),
                Y = k("show-upsell"),
                G = k("google-search-volume-result"),
                X = k("search-results-table-wrapper"),
                Q = k("search-results-no-keyword-found"),
                Z = k("has-more"),
                ee = k("dropdown-menu-item-add-basket"),
                te = k("dropdown-menu-item-divider"),
                re = k("dropdown-menu-item-export-excel"),
                se = k("dropdown-menu-item-export-csv"),
                ae = k("dropdown-menu-item-copy-keywords"),
                oe = k("dropdown-menu-item-copy-keywords-search-volume"),
                ie = k("dropdown-menu-item-copy-keywords-all-data"),
                ne = k("search-results-actions"),
                le = L("mask");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", nI, [S("div", lI, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), e.current_permissions.show_following_count_data ? (b(), g(y, {
                key: 0
            }, [e.show_current_filter_followings_min > 0 || e.show_current_filter_followings_max > 0 ? (b(), g("button", cI, [S("strong", _I, v(e.trans.get("Followings")) + ":", 1), e.show_current_filter_followings_min > 0 && e.show_current_filter_followings_max > 0 ? (b(), g("span", uI, v(e.$filters.digit(e.show_current_filter_followings_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(e.show_current_filter_followings_max)), 1)) : e.show_current_filter_followings_min > 0 && !e.show_current_filter_followings_max ? (b(), g("span", dI, v(e.trans.get("more than")) + " " + v(e.$filters.digit(e.show_current_filter_followings_min)), 1)) : !e.show_current_filter_followings_min && e.show_current_filter_followings_max > 0 ? (b(), g("span", mI, v(e.trans.get("less than")) + " " + v(e.$filters.digit(e.show_current_filter_followings_max)), 1)) : T("", !0), S("a", {
                onClick: t[0] || (t[0] = t => e.clearFilter("followings")),
                class: "search-results-settings-display-followings-remove ms-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_follower_count_data ? (b(), g(y, {
                key: 1
            }, [e.show_current_filter_followers_min > 0 || e.show_current_filter_followers_max > 0 ? (b(), g("button", hI, [S("strong", pI, v(e.trans.get("Followers")) + ":", 1), e.show_current_filter_followers_min > 0 && e.show_current_filter_followers_max > 0 ? (b(), g("span", gI, v(e.$filters.digit(e.show_current_filter_followers_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(e.show_current_filter_followers_max)), 1)) : e.show_current_filter_followers_min > 0 && !e.show_current_filter_followers_max ? (b(), g("span", yI, v(e.trans.get("more than")) + " " + v(e.$filters.digit(e.show_current_filter_followers_min)), 1)) : !e.show_current_filter_followers_min && e.show_current_filter_followers_max > 0 ? (b(), g("span", fI, v(e.trans.get("less than")) + " " + v(e.$filters.digit(e.show_current_filter_followers_max)), 1)) : T("", !0), S("a", {
                onClick: t[1] || (t[1] = t => e.clearFilter("followers")),
                class: "search-results-settings-display-followers-remove ms-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_heart_count_data ? (b(), g(y, {
                key: 2
            }, [e.show_current_filter_heart_count_min > 0 || e.show_current_filter_heart_count_max > 0 ? (b(), g("button", wI, [S("strong", bI, v(e.trans.get("Likes")) + ":", 1), e.show_current_filter_heart_count_min > 0 && e.show_current_filter_heart_count_max > 0 ? (b(), g("span", vI, v(e.$filters.digit(e.show_current_filter_heart_count_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(e.show_current_filter_heart_count_max)), 1)) : e.show_current_filter_heart_count_min > 0 && !e.show_current_filter_heart_count_max ? (b(), g("span", kI, v(e.trans.get("more than")) + " " + v(e.$filters.digit(e.show_current_filter_heart_count_min)), 1)) : !e.show_current_filter_heart_count_min && e.show_current_filter_heart_count_max > 0 ? (b(), g("span", xI, v(e.trans.get("less than")) + " " + v(e.$filters.digit(e.show_current_filter_heart_count_max)), 1)) : T("", !0), S("a", {
                onClick: t[2] || (t[2] = t => e.clearFilter("heart_count")),
                class: "search-results-settings-display-heart-count-remove ms-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_video_count_data ? (b(), g(y, {
                key: 3
            }, [e.show_current_filter_video_count_min > 0 || e.show_current_filter_video_count_max > 0 ? (b(), g("button", CI, [S("strong", SI, v(e.trans.get("Videos")) + ":", 1), e.show_current_filter_video_count_min > 0 && e.show_current_filter_video_count_max > 0 ? (b(), g("span", TI, v(e.$filters.digit(e.show_current_filter_video_count_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(e.show_current_filter_video_count_max)), 1)) : e.show_current_filter_video_count_min > 0 && !e.show_current_filter_video_count_max ? (b(), g("span", FI, v(e.trans.get("more than")) + " " + v(e.$filters.digit(e.show_current_filter_video_count_min)), 1)) : !e.show_current_filter_video_count_min && e.show_current_filter_video_count_max > 0 ? (b(), g("span", qI, v(e.trans.get("less than")) + " " + v(e.$filters.digit(e.show_current_filter_video_count_max)), 1)) : T("", !0), S("a", {
                onClick: t[3] || (t[3] = t => e.clearFilter("video_count")),
                class: "search-results-settings-display-video-count-remove ms-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_digg_count_data ? (b(), g(y, {
                key: 4
            }, [e.show_current_filter_digg_count_min > 0 || e.show_current_filter_digg_count_max > 0 ? (b(), g("button", EI, [S("strong", UI, v(e.trans.get("Diggs")) + ":", 1), e.show_current_filter_digg_count_min > 0 && e.show_current_filter_digg_count_max > 0 ? (b(), g("span", MI, v(e.$filters.digit(e.show_current_filter_digg_count_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(e.show_current_filter_digg_count_max)), 1)) : e.show_current_filter_digg_count_min > 0 && !e.show_current_filter_digg_count_max ? (b(), g("span", AI, v(e.trans.get("more than")) + " " + v(e.$filters.digit(e.show_current_filter_digg_count_min)), 1)) : !e.show_current_filter_digg_count_min && e.show_current_filter_digg_count_max > 0 ? (b(), g("span", PI, v(e.trans.get("less than")) + " " + v(e.$filters.digit(e.show_current_filter_digg_count_max)), 1)) : T("", !0), S("a", {
                onClick: t[4] || (t[4] = t => e.clearFilter("digg_count")),
                class: "search-results-settings-display-digg-count-remove ms-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_view_count_data ? (b(), g(y, {
                key: 5
            }, [e.show_current_filter_view_count_min > 0 || e.show_current_filter_view_count_max > 0 ? (b(), g("button", LI, [S("strong", BI, v(e.trans.get("Views")) + ":", 1), e.show_current_filter_view_count_min > 0 && e.show_current_filter_view_count_max > 0 ? (b(), g("span", $I, v(e.$filters.digit(e.show_current_filter_view_count_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(e.show_current_filter_view_count_max)), 1)) : e.show_current_filter_view_count_min > 0 && !e.show_current_filter_view_count_max ? (b(), g("span", DI, v(e.trans.get("more than")) + " " + v(e.$filters.digit(e.show_current_filter_view_count_min)), 1)) : !e.show_current_filter_view_count_min && e.show_current_filter_view_count_max > 0 ? (b(), g("span", jI, v(e.trans.get("less than")) + " " + v(e.$filters.digit(e.show_current_filter_view_count_max)), 1)) : T("", !0), S("a", {
                onClick: t[5] || (t[5] = t => e.clearFilter("view_count")),
                class: "search-results-settings-display-view-count-remove ml-1 text-decoration-none",
                href: "javascript:;"
            }, "×")])) : T("", !0)], 64)) : T("", !0), e.current_permissions.show_is_verified_data ? (b(), g(y, {
                key: 6
            }, [e.show_current_filter_is_verified ? (b(), g("button", OI, [S("strong", VI, v(e.trans.get("Is Verified")) + ":", 1), S("span", HI, v(e.format_boolean_filter(e.show_current_filter_is_verified)), 1), S("a", {
                class: "search-results-settings-display-is-verified-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[6] || (t[6] = t => e.clearFilter("is_verified", "all"))
            }, "×")])) : T("", !0)], 64)) : T("", !0), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 7,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 8,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(R, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", II, [S("div", NI, [S("h5", RI, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", KI, [S("div", JI, [S("div", WI, [S("label", zI, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, YI)])]), e.current_permissions.show_currency_settings ? (b(), g("div", GI, [S("div", XI, [S("label", QI, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", ZI, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", eN, [E(q, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[7] || (t[7] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", tN, [E(M, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[8] || (t[8] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", rN, [S("div", sN, [S("h5", aN, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_following_count_data || e.current_permissions.show_follower_count_data || e.current_permissions.show_heart_count_data || e.current_permissions.show_video_count_data || e.current_permissions.show_digg_count_data || e.current_permissions.show_view_count_data ? (b(), g("div", oN, [e.current_permissions.show_following_count_data ? (b(), g("div", iN, [S("div", nN, [S("label", lN, v(e.trans.get("Followings")), 1), S("div", cN, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.followings_min
                    }]),
                    "onUpdate:modelValue": t[9] || (t[9] = t => e.current_filter_followings_min = t),
                    name: "followings_min"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_followings_min]
                ]), S("span", _N, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.followings_max
                    }]),
                    "onUpdate:modelValue": t[10] || (t[10] = t => e.current_filter_followings_max = t),
                    name: "followings_max"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_followings_max]
                ])])])])) : T("", !0), e.current_permissions.show_follower_count_data ? (b(), g("div", uN, [S("div", dN, [S("label", mN, v(e.trans.get("Followers")), 1), S("div", hN, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.followers_min
                    }]),
                    "onUpdate:modelValue": t[11] || (t[11] = t => e.current_filter_followers_min = t),
                    name: "followers_min"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_followers_min]
                ]), S("span", pN, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.followers_max
                    }]),
                    "onUpdate:modelValue": t[12] || (t[12] = t => e.current_filter_followers_max = t),
                    name: "followers_max"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_followers_max]
                ])])])])) : T("", !0), e.current_permissions.show_heart_count_data ? (b(), g("div", gN, [S("div", yN, [S("label", fN, v(e.trans.get("Likes")), 1), S("div", wN, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.heart_count_min
                    }]),
                    "onUpdate:modelValue": t[13] || (t[13] = t => e.current_filter_heart_count_min = t),
                    name: "heart_count_min"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_heart_count_min]
                ]), S("span", bN, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.heart_count_max
                    }]),
                    "onUpdate:modelValue": t[14] || (t[14] = t => e.current_filter_heart_count_max = t),
                    name: "heart_count_max"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_heart_count_max]
                ])])])])) : T("", !0), e.current_permissions.show_video_count_data ? (b(), g("div", vN, [S("div", kN, [S("label", xN, v(e.trans.get("Videos")), 1), S("div", CN, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.video_count_min
                    }]),
                    "onUpdate:modelValue": t[15] || (t[15] = t => e.current_filter_video_count_min = t),
                    name: "video_count_min"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_video_count_min]
                ]), S("span", SN, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.video_count_max
                    }]),
                    "onUpdate:modelValue": t[16] || (t[16] = t => e.current_filter_video_count_max = t),
                    name: "video_count_max"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_video_count_max]
                ])])])])) : T("", !0), e.current_permissions.show_digg_count_data ? (b(), g("div", TN, [S("div", FN, [S("label", qN, v(e.trans.get("Diggs")), 1), S("div", EN, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.digg_count_min
                    }]),
                    "onUpdate:modelValue": t[17] || (t[17] = t => e.current_filter_digg_count_min = t),
                    name: "digg_count_min"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_digg_count_min]
                ]), S("span", UN, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.digg_count_max
                    }]),
                    "onUpdate:modelValue": t[18] || (t[18] = t => e.current_filter_digg_count_max = t),
                    name: "digg_count_max"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_digg_count_max]
                ])])])])) : T("", !0), e.current_permissions.show_view_count_data ? (b(), g("div", MN, [S("div", AN, [S("label", PN, v(e.trans.get("Views")), 1), S("div", LN, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.view_count_min
                    }]),
                    "onUpdate:modelValue": t[19] || (t[19] = t => e.current_filter_view_count_min = t),
                    name: "view_count_min"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_view_count_min]
                ]), S("span", BN, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.view_count_max
                    }]),
                    "onUpdate:modelValue": t[20] || (t[20] = t => e.current_filter_view_count_max = t),
                    name: "view_count_max"
                }, null, 2), [
                    [le, e.integer_format],
                    [U, e.current_filter_view_count_max]
                ])])])])) : T("", !0)])) : T("", !0), e.current_permissions.show_is_verified_data ? (b(), g("div", $N, [e.current_permissions.show_is_verified_data ? (b(), g("div", DN, [S("div", jN, [S("label", ON, v(e.trans.get("Is Verified")), 1), S("div", VN, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_verified",
                    id: "is-verified-any",
                    value: "",
                    "onUpdate:modelValue": t[21] || (t[21] = t => e.current_filter_is_verified = t),
                    checked: "" == e.current_filter_is_verified
                }, null, 8, HN), [
                    [O, e.current_filter_is_verified]
                ]), IN]), S("div", NN, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_verified",
                    id: "is-verified-yes",
                    value: "1",
                    "onUpdate:modelValue": t[22] || (t[22] = t => e.current_filter_is_verified = t),
                    checked: "1" == e.current_filter_is_verified
                }, null, 8, RN), [
                    [O, e.current_filter_is_verified]
                ]), KN]), S("div", JN, [F(S("input", {
                    class: "form-check-input",
                    type: "radio",
                    name: "is_verified",
                    id: "is-verified-no",
                    value: "0",
                    "onUpdate:modelValue": t[23] || (t[23] = t => e.current_filter_is_verified = t),
                    checked: "0" == e.current_filter_is_verified
                }, null, 8, WN), [
                    [O, e.current_filter_is_verified]
                ]), zN])])])) : T("", !0)])) : T("", !0), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", YN, [S("div", GN, [E(A, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[24] || (t[24] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[25] || (t[25] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(P, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[26] || (t[26] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[27] || (t[27] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", XN, [E($, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[28] || (t[28] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[29] || (t[29] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(D, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[30] || (t[30] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(j, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[31] || (t[31] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[32] || (t[32] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", QN, [S("div", ZN, [E(V, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[33] || (t[33] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[34] || (t[34] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", eR, [S("div", tR, [E(H, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[35] || (t[35] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), e.user_is_paid || e.current_permissions.pro_is_paused ? T("", !0) : (b(), x(I, {
                    key: 4,
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, rR)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, sR)])),
                    _: 1
                }, 8, ["current_permissions", "routes"])), E(N, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[36] || (t[36] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(K, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(J, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(W, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", aR, [S("div", oR, [E(z, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), !o.show_upsell || 1 != e.current_tab && 7 != e.current_tab ? T("", !0) : (b(), x(Y, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", iR, [E(X, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(G, {
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(Q, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [7 == e.current_tab ? (b(), g("h4", nR, v(e.trans.get("Sorry, TikTok does not provide any hashtags for your query")), 1)) : (b(), g("h4", lR, v(e.trans.get("Sorry, TikTok does not provide any keyword suggestions for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Z, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(ne, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(ee, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(te, {
                    key: 1
                })) : T("", !0), E(re, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(se, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(te), E(ae, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(oe, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(ie, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    _R = {
        class: "row g-0 me-lg-n1px"
    },
    uR = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const dR = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "tiktok-language-select2",
            languages_url: "/search/keywords/tiktok/languages",
            rebuild_event: "tiktok-language-rebuild",
            cookie: "tiktok_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", _R, [S("div", uR, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    mR = {
        class: "row g-0 me-lg-n1px"
    },
    hR = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    pR = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const gR = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/tiktok/languages",
            locations_url: "/search/keywords/tiktok/locations",
            location_search_engine: "google",
            rebuild_event: "tiktok-language-rebuild",
            cookie: "tiktok_search_engine",
            location_container_css_class: "tiktok-location-select2",
            location_fav_cookie: "tiktok_locations_fav",
            language_container_css_class: "tiktok-language-select2",
            language_fav_cookie: "tiktok_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", mR, [S("div", hR, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", pR, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    yR = ["value"],
    fR = ["value"],
    wR = {
        key: 2,
        class: "row"
    },
    bR = {
        class: "col-12"
    },
    vR = {
        class: "check-search-volume-settings-country mb-3"
    },
    kR = {
        class: "form-label check-search-volume-settings-country-label"
    },
    xR = {
        key: 3,
        class: "row"
    },
    CR = {
        class: "col-12"
    },
    SR = {
        class: "check-search-volume-settings-currency mb-3"
    },
    TR = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const FR = Ue({
        mixins: [NT]
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
                key: 0,
                name: "metrics_country",
                type: "hidden",
                value: e.country
            }, null, 8, yR)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
                key: 1,
                name: "metrics_currency",
                type: "hidden",
                value: e.currency
            }, null, 8, fR)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", wR, [S("div", bR, [S("div", vR, [S("label", kR, v(e.trans.get("Country")), 1), E(i, {
                options: e.current_country_list,
                settings: e.country_settings,
                class: "check-search-volume-settings-country-value",
                id: "metrics_country_selection",
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
                "model-value": e.current_metrics_country,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", xR, [S("div", CR, [S("div", SR, [S("label", TR, v(e.trans.get("Currency")), 1), E(i, {
                options: e.current_currency_list,
                settings: e.currency_settings,
                class: "check-search-volume-settings-currency-value",
                id: "metrics_currency_selection",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
                "model-value": e.current_metrics_currency,
                placeholder: e.trans.get("Type a currency")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
        }]
    ]),
    qR = {
        class: "search-results-settings my-2"
    },
    ER = {
        class: "search-results-settings-display mx-n1"
    },
    UR = {
        key: 0,
        class: "row"
    },
    MR = {
        class: "col"
    },
    AR = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    PR = {
        key: 1,
        class: "row"
    },
    LR = {
        class: "col-12 col-md-6"
    },
    BR = {
        class: "search-results-settings-modal-country mb-3"
    },
    $R = {
        class: "form-label search-results-settings-modal-country-label"
    },
    DR = ["value"],
    jR = {
        key: 0,
        class: "col-12 col-md-6"
    },
    OR = {
        class: "search-results-settings-modal-currency mb-3"
    },
    VR = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    HR = {
        key: 2,
        class: "row"
    },
    IR = {
        key: 0,
        class: "col-12 col-md-6"
    },
    NR = {
        key: 1,
        class: "col-12 col-md-6"
    },
    RR = {
        class: "row"
    },
    KR = {
        class: "col"
    },
    JR = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    WR = {
        key: 1,
        class: "row"
    },
    zR = {
        class: "col-12 col-md-6"
    },
    YR = {
        class: "col-12 col-md-6"
    },
    GR = {
        class: "row"
    },
    XR = {
        class: "col-12"
    },
    QR = {
        class: "row"
    },
    ZR = {
        class: "col-12"
    },
    eK = ["innerHTML"],
    tK = ["innerHTML"],
    rK = {
        class: "search-results-summary card my-4 bg-light"
    },
    sK = {
        class: "card-body"
    },
    aK = {
        class: "search-results-keywords my-3"
    },
    oK = {
        key: 0,
        class: "mb-4"
    },
    iK = {
        key: 1,
        class: "mb-4"
    };
const nK = Ue({
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e = !1,
                    t = {},
                    r = 0,
                    s = 0;
                if (this.current_scrape_urls) {
                    var a = [];
                    for (var o in this.current_scrape_urls) this.current_scrape_urls.hasOwnProperty(o) && (a.push({
                        url: this.current_scrape_urls[o],
                        term: o
                    }), s++);
                    try {
                        var i = await Promise.all(a.map((e => new Promise(((t, s) => {
                            let a = document.createElement("script"),
                                o = "_callback_" + se().replaceAll("-", ""),
                                i = e.url;
                            i.match(/\?/) ? i += "&callback=" + o : i += "?callback=" + o, a.async = !0, a.src = i;
                            let n = setTimeout((() => {
                                window[o] && (a.remove(), delete window[o], r++, t(!1))
                            }), 12e3);
                            window[o] = s => {
                                try {
                                    if (s.url = e.url, s.term = e.term, this.keywords.length <= 100) {
                                        if (void 0 !== s.topics)
                                            for (let e = 0; e < s.topics.length; e++) {
                                                let t = s.topics[e];
                                                if (void 0 !== t.topic) {
                                                    var i = t.topic.toLowerCase().replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                    this.keywords.push({
                                                        keyword: i,
                                                        keyword_rank: 0
                                                    })
                                                }
                                            }
                                        if (void 0 !== s.hashtags)
                                            for (let e = 0; e < s.hashtags.length; e++) {
                                                let t = s.hashtags[e];
                                                if (void 0 !== t.hashtag) {
                                                    i = t.hashtag.toLowerCase().replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                    7 == this.current_tab ? "#" == i.substring(0, 1) && i.indexOf(" ") < 0 && this.keywords.push({
                                                        keyword: i,
                                                        keyword_rank: 0
                                                    }) : this.keywords.push({
                                                        keyword: i,
                                                        keyword_rank: 0
                                                    })
                                                }
                                            }
                                    }
                                    clearTimeout(n), a.remove(), delete window[o], t(s)
                                } catch (l) {
                                    window[o] && (clearTimeout(n), a.remove(), delete window[o]), r++, t(!1)
                                }
                            }, document.body.appendChild(a)
                        })))))
                    } catch (c) {
                        console.log(c)
                    }
                    if (s > 0 && s == r && (e = !0), e && this.captcha_url) return window.location.href = this.url_add_param(this.captcha_url, "redirect", window.location.href), !1;
                    i && i.map((e => {
                        e && (t[e.term] = e)
                    }))
                }
                try {
                    var n;
                    this.error = this.list = null;
                    var l = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    n = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(t))
                    }, {
                        headers: l
                    }), this.has_all_error = n.data.has_all_error, this.has_error = n.data.has_error, this.keywords = n.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = n.data.breakdown_url ? n.data.breakdown_url : null, this.device_breakdown_url = n.data.device_breakdown_url ? n.data.device_breakdown_url : null, this.keywords_payload = n.data.keywords_payload, this.metrics_url = n.data.metrics_url, this.current_scrape_urls = n.data.scrape_urls, await this.metrics(!0)
                } catch (c) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("twitter-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                w = k("search-results-settings-modal-search-network"),
                q = k("search-results-settings-modal-currency"),
                U = k("search-results-settings-modal-search-volume"),
                M = k("search-results-settings-modal-search-volume-trend"),
                A = k("search-results-settings-modal-average-cpc"),
                P = k("search-results-settings-modal-bing-competition"),
                L = k("search-results-settings-modal-competition"),
                $ = k("search-results-settings-filter-positive-keywords"),
                D = k("search-results-settings-filter-negative-keywords"),
                j = k("alert-pro-upsell"),
                O = k("search-results-settings-modal-keyword-result-period"),
                V = k("search-results-settings-modal"),
                H = k("search-results-tabs"),
                I = k("has-error"),
                N = k("suggest-page-reload"),
                R = k("google-search-volume-summary"),
                K = k("show-upsell"),
                J = k("google-search-volume-result"),
                W = k("search-results-table-wrapper"),
                z = k("search-results-no-keyword-found"),
                Y = k("has-more"),
                G = k("dropdown-menu-item-add-basket"),
                X = k("dropdown-menu-item-divider"),
                Q = k("dropdown-menu-item-export-excel"),
                Z = k("dropdown-menu-item-export-csv"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", qR, [S("div", ER, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(V, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", UR, [S("div", MR, [S("h5", AR, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", PR, [S("div", LR, [S("div", BR, [S("label", $R, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, DR)])]), e.current_permissions.show_currency_settings ? (b(), g("div", jR, [S("div", OR, [S("label", VR, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", HR, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", IR, [E(w, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", NR, [E(q, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", RR, [S("div", KR, [S("h5", JR, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", WR, [S("div", zR, [E(U, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(M, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", YR, [E(A, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(P, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(L, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", GR, [S("div", XR, [E($, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", QR, [S("div", ZR, [E(D, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(j, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, eK)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, tK)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(O, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(H, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(I, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(N, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", rK, [S("div", sK, [E(R, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), !o.show_upsell || 1 != e.current_tab && 7 != e.current_tab ? T("", !0) : (b(), x(K, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", aK, [E(W, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(J, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [7 == e.current_tab ? (b(), g("h4", oK, v(e.trans.get("Sorry, Twitter does not provide any hashtags for your query")), 1)) : (b(), g("h4", iK, v(e.trans.get("Sorry, Twitter does not provide any keyword suggestions for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Y, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(G, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(X, {
                    key: 1
                })) : T("", !0), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(X), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    lK = {
        class: "row g-0 me-lg-n1px"
    },
    cK = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const _K = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "twitter-language-select2",
            languages_url: "/search/keywords/twitter/languages",
            rebuild_event: "twitter-language-rebuild",
            cookie: "twitter_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", lK, [S("div", cK, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    uK = {
        class: "row g-0 me-lg-n1px"
    },
    dK = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    mK = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const hK = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/twitter/languages",
            locations_url: "/search/keywords/twitter/locations",
            location_search_engine: "google",
            rebuild_event: "twitter-language-rebuild",
            cookie: "twitter_search_engine",
            location_container_css_class: "twitter-location-select2",
            location_fav_cookie: "twitter_locations_fav",
            language_container_css_class: "twitter-language-select2",
            language_fav_cookie: "twitter_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", uK, [S("div", dK, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", mK, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    pK = ["value"],
    gK = ["value"],
    yK = {
        key: 2,
        class: "row"
    },
    fK = {
        class: "col-12"
    },
    wK = {
        class: "check-search-volume-settings-country mb-3"
    },
    bK = {
        class: "form-label check-search-volume-settings-country-label"
    },
    vK = {
        key: 3,
        class: "row"
    },
    kK = {
        class: "col-12"
    },
    xK = {
        class: "check-search-volume-settings-currency mb-3"
    },
    CK = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const SK = Ue({
        mixins: [NT]
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
                key: 0,
                name: "metrics_country",
                type: "hidden",
                value: e.country
            }, null, 8, pK)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
                key: 1,
                name: "metrics_currency",
                type: "hidden",
                value: e.currency
            }, null, 8, gK)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", yK, [S("div", fK, [S("div", wK, [S("label", bK, v(e.trans.get("Country")), 1), E(i, {
                options: e.current_country_list,
                settings: e.country_settings,
                class: "check-search-volume-settings-country-value",
                id: "metrics_country_selection",
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
                "model-value": e.current_metrics_country,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", vK, [S("div", kK, [S("div", xK, [S("label", CK, v(e.trans.get("Currency")), 1), E(i, {
                options: e.current_currency_list,
                settings: e.currency_settings,
                class: "check-search-volume-settings-currency-value",
                id: "metrics_currency_selection",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
                "model-value": e.current_metrics_currency,
                placeholder: e.trans.get("Type a currency")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
        }]
    ]),
    TK = {
        class: "search-results-settings my-2"
    },
    FK = {
        class: "search-results-settings-display mx-n1"
    },
    qK = {
        key: 0,
        class: "row"
    },
    EK = {
        class: "col"
    },
    UK = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    MK = {
        key: 1,
        class: "row"
    },
    AK = {
        class: "col-12 col-md-6"
    },
    PK = {
        class: "search-results-settings-modal-country mb-3"
    },
    LK = {
        class: "form-label search-results-settings-modal-country-label"
    },
    BK = ["value"],
    $K = {
        key: 0,
        class: "col-12 col-md-6"
    },
    DK = {
        class: "search-results-settings-modal-currency mb-3"
    },
    jK = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    OK = {
        key: 2,
        class: "row"
    },
    VK = {
        key: 0,
        class: "col-12 col-md-6"
    },
    HK = {
        key: 1,
        class: "col-12 col-md-6"
    },
    IK = {
        class: "row"
    },
    NK = {
        class: "col"
    },
    RK = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    KK = {
        key: 1,
        class: "row"
    },
    JK = {
        class: "col-12 col-md-6"
    },
    WK = {
        class: "col-12 col-md-6"
    },
    zK = {
        class: "row"
    },
    YK = {
        class: "col-12"
    },
    GK = {
        class: "row"
    },
    XK = {
        class: "col-12"
    },
    QK = ["innerHTML"],
    ZK = ["innerHTML"],
    eJ = {
        class: "search-results-summary card my-4 bg-light"
    },
    tJ = {
        class: "card-body"
    },
    rJ = ["innerHTML"],
    sJ = ["innerHTML"],
    aJ = ["innerHTML"],
    oJ = {
        class: "search-results-keywords my-3"
    },
    iJ = {
        key: 0,
        class: "mb-4"
    },
    nJ = {
        key: 1,
        class: "mb-4"
    },
    lJ = {
        key: 2,
        class: "mb-4"
    },
    cJ = {
        key: 3,
        class: "mb-4"
    };
const _J = Ue({
        mixins: [mp, PL],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        data: () => ({
            show_google_trends_chart: !0
        }),
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e = !1,
                    t = {},
                    r = 0,
                    s = 0;
                if (this.current_scrape_urls) {
                    var a = [];
                    for (var o in this.current_scrape_urls) this.current_scrape_urls.hasOwnProperty(o) && (a.push({
                        url: this.current_scrape_urls[o],
                        term: o
                    }), s++);
                    try {
                        var i = await Promise.all(a.map((e => new Promise(((t, s) => {
                            let a = document.createElement("script"),
                                o = "_callback_" + se().replaceAll("-", ""),
                                i = e.url;
                            i.match(/\?/) ? i += "&callback=" + o : i += "?callback=" + o, a.async = !0, a.src = i;
                            let n = setTimeout((() => {
                                window[o] && (a.remove(), delete window[o], r++, t(!1))
                            }), 12e3);
                            window[o] = s => {
                                try {
                                    if (s.url = e.url, s.term = e.term, this.keywords.length <= 100)
                                        if (void 0 !== s[1] && void 0 !== s[2] && void 0 !== s[2].k) {
                                            if (s[1].length > 0)
                                                for (var i = s[1].length; i--;)
                                                    if (void 0 === s[1][i][3]) {
                                                        var l = s[1][i][0].toLowerCase().replace(/(<([^>]+)>)/gi, "").replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                        this.keywords.push({
                                                            keyword: '<span class="fw-bold">' + l + "</span>",
                                                            keyword_rank: 0
                                                        })
                                                    }
                                        } else if (void 0 !== s[1] && void 0 !== s[4]) {
                                        if (void 0 !== s[4]["google:suggesttype"])
                                            for (i = s[4]["google:suggesttype"].length; i--;)
                                                if (void 0 !== s[4]["google:suggesttype"][i] && "QUERY" == s[4]["google:suggesttype"][i]) {
                                                    l = s[1][i].toLowerCase().replace(/(<([^>]+)>)/gi, "").replace(this.keyword, '<span class="fw-normal">' + this.keyword + "</span>");
                                                    this.keywords.push({
                                                        keyword: '<span class="fw-bold">' + l + "</span>",
                                                        keyword_rank: 0
                                                    })
                                                }
                                    } else if (void 0 !== s[1] && void 0 !== s[2] && void 0 !== s[2].q && s[1].length > 0)
                                        for (i = s[1].length; i--;)
                                            if (void 0 === s[1][i][3]) {
                                                l = s[1][i][0].toLowerCase().replace(/(<([^>]+)>)/gi, "");
                                                7 == this.current_tab ? "#" == l.substring(0, 1) && l.indexOf(" ") < 0 && this.keywords.push({
                                                    keyword: l,
                                                    keyword_rank: 0
                                                }) : this.keywords.push({
                                                    keyword: '<span class="fw-bold">' + l + "</span>",
                                                    keyword_rank: 0
                                                })
                                            } clearTimeout(n), a.remove(), delete window[o], t(s)
                                } catch (c) {
                                    window[o] && (clearTimeout(n), a.remove(), delete window[o]), r++, t(!1)
                                }
                            }, document.body.appendChild(a)
                        })))))
                    } catch (c) {
                        console.log(c)
                    }
                    if (s > 0 && s == r && (e = !0), e && this.captcha_url) return window.location.href = this.url_add_param(this.captcha_url, "redirect", window.location.href), !1;
                    i && i.map((e => {
                        e && (t[e.term] = e)
                    }))
                }
                try {
                    var n;
                    this.error = this.list = null;
                    var l = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    n = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(t))
                    }, {
                        headers: l
                    }), this.has_all_error = n.data.has_all_error, this.has_error = n.data.has_error, this.keywords = n.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = n.data.breakdown_url ? n.data.breakdown_url : null, this.device_breakdown_url = n.data.device_breakdown_url ? n.data.device_breakdown_url : null, this.keywords_payload = n.data.keywords_payload, this.metrics_url = n.data.metrics_url, this.current_scrape_urls = n.data.scrape_urls, await this.metrics(!0), this.inittrends()
                } catch (c) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("youtube-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                w = k("search-results-settings-modal-search-network"),
                q = k("search-results-settings-modal-currency"),
                U = k("search-results-settings-modal-search-volume"),
                M = k("search-results-settings-modal-search-volume-trend"),
                A = k("search-results-settings-modal-average-cpc"),
                P = k("search-results-settings-modal-bing-competition"),
                L = k("search-results-settings-modal-competition"),
                $ = k("search-results-settings-filter-positive-keywords"),
                D = k("search-results-settings-filter-negative-keywords"),
                j = k("alert-pro-upsell"),
                O = k("search-results-settings-modal-keyword-result-period"),
                V = k("search-results-settings-modal"),
                H = k("search-results-tabs"),
                I = k("has-error"),
                N = k("suggest-page-reload"),
                R = k("google-search-volume-summary"),
                K = k("show-upsell"),
                J = k("google-search-volume-result"),
                W = k("search-results-table-wrapper"),
                z = k("search-results-no-keyword-found"),
                Y = k("has-more"),
                G = k("dropdown-menu-item-add-basket"),
                X = k("dropdown-menu-item-divider"),
                Q = k("dropdown-menu-item-export-excel"),
                Z = k("dropdown-menu-item-export-csv"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", TK, [S("div", FK, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(V, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", qK, [S("div", EK, [S("h5", UK, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", MK, [S("div", AK, [S("div", PK, [S("label", LK, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, BK)])]), e.current_permissions.show_currency_settings ? (b(), g("div", $K, [S("div", DK, [S("label", jK, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", OK, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", VK, [E(w, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", HK, [E(q, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", IK, [S("div", NK, [S("h5", RK, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", KK, [S("div", JK, [E(U, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(M, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", WK, [E(A, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(P, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(L, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", zK, [S("div", YK, [E($, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", GK, [S("div", XK, [E(D, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(j, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, QK)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, ZK)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(O, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(H, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(I, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(N, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", eJ, [S("div", tJ, [E(R, {
                loading: e.loading,
                current_tab: e.current_tab,
                show_google_trends_chart: a.show_google_trends_chart,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                inittrends: e.inittrends,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "show_google_trends_chart", "summaries", "pie_summaries", "show_pie_chart", "inittrends", "current_permissions", "current_metrics_currency"]), !o.show_upsell || 1 != e.current_tab && 6 != e.current_tab && 3 != e.current_tab && 7 != e.current_tab ? T("", !0) : (b(), x(K, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, {
                lead: C((() => [S("p", {
                    class: "mb-0",
                    innerHTML: e.trans.get("Want More YouTube Views?")
                }, null, 8, rJ), S("p", {
                    innerHTML: e.trans.get("Use Keyword Tool Pro To Find The Most Popular YouTube Keywords!")
                }, null, 8, sJ)])),
                noopener: C((() => [S("span", {
                    innerHTML: e.trans.get("Subscribe to Keyword Tool Pro Now!")
                }, null, 8, aJ)])),
                _: 1
            }, 8, ["routes", "selected_language_name"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", oJ, [E(W, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(J, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [3 == e.current_tab ? (b(), g("h4", iJ, v(e.trans.get("Sorry, YouTube does not provide any questions for your query")), 1)) : 6 == e.current_tab ? (b(), g("h4", nJ, v(e.trans.get("Sorry, YouTube does not provide any prepositions for your query")), 1)) : 7 == e.current_tab ? (b(), g("h4", lJ, v(e.trans.get("Sorry, YouTube does not provide any hashtags for your query")), 1)) : (b(), g("h4", cJ, v(e.trans.get("Sorry, YouTube does not provide any keyword suggestions for your query")), 1))])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Y, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(G, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(X, {
                    key: 1
                })) : T("", !0), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(X), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    uJ = {
        class: "row g-0 me-lg-n1px"
    },
    dJ = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const mJ = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "youtube-language-select2",
            languages_url: "/search/keywords/youtube/languages",
            rebuild_event: "youtube-language-rebuild",
            cookie: "youtube_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", uJ, [S("div", dJ, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    hJ = {
        class: "row g-0 me-lg-n1px"
    },
    pJ = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    gJ = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const yJ = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/youtube/languages",
            locations_url: "/search/keywords/youtube/locations",
            location_search_engine: "google",
            rebuild_event: "youtube-language-rebuild",
            cookie: "youtube_search_engine",
            location_container_css_class: "youtube-location-select2",
            location_fav_cookie: "youtube_locations_fav",
            language_container_css_class: "youtube-language-select2",
            language_fav_cookie: "youtube_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", hJ, [S("div", pJ, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", gJ, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    fJ = ["value"],
    wJ = ["value"],
    bJ = {
        key: 2,
        class: "row"
    },
    vJ = {
        class: "col-12"
    },
    kJ = {
        class: "check-search-volume-settings-country mb-3"
    },
    xJ = {
        class: "form-label check-search-volume-settings-country-label"
    },
    CJ = {
        key: 3,
        class: "row"
    },
    SJ = {
        class: "col-12"
    },
    TJ = {
        class: "check-search-volume-settings-currency mb-3"
    },
    FJ = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const qJ = Ue({
    mixins: [NT]
}, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("tom-select");
        return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
            key: 0,
            name: "metrics_country",
            type: "hidden",
            value: e.country
        }, null, 8, fJ)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
            key: 1,
            name: "metrics_currency",
            type: "hidden",
            value: e.currency
        }, null, 8, wJ)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", bJ, [S("div", vJ, [S("div", kJ, [S("label", xJ, v(e.trans.get("Country")), 1), E(i, {
            options: e.current_country_list,
            settings: e.country_settings,
            class: "check-search-volume-settings-country-value",
            id: "metrics_country_selection",
            "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
            "model-value": e.current_metrics_country,
            placeholder: e.trans.get("Type a country")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", CJ, [S("div", SJ, [S("div", TJ, [S("label", FJ, v(e.trans.get("Currency")), 1), E(i, {
            options: e.current_currency_list,
            settings: e.currency_settings,
            class: "check-search-volume-settings-currency-value",
            id: "metrics_currency_selection",
            "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
            "model-value": e.current_metrics_currency,
            placeholder: e.trans.get("Type a currency")
        }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
    }]
]);
const EJ = Ue({
        mixins: [_p],
        components: {},
        props: ["preoptions"],
        data() {
            return {
                container_css_class: "etsy-category-select2",
                rebuild_event: "etsy-category-rebuild",
                cookie: "etsy_search_engine",
                options_data: this.preoptions
            }
        },
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), x(i, {
                disabled: e.loading,
                id: "category_" + e.id,
                options: e.options,
                required: !0,
                settings: e.settings,
                name: "category",
                "model-value": e.category,
                class: w("rounded-top-end-0 rounded-bottom-end-0"),
                placeholder: e.trans.get("Type a category")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])
        }]
    ]),
    UJ = {
        class: "search-results-settings my-2"
    },
    MJ = {
        class: "search-results-settings-display mx-n1"
    },
    AJ = {
        key: 0,
        class: "row"
    },
    PJ = {
        class: "col"
    },
    LJ = {
        class: "search-results-settings-modal-header mb-3 pb-1 border-bottom"
    },
    BJ = {
        key: 1,
        class: "row"
    },
    $J = {
        class: "col-12 col-md-6"
    },
    DJ = {
        key: 0,
        class: "search-results-settings-modal-country mb-3"
    },
    jJ = {
        class: "form-label search-results-settings-modal-country-label"
    },
    OJ = ["value"],
    VJ = {
        key: 0,
        class: "col-12 col-md-6"
    },
    HJ = {
        class: "search-results-settings-modal-currency mb-3"
    },
    IJ = {
        class: "form-label search-results-settings-modal-currency-label"
    },
    NJ = {
        key: 2,
        class: "row"
    },
    RJ = {
        key: 0,
        class: "col-12 col-md-6"
    },
    KJ = {
        key: 1,
        class: "col-12 col-md-6"
    },
    JJ = {
        class: "row"
    },
    WJ = {
        class: "col"
    },
    zJ = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    YJ = {
        key: 1,
        class: "row"
    },
    GJ = {
        class: "col-12 col-md-6"
    },
    XJ = {
        class: "col-12 col-md-6"
    },
    QJ = {
        class: "row"
    },
    ZJ = {
        class: "col-12"
    },
    eW = {
        class: "row"
    },
    tW = {
        class: "col-12"
    },
    rW = ["innerHTML"],
    sW = ["innerHTML"],
    aW = {
        class: "search-results-summary card my-4 bg-light"
    },
    oW = {
        class: "card-body"
    },
    iW = {
        class: "search-results-keywords my-3"
    },
    nW = {
        class: "mb-4"
    };
const lW = Ue({
        mixins: [mp],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx
        },
        computed: {
            show_upsell() {
                return !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            }
        },
        async mounted() {
            await this.defaultValue(), this.showFilter(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.loading = !0, this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                try {
                    var e;
                    this.error = this.list = null;
                    var t = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    e = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify({}))
                    }, {
                        headers: t
                    }), this.has_all_error = e.data.has_all_error, this.has_error = e.data.has_error, this.keywords = e.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.breakdown_url = e.data.breakdown_url ? e.data.breakdown_url : null, this.device_breakdown_url = e.data.device_breakdown_url ? e.data.device_breakdown_url : null, this.keywords_payload = e.data.keywords_payload, this.metrics_url = e.data.metrics_url, this.current_scrape_urls = e.data.scrape_urls, await this.metrics(!0)
                } catch (r) {
                    this.loading = !1, this.has_all_error = !0, this.has_error = !0
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applyTab(e) {
                Ce("etsy-category-rebuild", e), Ce("etsy-language-rebuild", e), Ce("search-form-keyword-rebuild"), this.current_tab = e, this.keywords = [], this.summaries = {}, this.pie_summaries = {}, this.current_filter_keyword_result_period = this.default_keyword_result_period, this.filter(!0)
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-bing-competition"),
                m = k("current-filter-competition"),
                h = k("current-split-filter-keywords"),
                p = k("current-split-filter-negative-keywords"),
                f = k("tom-select"),
                w = k("search-results-settings-modal-search-network"),
                q = k("search-results-settings-modal-currency"),
                U = k("search-results-settings-modal-search-volume"),
                M = k("search-results-settings-modal-search-volume-trend"),
                A = k("search-results-settings-modal-average-cpc"),
                P = k("search-results-settings-modal-bing-competition"),
                L = k("search-results-settings-modal-competition"),
                $ = k("search-results-settings-filter-positive-keywords"),
                D = k("search-results-settings-filter-negative-keywords"),
                j = k("alert-pro-upsell"),
                O = k("search-results-settings-modal-keyword-result-period"),
                V = k("search-results-settings-modal"),
                H = k("search-results-tabs"),
                I = k("has-error"),
                N = k("suggest-page-reload"),
                R = k("google-search-volume-summary"),
                K = k("show-upsell"),
                J = k("google-search-volume-result"),
                W = k("search-results-table-wrapper"),
                z = k("search-results-no-keyword-found"),
                Y = k("has-more"),
                G = k("dropdown-menu-item-add-basket"),
                X = k("dropdown-menu-item-divider"),
                Q = k("dropdown-menu-item-export-excel"),
                Z = k("dropdown-menu-item-export-csv"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), S("div", UJ, [S("div", MJ, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"]), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(d, {
                key: 0,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(m, {
                key: 1,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(h, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(p, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(V, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [e.current_permissions.show_search_volume_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_currency_settings ? (b(), g("div", AJ, [S("div", PJ, [S("h5", LJ, v(e.trans.get("Search Volume Settings")), 1)])])) : T("", !0), 4 == e.current_tab ? (b(), g("div", BJ, [S("div", $J, [4 == e.current_tab ? (b(), g("div", DJ, [S("label", jJ, v(e.trans.get("Country")), 1), S("input", {
                    disabled: "disabled",
                    class: "form-control",
                    type: "text",
                    value: e.selected_country_language_name
                }, null, 8, OJ)])) : T("", !0)]), e.current_permissions.show_currency_settings ? (b(), g("div", VJ, [S("div", HJ, [S("label", IJ, v(e.trans.get("Currency")), 1), E(f, {
                    id: "metrics_currency_selection",
                    class: "search-results-settings-modal-currency-value",
                    "model-value": e.current_metrics_currency,
                    options: e.current_currency_list,
                    settings: {},
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "disabled"])])])) : T("", !0)])) : (b(), g("div", NJ, [e.current_metrics_is_estimated ? T("", !0) : (b(), g("div", RJ, [E(w, {
                    current_network_list: e.current_network_list,
                    current_metrics_network: e.current_metrics_network,
                    "onUpdate:current_metrics_network": t[0] || (t[0] = t => e.current_metrics_network = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_network_list", "current_metrics_network", "disabled"])])), e.current_permissions.show_currency_settings ? (b(), g("div", KJ, [E(q, {
                    current_currency_list: e.current_currency_list,
                    current_metrics_currency: e.current_metrics_currency,
                    "onUpdate:current_metrics_currency": t[1] || (t[1] = t => e.current_metrics_currency = t),
                    disabled: 4 == e.current_tab
                }, null, 8, ["current_currency_list", "current_metrics_currency", "disabled"])])) : T("", !0)]))], 64)) : T("", !0), S("div", JJ, [S("div", WJ, [S("h5", zJ, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data ? (b(), g("div", YJ, [S("div", GJ, [E(U, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[2] || (t[2] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[3] || (t[3] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"]), E(M, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[4] || (t[4] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[5] || (t[5] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])]), S("div", XJ, [E(A, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[6] || (t[6] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[7] || (t[7] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"]), e.current_permissions.show_competition_dropdown_settings ? (b(), x(P, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[8] || (t[8] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(L, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[9] || (t[9] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[10] || (t[10] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])])) : T("", !0), S("div", QJ, [S("div", ZJ, [E($, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[11] || (t[11] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[12] || (t[12] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", eW, [S("div", tW, [E(D, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[13] || (t[13] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])]), E(j, {
                    current_permissions: e.current_permissions,
                    routes: e.routes
                }, {
                    message: C((() => [S("p", {
                        innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                            count_free: 5
                        })
                    }, null, 8, rW)])),
                    linktext: C((() => [S("span", {
                        innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                            count_pro: "2,000"
                        })
                    }, null, 8, sW)])),
                    _: 1
                }, 8, ["current_permissions", "routes"]), E(O, {
                    current_permissions: e.current_permissions,
                    current_filter_keyword_result_period: e.current_filter_keyword_result_period,
                    "onUpdate:current_filter_keyword_result_period": t[14] || (t[14] = t => e.current_filter_keyword_result_period = t),
                    current_keyword_result_periods: e.current_keyword_result_periods,
                    search_engine: e.search_engine
                }, null, 8, ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(H, {
                onApplyTab: o.applyTab,
                tabs: e.tabs,
                current_tab: e.current_tab,
                loading: e.loading
            }, null, 8, ["onApplyTab", "tabs", "current_tab", "loading"]), e.loading || !e.has_error && !e.has_all_error ? T("", !0) : (b(), x(I, {
                key: 0,
                user_is_paid: e.user_is_paid,
                has_metrics: e.has_metrics,
                onFetch: o.fetch,
                current_tab: e.current_tab
            }, null, 8, ["user_is_paid", "has_metrics", "onFetch", "current_tab"])), E(N, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", aW, [S("div", oW, [E(R, {
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_metrics_currency: e.current_metrics_currency
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_metrics_currency"]), o.show_upsell && 1 == e.current_tab ? (b(), x(K, {
                key: 0,
                routes: e.routes,
                selected_language_name: e.selected_language_name
            }, null, 8, ["routes", "selected_language_name"])) : T("", !0)])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", iW, [E(W, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                wrapper: C((() => [E(J, {
                    device_breakdown_data: e.device_breakdown_data,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    search_engine: e.search_engine,
                    keyword: e.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["device_breakdown_data", "loading", "current_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "user_is_paid"])])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics"]), E(z, {
                loading: e.loading,
                has_all_error: e.has_all_error,
                has_error: e.has_error,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics
            }, {
                message: C((() => [S("h4", nW, v(e.trans.get("Sorry, Etsy does not provide any keyword suggestions for your query")), 1)])),
                _: 1
            }, 8, ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"]), E(Y, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                has_error: e.has_error,
                has_all_error: e.has_all_error
            }, {
                "dropdown-menu-item": C((() => [e.allow_keyword_basket ? (b(), x(G, {
                    key: 0,
                    onAdd_basket: e.add_basket
                }, null, 8, ["onAdd_basket"])) : T("", !0), e.allow_keyword_basket ? (b(), x(X, {
                    key: 1
                })) : T("", !0), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(X), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"])])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "has_error", "has_all_error"])])
        }]
    ]),
    cW = {
        class: "row g-0 me-lg-n1px"
    },
    _W = {
        class: "col col-md-12 my-1 me-lg-n1px"
    };
const uW = Ue({
        mixins: [PT],
        components: {},
        data: () => ({
            container_css_class: "etsy-language-select2",
            languages_url: "/search/keywords/etsy/languages",
            rebuild_event: "etsy-language-rebuild",
            cookie: "etsy_search_engine"
        }),
        async created() {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", cW, [S("div", _W, [E(i, {
                disabled: e.loading,
                id: "keyword_language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "keyword_language",
                "model-value": e.keyword_language,
                onSelect: t[0] || (t[0] = t => e.selectLanguage(t)),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ]), F(S("input", {
                type: "hidden",
                name: "language",
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t)
            }, null, 512), [
                [U, e.language]
            ])])])
        }]
    ]),
    dW = {
        class: "row g-0 me-lg-n1px"
    },
    mW = {
        class: "col-12 col-md-7 my-1 me-n1px"
    },
    hW = {
        class: "col col-md-5 my-1 me-lg-n1px"
    };
const pW = Ue({
        mixins: [jT],
        components: {},
        data: () => ({
            languages_url: "/search/keywords/etsy/languages",
            locations_url: "/search/keywords/etsy/locations",
            location_search_engine: "google",
            rebuild_event: "etsy-language-rebuild",
            cookie: "etsy_search_engine",
            location_container_css_class: "etsy-location-select2",
            location_fav_cookie: "etsy_locations_fav",
            language_container_css_class: "etsy-language-select2",
            language_fav_cookie: "etsy_languages_fav"
        }),
        async created() {},
        methods: {}
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", dW, [S("div", mW, [E(i, {
                disabled: e.loading,
                id: "country_" + e.id,
                options: e.locations_options,
                required: !0,
                settings: e.locations_settings,
                onSelect: t[0] || (t[0] = t => e.selectLocations(t)),
                name: "location",
                "model-value": e.location,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"]), F(S("input", {
                type: "hidden",
                name: "country",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.country = t)
            }, null, 512), [
                [U, e.country]
            ])]), S("div", hW, [E(i, {
                disabled: e.loading,
                id: "language_" + e.id,
                options: e.language_options,
                required: !0,
                settings: e.language_settings,
                name: "language",
                "model-value": e.language,
                "onUpdate:modelValue": t[2] || (t[2] = t => e.language = t),
                placeholder: e.trans.get("Type a language")
            }, null, 8, ["disabled", "id", "options", "settings", "model-value", "placeholder"])])])
        }]
    ]),
    gW = ["value"],
    yW = ["value"],
    fW = {
        key: 2,
        class: "row"
    },
    wW = {
        class: "col-12"
    },
    bW = {
        class: "check-search-volume-settings-country mb-3"
    },
    vW = {
        class: "form-label check-search-volume-settings-country-label"
    },
    kW = {
        key: 3,
        class: "row"
    },
    xW = {
        class: "col-12"
    },
    CW = {
        class: "check-search-volume-settings-currency mb-3"
    },
    SW = {
        class: "form-label check-search-volume-settings-currency-label"
    };
const TW = Ue({
        mixins: [NT]
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", null, [e.permissions.show_search_location_settings ? (b(), g("input", {
                key: 0,
                name: "metrics_country",
                type: "hidden",
                value: e.country
            }, null, 8, gW)) : T("", !0), e.permissions.show_currency_settings ? (b(), g("input", {
                key: 1,
                name: "metrics_currency",
                type: "hidden",
                value: e.currency
            }, null, 8, yW)) : T("", !0), e.current_country_list.length && e.permissions.show_search_location_settings ? (b(), g("div", fW, [S("div", wW, [S("div", bW, [S("label", vW, v(e.trans.get("Country")), 1), E(i, {
                options: e.current_country_list,
                settings: e.country_settings,
                class: "check-search-volume-settings-country-value",
                id: "metrics_country_selection",
                "onUpdate:modelValue": t[0] || (t[0] = t => e.current_metrics_country = t),
                "model-value": e.current_metrics_country,
                placeholder: e.trans.get("Type a country")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0), e.current_currency_list.length && e.permissions.show_currency_settings ? (b(), g("div", kW, [S("div", xW, [S("div", CW, [S("label", SW, v(e.trans.get("Currency")), 1), E(i, {
                options: e.current_currency_list,
                settings: e.currency_settings,
                class: "check-search-volume-settings-currency-value",
                id: "metrics_currency_selection",
                "onUpdate:modelValue": t[1] || (t[1] = t => e.current_metrics_currency = t),
                "model-value": e.current_metrics_currency,
                placeholder: e.trans.get("Type a currency")
            }, null, 8, ["options", "settings", "model-value", "placeholder"])])])])) : T("", !0)])
        }]
    ]),
    FW = {
        mixins: [mp, DT],
        components: {
            "google-search-volume-summary": zg,
            "google-search-volume-result": Wx,
            "bing-search-volume-summary": cE,
            "bing-search-volume-result": wA
        },
        props: {
            keyword: {
                type: String,
                required: !1,
                default: ""
            },
            filter_url: {
                type: String,
                required: !1,
                default: ""
            },
            negative_keywords_limit: {
                type: [Number],
                required: !1,
                default: 0
            },
            sub_tabs: {
                type: Array,
                required: !0,
                default: function() {
                    return []
                }
            },
            default_sub_tab: {
                type: [String, Number],
                required: !0,
                default: ""
            },
            search_urls: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            }
        },
        data: () => ({
            current_sub_tab: null,
            current_sub_tabs: [],
            location: "",
            locations_options: [],
            locations_settings: {},
            locations_country: [],
            locations_term: "",
            locations_limit: 10,
            locations_url_api: "/search/keywords/google/locations",
            search_type: null,
            facet_filters: [],
            exclude_filters: [],
            language_settings: {},
            current_sub_tab_item: {}
        }),
        computed: {
            show_upsell() {
                return !this.current_permissions.pro_is_paused && !this.current_permissions.show_search_volume_data && this.has_keywords && !this.loading
            },
            current_sub_tab_name() {
                var e = "";
                return this.current_sub_tabs.forEach((t => {
                    t.value == this.current_sub_tab && (e = t.title)
                })), e
            },
            current_search_engine() {
                return 3 == this.current_sub_tab ? "bing" : "google"
            },
            search_url() {
                var e = "";
                return this.current_sub_tab && this.search_urls[this.current_sub_tab] && (e = this.search_urls[this.current_sub_tab]), e
            }
        },
        async created() {
            this.id = se(), this.locations_settings = {
                containerCssClass: "form-control pe-3 country-dropdown basket-location-select2",
                load: async (e, t) => {
                    this.locations_term = e;
                    var r = {
                        query: e,
                        facets: "*,country_code",
                        facetFilters: this.facet_filters,
                        excludeFilters: this.exclude_filters,
                        hitsPerPage: this.locations_limit,
                        search_engine: this.current_search_engine
                    };
                    this.locationSearchSuggest(r).then((e => {
                        if (e.query == this.locations_term) {
                            let r = e.hits ? e.hits : [];
                            t(this.processLocations(r))
                        } else t()
                    }))
                },
                autocomplete: !0
            }, this.language_settings = {
                width: "auto",
                theme: "bootstrap4",
                dropdownAutoWidth: !0,
                minimumResultsForSearch: 5,
                containerCssClass: "form-control language-dropdown basket-language-select2"
            }
        },
        async mounted() {
            this.current_sub_tab = this.default_sub_tab, this.current_sub_tabs = this.sub_tabs, this.setCurrentSubTab(), Ce("update-basket-badge", this.user_is_paid, this.current_sub_tabs), await this.defaultValue(), this.showFilter(), this.setLocationUrl(), this.build(), await this.fetch()
        },
        methods: {
            async fetch() {
                this.page_reload_timer = window.setTimeout((() => {
                    this.suggest_page_reload = !0
                }), 4e4), this.loading = !0, this.has_all_error = !1, this.has_error = !1, this.has_keywords = !1, this.has_metrics = !1, this.has_more = !1, this.keywords = [], this.selected = [], this.selected_all = !1, this.summaries = {}, this.pie_summaries = {};
                var e;
                if (this.allow_storage_basket && "undefined" != typeof Storage) var t = this.$storage.getStorageSync("basket_keywords_" + this.current_sub_tab);
                else t = this.$cookies.get("basket_keywords_" + this.current_sub_tab);
                t || (t = {}), e = t;
                try {
                    var r;
                    this.error = this.list = null;
                    var s = {
                        "Content-Type": "application/json",
                        Token: this.current_token
                    };
                    r = await axios.post(this.resource, {
                        payload: this.sanitizePayload(JSON.stringify(e)),
                        keyword_basket_search_engine: this.current_sub_tab
                    }, {
                        headers: s
                    }), this.has_all_error = r.data.has_all_error, this.has_error = r.data.has_error, this.keywords = r.data.keywords, this.has_keywords = !!this.keywords && this.keywords.length > 0, this.keywords_payload = r.data.keywords_payload, this.metrics_url = r.data.metrics_url, await this.metrics(!0)
                } catch (a) {
                    this.loading = !1, this.catchError({
                        message: this.trans.get("Sorry, there was an unexpected error.")
                    })
                }
                clearTimeout(this.page_reload_timer), this.suggest_page_reload = !1
            },
            async applySubTab(e) {
                this.current_sub_tab = e, this.keywords = [], this.setLocationUrl(), this.resetFilter(), this.build(), this.filter(), this.setCurrentSubTab();
                let t = bootstrap.Popover.getInstance(document.getElementById(`subnav${e}`));
                t && t.hide()
            },
            async delete_basket(e = null) {
                var t;
                let r;
                if (0 == this.all_keywords.length || 12 != this.current_tab) return !1;
                if (e) {
                    var s = [e.keyword_id];
                    r = `"${e.keyword}"`, this.process_delete_basket_keywords(s, r)
                } else {
                    if (this.selected.length > 0) {
                        if ((s = [...new Set(this.selected)]).length > 1) {
                            var a = this.trans.get(":count keywords", {
                                count: this.selected_keywords_format
                            });
                            r = a
                        } else {
                            a = this.trans.get(":count keyword", {
                                count: this.selected_keywords_format
                            });
                            if (this.user_is_paid) r = null == (t = document.querySelector(`input[value="${s[0]}"]`)) ? void 0 : t.getAttribute("data-value");
                            else {
                                e = JSON.parse(s[0]);
                                r = e[0]
                            }
                            r = `"${r}"`
                        }
                    } else {
                        s = [...new Set(this.all_keywords)], a = this.trans.get("all keywords");
                        r = a
                    }
                    bsDialogs.create(this.trans.get("Are you sure you want to delete :count_format from :search_engine basket?", {
                        count_format: a,
                        search_engine: this.current_sub_tab_name
                    }), [{
                        classes: "btn-warning ms-auto",
                        text: '<i class="bi bi-trash"></i> ' + this.trans.get("Delete"),
                        value: !0
                    }, {
                        classes: "btn-outline-warning me-auto",
                        text: this.trans.get("Cancel"),
                        value: !1
                    }], "", "warning").then((e => {
                        "true" === e && this.process_delete_basket_keywords(s, r)
                    }))
                }
            },
            async process_delete_basket_keywords(e, t) {
                this.loading = !0;
                try {
                    if (this.user_is_paid) {
                        var r = {
                            "Content-Type": "application/json",
                            Token: this.current_token
                        };
                        if (this.delete_basket_url) {
                            var s = await axios.post(this.delete_basket_url, {
                                keywords_payload: this.keywords_payload,
                                basket_keywords: e,
                                keyword_basket_search_engine: this.current_sub_tab
                            }, {
                                headers: r
                            });
                            if (s && s.data) {
                                if (s.data.redirect) return window.location = s.data.redirect;
                                "success" == s.data.result ? (this.$root.update_keyword_basket_counter(".total-keyword-basket-items", s.data.total), this.$root.update_keyword_basket_counter(".total-keyword-basket-items-" + this.current_sub_tab, s.data.search_engine_items), this.current_sub_tabs.forEach((e => {
                                    e.value == this.current_sub_tab && (e.total = s.data.search_engine_items)
                                })), await this.fetch(), this.$nextTick((() => {
                                    bsToaster.create("", this.trans.get("Deleted :count_format from the basket.", {
                                        count_format: t
                                    }), {
                                        type: "success",
                                        animation: !0,
                                        delay: 5e3
                                    })
                                }))) : (this.loading = !1, this.catchError({
                                    message: this.trans.get("Sorry, there was an unexpected error.")
                                }))
                            } else this.loading = !1, this.catchError({
                                message: this.trans.get("Sorry, there was an unexpected error.")
                            })
                        } else this.loading = !1, this.catchError({
                            message: this.trans.get("Sorry, there was an unexpected error.")
                        })
                    } else {
                        if (this.allow_storage_basket && "undefined" != typeof Storage) var a = this.$storage.getStorageSync("basket_keywords_" + this.current_sub_tab);
                        else a = this.$cookies.get("basket_keywords_" + this.current_sub_tab);
                        a || (a = {
                            search_engine: this.current_sub_tab,
                            keywords: []
                        }), a.keywords && e.forEach((e => {
                            a.keywords.forEach(((t, r) => {
                                t.keyword_id && t.keyword_id == e && a.keywords.splice(r, 1)
                            }))
                        }));
                        let r = a.keywords.length;
                        this.$root.update_keyword_basket_counter(".total-keyword-basket-items", r), this.$root.update_keyword_basket_counter(".total-keyword-basket-items-" + this.current_sub_tab, r), this.current_sub_tabs.forEach((e => {
                            e.value == this.current_sub_tab && (e.total = r)
                        })), this.allow_storage_basket && "undefined" != typeof Storage ? await this.$storage.setStorageSync("basket_keywords_" + this.current_sub_tab, a) : await this.$cookies.set("basket_keywords_" + this.current_sub_tab, a), Ce("update-basket-badge", this.user_is_paid, this.current_sub_tabs), await this.fetch(), this.$nextTick((() => {
                            bsToaster.create("", this.trans.get("Deleted :count_format from the basket.", {
                                count_format: t
                            }), {
                                type: "success",
                                animation: !0,
                                delay: 5e3
                            })
                        }))
                    }
                } catch (o) {
                    this.loading = !1, this.catchError({
                        message: this.trans.get("Sorry, there was an unexpected error.")
                    })
                }
            },
            async clear_basket() {
                if (0 == this.all_keywords.length || 12 != this.current_tab) return !1;
                bsDialogs.create(this.trans.get("Are you sure you want to clear your Keyword Basket?"), [{
                    classes: "btn-warning ms-auto",
                    text: '<i class="bi bi-trash"></i> ' + this.trans.get("Clear"),
                    value: !0
                }, {
                    classes: "btn-outline-warning me-auto",
                    text: this.trans.get("Cancel"),
                    value: !1
                }], "", "warning").then((async e => {
                    if ("true" === e) {
                        this.loading = !0;
                        try {
                            if (this.user_is_paid) {
                                var t = {
                                    "Content-Type": "application/json",
                                    Token: this.current_token
                                };
                                if (this.clear_basket_url) {
                                    var r = await axios.post(this.clear_basket_url, {
                                        keywords_payload: this.keywords_payload,
                                        keyword_basket_search_engine: this.current_sub_tab
                                    }, {
                                        headers: t
                                    });
                                    if (r && r.data) {
                                        if (r.data.redirect) return window.location = r.data.redirect;
                                        if ("success" == r.data.result) {
                                            this.$root.update_keyword_basket_counter(".total-keyword-basket-items", r.data.total), this.$root.update_keyword_basket_counter(".total-keyword-basket-items-" + this.current_sub_tab, r.data.search_engine_items), this.current_sub_tabs.filter((e => e.value == this.current_sub_tab))[0].total = r.data.search_engine_items, await this.fetch(), this.$nextTick((() => {
                                                bsDialogs.create(this.trans.get("Keyword basket has been cleared."), [{
                                                    classes: "btn-success mx-auto",
                                                    text: this.trans.get("OK"),
                                                    value: !0
                                                }], "", "success").then((e => {}))
                                            }))
                                        } else this.loading = !1, this.catchError({
                                            message: this.trans.get("Sorry, there was an unexpected error.")
                                        })
                                    } else this.loading = !1, this.catchError({
                                        message: this.trans.get("Sorry, there was an unexpected error.")
                                    })
                                } else this.loading = !1, this.catchError({
                                    message: this.trans.get("Sorry, there was an unexpected error.")
                                })
                            } else {
                                this.$root.update_keyword_basket_counter(".total-keyword-basket-items", 0), this.$root.update_keyword_basket_counter(".total-keyword-basket-items-" + this.current_sub_tab, 0), this.current_sub_tabs.filter((e => e.value == this.current_sub_tab))[0].total = r.data.search_engine_items, this.allow_storage_basket && "undefined" != typeof Storage ? await this.$storage.removeStorageSync("basket_keywords_" + this.current_sub_tab) : await this.$cookies.remove("basket_keywords_" + this.current_sub_tab), await this.fetch(), this.$nextTick((() => {
                                    bsDialogs.create(this.trans.get("Keyword basket has been cleared."), [{
                                        classes: "btn-success mx-auto",
                                        text: this.trans.get("OK"),
                                        value: !0
                                    }], "", "success").then((e => {}))
                                }))
                            }
                        } catch (s) {
                            this.loading = !1, this.catchError({
                                message: this.trans.get("Sorry, there was an unexpected error.")
                            })
                        }
                    }
                }))
            },
            setLocationUrl() {
                var e = this.current_sub_tabs.find((e => e.value == this.current_sub_tab));
                e && (this.locations_url_api = e.location_url)
            },
            processLocations(e) {
                return {
                    results: e.map((e => ({
                        country: e.country_code,
                        html: this.locationResultsFormat(e),
                        id: e.location_id + "|" + e.location_name,
                        text: this.locationTextFormat(e)
                    })))
                }
            },
            locationResults: e => e.loading ? "Searching..." : e.html,
            async build() {
                this.language_options = [], this.locations_options = [];
                let e = "";
                if (this.current_filter_location) {
                    let t = this.current_filter_location.split("|");
                    e = t[0] ? t[0] : ""
                }
                let t = await axios.get(this.locations_url_api, {
                    params: {
                        location: e,
                        search_type: this.search_type,
                        tutorial: this.$root.isTutorial()
                    }
                });
                t.data && (this.facet_filters = [], 3 != this.current_sub_tab && 1 != this.current_sub_tab && this.facet_filters.push([{
                    field: "location_type",
                    value: "Country"
                }, {
                    field: "location_type",
                    value: "All Countries"
                }]), e && t.data.selected && (this.locations_options = [{
                    id: t.data.selected.location_id,
                    text: t.data.selected.location_name,
                    selected: !0
                }], this.current_filter_location = t.data.selected.location_id), t.data.only_country ? this.locations_country = t.data.only_country.map((e => ({
                    field: "country_code",
                    value: e
                }))) : this.locations_country = [], this.facet_filters.push(this.locations_country), t.data.exclude_locations ? this.exclude_locations = t.data.exclude_locations.map((e => ({
                    field: "location_id",
                    value: e
                }))) : this.exclude_locations = [], this.exclude_filters.push(this.exclude_locations), t.data.exclude_location_countries ? this.exclude_location_countries = t.data.exclude_location_countries.map((e => ({
                    field: "country_code",
                    value: e
                }))) : this.exclude_location_countries = [], this.exclude_filters.push(this.exclude_location_countries), t.data.limit && (this.locations_limit = t.data.limit))
            },
            setCurrentSubTab() {
                this.current_sub_tab_item = this.current_sub_tabs.filter((e => e.value == this.current_sub_tab))[0]
            }
        }
    },
    qW = {
        key: 0,
        class: "dropdown-search-engines dropdown d-lg-none d-xl-none my-2"
    },
    EW = {
        class: "dropdown-toggle-google btn dropdown-toggle text-dark px-2",
        href: "#",
        role: "button",
        id: "nav-search-engines-dropdown",
        "data-bs-toggle": "dropdown",
        "aria-haspopup": "true",
        "aria-expanded": "false"
    },
    UW = ["innerHTML"],
    MW = {
        class: "ms-2"
    },
    AW = {
        class: "dropdown-menu shadow",
        "aria-labelledby": "nav-search-engines-dropdown"
    },
    PW = ["onClick"],
    LW = ["innerHTML"],
    BW = {
        class: "ms-1"
    },
    $W = {
        key: 0,
        class: "ms-1"
    },
    DW = {
        class: "d-none d-lg-block"
    },
    jW = {
        key: 0,
        class: "search-results-tabs-by-search-engines nav-search-tabs nav nav-tabs mb-3"
    },
    OW = ["onClick", "data-bs-content", "id"],
    VW = ["innerHTML"],
    HW = {
        key: 0,
        class: "ms-1"
    },
    IW = {
        key: 1,
        class: "ms-1"
    },
    NW = {
        class: "search-results-settings my-2"
    },
    RW = {
        class: "search-results-settings-display mx-n1"
    },
    KW = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-currency btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    JW = {
        class: "search-results-settings-display-currency-label"
    },
    WW = {
        class: "search-results-settings-display-currency-value"
    },
    zW = {
        key: 1,
        type: "button",
        class: "btn-search-results-settings-display-location btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    YW = {
        class: "search-results-settings-display-location-label"
    },
    GW = {
        class: "search-results-settings-display-location-value"
    },
    XW = {
        key: 2,
        type: "button",
        class: "btn-search-results-settings-display-language btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    QW = {
        class: "search-results-settings-display-language-label"
    },
    ZW = {
        class: "search-results-settings-display-language-value"
    },
    ez = {
        class: "row"
    },
    tz = {
        class: "col"
    },
    rz = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    sz = {
        key: 0,
        class: "row"
    },
    az = {
        key: 0,
        class: "col-12 col-md-6"
    },
    oz = {
        class: "search-results-settings-modal-location mb-3"
    },
    iz = {
        class: "form-label search-results-settings-modal-location-label"
    },
    nz = {
        key: 1,
        class: "col-12 col-md-6"
    },
    lz = {
        class: "search-results-settings-modal-language mb-3"
    },
    cz = {
        class: "form-label search-results-settings-modal-language-label"
    },
    _z = {
        class: "row"
    },
    uz = {
        key: 0,
        class: "col-12 col-md-6 order-0"
    },
    dz = {
        key: 1,
        class: "col-12 col-md-6 order-1 order-md-2"
    },
    mz = {
        key: 2,
        class: "col-12 col-md-6 order-2 order-md-1"
    },
    hz = {
        key: 3,
        class: "col-12 col-md-6 order-3"
    },
    pz = {
        key: 1,
        class: "row"
    },
    gz = {
        key: 0,
        class: "col-12 col-md-6"
    },
    yz = {
        key: 0,
        class: "search-results-settings-modal-low-top-page-bid mb-3"
    },
    fz = {
        class: "form-label search-results-settings-modal-low-top-page-bid-label"
    },
    wz = {
        class: "search-results-settings-modal-low-top-page-bid-value input-group"
    },
    bz = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    vz = {
        key: 1,
        class: "col-12 col-md-6"
    },
    kz = {
        key: 0,
        class: "search-results-settings-modal-high-top-page-bid mb-3"
    },
    xz = {
        class: "form-label search-results-settings-modal-high-top-page-bid-label"
    },
    Cz = {
        class: "search-results-settings-modal-high-top-page-bid-value input-group"
    },
    Sz = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    Tz = {
        class: "row"
    },
    Fz = {
        class: "col-12"
    },
    qz = {
        class: "row"
    },
    Ez = {
        class: "col-12"
    },
    Uz = {
        class: "search-results-summary card my-4 bg-light"
    },
    Mz = {
        class: "card-body"
    },
    Az = {
        class: "search-results-keywords my-3"
    },
    Pz = {
        key: 0,
        class: "search-results-empty my-4"
    },
    Lz = {
        class: "container-fluid container-640 my-2 my-lg-3 py-0 py-lg-3"
    },
    Bz = {
        class: "row my-2 my-lg-3 py-0 py-lg-3 alert alert-warning"
    },
    $z = {
        class: "col"
    },
    Dz = {
        class: "mt-2 mb-4 my-lg-4"
    },
    jz = ["innerHTML"],
    Oz = {
        key: 1
    },
    Vz = {
        class: "col-sm-12 col-lg-4"
    },
    Hz = {
        class: "row"
    },
    Iz = S("div", {
        class: "col-3 d-lg-none d-xl-none"
    }, null, -1),
    Nz = {
        class: "col"
    },
    Rz = ["src"],
    Kz = S("div", {
        class: "col-3 d-lg-none d-xl-none"
    }, null, -1),
    Jz = S("i", {
        class: "bi bi-trash me-1"
    }, null, -1);
const Wz = Ue(FW, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section"),
                n = k("current-filter-keyword-result-period"),
                l = k("current-metrics-network"),
                c = k("current-filter-search-volume"),
                _ = k("current-filter-search-volume-trend"),
                u = k("current-filter-average-cpc"),
                d = k("current-filter-low-top-page-bid"),
                m = k("current-filter-high-top-page-bid"),
                h = k("current-filter-bing-competition"),
                p = k("current-filter-competition"),
                q = k("current-split-filter-keywords"),
                M = k("current-split-filter-negative-keywords"),
                P = k("tom-select"),
                $ = k("search-results-settings-modal-search-volume"),
                D = k("search-results-settings-modal-search-volume-trend"),
                j = k("search-results-settings-modal-average-cpc"),
                O = k("search-results-settings-modal-bing-competition"),
                V = k("search-results-settings-modal-competition"),
                H = k("search-results-settings-filter-positive-keywords"),
                I = k("search-results-settings-filter-negative-keywords"),
                N = k("search-results-settings-modal"),
                R = k("suggest-page-reload"),
                K = k("bing-search-volume-summary"),
                J = k("google-search-volume-summary"),
                W = k("bing-search-volume-result"),
                z = k("google-search-volume-result"),
                Y = k("search-results-table-wrapper"),
                G = k("has-more"),
                X = k("dropdown-menu-item-export-excel"),
                Q = k("dropdown-menu-item-export-csv"),
                Z = k("dropdown-menu-item-divider"),
                ee = k("dropdown-menu-item-copy-keywords"),
                te = k("dropdown-menu-item-copy-keywords-search-volume"),
                re = k("dropdown-menu-item-copy-keywords-all-data"),
                se = k("search-results-actions"),
                ae = L("mask");
            return b(), g("div", null, [E(i, {
                loading: e.loading
            }, null, 8, ["loading"]), a.current_sub_tabs ? (b(), g("div", qW, [S("a", EW, [S("span", {
                innerHTML: a.current_sub_tab_item.icon
            }, null, 8, UW), S("span", MW, v(a.current_sub_tab_item.title), 1)]), S("div", AW, [(b(!0), g(y, null, f(a.current_sub_tabs, ((t, r) => (b(), g("a", {
                key: r,
                href: null,
                onClick: e => o.applySubTab(t.value),
                class: w(["dropdown-item-search-google dropdown-item", {
                    active: t.value == a.current_sub_tab,
                    disabled: e.loading
                }])
            }, [S("span", {
                innerHTML: t.icon
            }, null, 8, LW), S("span", BW, v(t.title), 1), t.total > 0 ? (b(), g("span", $W, [A("("), S("span", {
                class: w("total-keyword-basket-items-" + t.value)
            }, v(e.$filters.digit(t.total)), 3), A(")")])) : T("", !0)], 10, PW)))), 128))])])) : T("", !0), S("div", DW, [a.current_sub_tabs ? (b(), g("ul", jW, [(b(!0), g(y, null, f(a.current_sub_tabs, ((t, r) => (b(), g("li", {
                class: "nav-item",
                key: r
            }, [S("a", {
                class: w([{
                    active: t.value == a.current_sub_tab,
                    disabled: t.value == a.current_sub_tab || e.loading
                }, "nav-link cursor-pointer"]),
                onClick: e => o.applySubTab(t.value),
                "data-bs-toggle": "popover",
                "data-bs-placement": "top",
                "data-bs-content": t.title,
                "data-bs-trigger": "hover focus",
                role: "button",
                id: `subnav${t.value}`
            }, [S("span", {
                innerHTML: t.icon
            }, null, 8, VW), t.value == a.current_sub_tab ? (b(), g("span", HW, v(t.title), 1)) : T("", !0), t.total > 0 ? (b(), g("span", IW, [A("("), S("span", {
                class: w("total-keyword-basket-items-" + t.value)
            }, v(e.$filters.digit(t.total)), 3), A(")")])) : T("", !0)], 10, OW)])))), 128))])) : T("", !0)]), S("div", NW, [S("div", RW, [E(n, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_keyword_result_period: e.show_current_filter_keyword_result_period,
                default_keyword_result_period: e.default_keyword_result_period
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"]), e.current_permissions.show_search_volume_data ? (b(), g(y, {
                key: 0
            }, [e.show_current_filter_currency ? (b(), g("button", KW, [S("strong", JW, v(e.trans.get("Currency")) + ":", 1), S("span", WW, v(e.show_current_filter_currency), 1), S("a", {
                class: "search-results-settings-display-currency-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.clearFilter("currency"))
            }, "×")])) : T("", !0), e.show_current_filter_location ? (b(), g("button", zW, [S("strong", YW, v(e.trans.get("Location")) + ":", 1), S("span", GW, v(e.show_current_filter_location), 1), S("a", {
                class: "search-results-settings-display-location-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[1] || (t[1] = t => e.clearFilter("location"))
            }, "×")])) : T("", !0), e.show_current_filter_language ? (b(), g("button", XW, [S("strong", QW, v(e.trans.get("Language")) + ":", 1), S("span", ZW, v(e.show_current_filter_language), 1), S("a", {
                class: "search-results-settings-display-language-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[2] || (t[2] = t => e.clearFilter("language"))
            }, "×")])) : T("", !0), E(l, {
                current_permissions: e.current_permissions,
                show_current_metrics_network: e.show_current_metrics_network,
                show_metrics_is_estimated: e.show_metrics_is_estimated
            }, null, 8, ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"]), E(c, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_min: e.show_current_filter_search_volume_min,
                show_current_filter_search_volume_max: e.show_current_filter_search_volume_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"]), E(_, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_search_volume_trend_min: e.show_current_filter_search_volume_trend_min,
                show_current_filter_search_volume_trend_max: e.show_current_filter_search_volume_trend_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"])], 64)) : T("", !0), E(u, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_average_cpc_min: e.show_current_filter_average_cpc_min,
                show_current_filter_average_cpc_max: e.show_current_filter_average_cpc_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"]), e.summaries.has_top_page_bid ? (b(), g(y, {
                key: 1
            }, [E(d, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_low_top_page_bid_min: e.show_current_filter_low_top_page_bid_min,
                show_current_filter_low_top_page_bid_max: e.show_current_filter_low_top_page_bid_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_low_top_page_bid_min", "show_current_filter_low_top_page_bid_max"]), E(m, {
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_high_top_page_bid_min: e.show_current_filter_high_top_page_bid_min,
                show_current_filter_high_top_page_bid_max: e.show_current_filter_high_top_page_bid_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_high_top_page_bid_min", "show_current_filter_high_top_page_bid_max"])], 64)) : T("", !0), e.summaries.has_competition_text ? (b(), x(h, {
                key: 2,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition: e.show_current_filter_competition
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition"])) : (b(), x(p, {
                key: 3,
                onClearFilter: e.clearFilter,
                current_permissions: e.current_permissions,
                show_current_filter_competition_min: e.show_current_filter_competition_min,
                show_current_filter_competition_max: e.show_current_filter_competition_max
            }, null, 8, ["onClearFilter", "current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"])), E(q, {
                show_current_split_filter_keywords: e.show_current_split_filter_keywords,
                show_display_filter_keywords: e.show_display_filter_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_filter_keywords", "show_display_filter_keywords", "onClearFilter"]), E(M, {
                show_current_split_negative_keywords: e.show_current_split_negative_keywords,
                show_display_filter_negative_keywords: e.show_display_filter_negative_keywords,
                onClearFilter: e.clearFilter
            }, null, 8, ["show_current_split_negative_keywords", "show_display_filter_negative_keywords", "onClearFilter"])]), E(N, {
                onResetFilter: e.resetFilter,
                onApplyFilter: e.applyFilter,
                filter_counter: e.filter_counter,
                onClonedDataOnShownModal: e.clonedDataOnShownModal,
                onRestoreClonedDataOnHideModal: e.restoreClonedDataOnHideModal
            }, {
                content: C((() => [S("div", ez, [S("div", tz, [S("h5", rz, v(e.trans.get("Filter Results")), 1)])]), e.current_permissions.show_search_volume_data || e.current_permissions.show_cpc_data || e.current_permissions.show_competition_data || e.current_permissions.show_location_data || e.current_permissions.show_language_data ? (b(), g(y, {
                    key: 0
                }, [e.current_permissions.show_location_data || e.current_permissions.show_language_data ? (b(), g("div", sz, [e.current_permissions.show_location_data ? (b(), g("div", az, [S("div", oz, [S("label", iz, v(e.trans.get("Location")), 1), E(P, {
                    disabled: e.loading,
                    id: "country_" + e.id,
                    options: a.locations_options,
                    settings: a.locations_settings,
                    name: "location",
                    "model-value": e.current_filter_location,
                    "onUpdate:modelValue": t[3] || (t[3] = t => e.current_filter_location = t)
                }, null, 8, ["disabled", "id", "options", "settings", "model-value"])])])) : T("", !0), e.current_permissions.show_language_data ? (b(), g("div", nz, [S("div", lz, [S("label", cz, v(e.trans.get("Language")), 1), E(P, {
                    id: "metrics_language_selection",
                    class: "search-results-settings-modal-language-value",
                    "model-value": e.current_filter_language,
                    "onUpdate:modelValue": t[4] || (t[4] = t => e.current_filter_language = t),
                    name: "filter_language",
                    options: e.current_language_list,
                    settings: a.language_settings,
                    disabled: 4 == e.current_tab
                }, null, 8, ["model-value", "options", "settings", "disabled"])])])) : T("", !0)])) : T("", !0), S("div", _z, [e.current_permissions.show_search_volume_data ? (b(), g("div", uz, [E($, {
                    current_permissions: e.current_permissions,
                    search_volume_format: e.search_volume_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_min: e.current_filter_search_volume_min,
                    "onUpdate:current_filter_search_volume_min": t[5] || (t[5] = t => e.current_filter_search_volume_min = t),
                    current_filter_search_volume_max: e.current_filter_search_volume_max,
                    "onUpdate:current_filter_search_volume_max": t[6] || (t[6] = t => e.current_filter_search_volume_max = t)
                }, null, 8, ["current_permissions", "search_volume_format", "error_fields", "current_filter_search_volume_min", "current_filter_search_volume_max"])])) : T("", !0), e.current_permissions.show_search_volume_data ? (b(), g("div", dz, [E(D, {
                    current_permissions: e.current_permissions,
                    search_volume_trend_format: e.search_volume_trend_format,
                    error_fields: e.error_fields,
                    current_filter_search_volume_trend_min: e.current_filter_search_volume_trend_min,
                    "onUpdate:current_filter_search_volume_trend_min": t[7] || (t[7] = t => e.current_filter_search_volume_trend_min = t),
                    current_filter_search_volume_trend_max: e.current_filter_search_volume_trend_max,
                    "onUpdate:current_filter_search_volume_trend_max": t[8] || (t[8] = t => e.current_filter_search_volume_trend_max = t)
                }, null, 8, ["current_permissions", "search_volume_trend_format", "error_fields", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"])])) : T("", !0), e.current_permissions.show_cpc_data ? (b(), g("div", mz, [E(j, {
                    current_permissions: e.current_permissions,
                    average_cpc_format: e.average_cpc_format,
                    error_fields: e.error_fields,
                    current_filter_average_cpc_min: e.current_filter_average_cpc_min,
                    "onUpdate:current_filter_average_cpc_min": t[9] || (t[9] = t => e.current_filter_average_cpc_min = t),
                    current_filter_average_cpc_max: e.current_filter_average_cpc_max,
                    "onUpdate:current_filter_average_cpc_max": t[10] || (t[10] = t => e.current_filter_average_cpc_max = t)
                }, null, 8, ["current_permissions", "average_cpc_format", "error_fields", "current_filter_average_cpc_min", "current_filter_average_cpc_max"])])) : T("", !0), e.current_permissions.show_competition_data ? (b(), g("div", hz, [e.summaries.has_competition_text ? (b(), x(O, {
                    key: 0,
                    current_permissions: e.current_permissions,
                    current_filter_competition: e.current_filter_competition,
                    "onUpdate:current_filter_competition": t[11] || (t[11] = t => e.current_filter_competition = t)
                }, null, 8, ["current_permissions", "current_filter_competition"])) : (b(), x(V, {
                    key: 1,
                    current_permissions: e.current_permissions,
                    competition_format: e.competition_format,
                    error_fields: e.error_fields,
                    current_filter_competition_min: e.current_filter_competition_min,
                    "onUpdate:current_filter_competition_min": t[12] || (t[12] = t => e.current_filter_competition_min = t),
                    current_filter_competition_max: e.current_filter_competition_max,
                    "onUpdate:current_filter_competition_max": t[13] || (t[13] = t => e.current_filter_competition_max = t)
                }, null, 8, ["current_permissions", "competition_format", "error_fields", "current_filter_competition_min", "current_filter_competition_max"]))])) : T("", !0)]), e.summaries.has_top_page_bid && (e.current_permissions.show_low_top_page_bid_data || e.current_permissions.show_high_top_page_bid_data) ? (b(), g("div", pz, [e.current_permissions.show_low_top_page_bid_data ? (b(), g("div", gz, [e.current_permissions.show_low_top_page_bid_data ? (b(), g("div", yz, [S("label", fz, v(e.trans.get("Top of Page Bid (Low Range)")), 1), S("div", wz, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.low_top_page_bid_min
                    }]),
                    "onUpdate:modelValue": t[14] || (t[14] = t => e.current_filter_low_top_page_bid_min = t),
                    name: "low_top_page_bid_min"
                }, null, 2), [
                    [ae, e.low_top_page_bid_format],
                    [U, e.current_filter_low_top_page_bid_min]
                ]), S("span", bz, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.low_top_page_bid_max
                    }]),
                    "onUpdate:modelValue": t[15] || (t[15] = t => e.current_filter_low_top_page_bid_max = t),
                    name: "low_top_page_bid_max"
                }, null, 2), [
                    [ae, e.low_top_page_bid_format],
                    [U, e.current_filter_low_top_page_bid_max]
                ])])])) : T("", !0)])) : T("", !0), e.current_permissions.show_high_top_page_bid_data ? (b(), g("div", vz, [e.current_permissions.show_high_top_page_bid_data ? (b(), g("div", kz, [S("label", xz, v(e.trans.get("Top of Page Bid (High Range)")), 1), S("div", Cz, [F(S("input", {
                    placeholder: "min",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.high_top_page_bid_min
                    }]),
                    "onUpdate:modelValue": t[16] || (t[16] = t => e.current_filter_high_top_page_bid_min = t),
                    name: "high_top_page_bid_min"
                }, null, 2), [
                    [ae, e.high_top_page_bid_format],
                    [U, e.current_filter_high_top_page_bid_min]
                ]), S("span", Sz, v(e.trans.get("to")), 1), F(S("input", {
                    placeholder: "max",
                    type: "text",
                    class: w(["form-control", {
                        "is-invalid": e.error_fields.high_top_page_bid_max
                    }]),
                    "onUpdate:modelValue": t[17] || (t[17] = t => e.current_filter_high_top_page_bid_max = t),
                    name: "high_top_page_bid_max"
                }, null, 2), [
                    [ae, e.high_top_page_bid_format],
                    [U, e.current_filter_high_top_page_bid_max]
                ])])])) : T("", !0)])) : T("", !0)])) : T("", !0)], 64)) : T("", !0), S("div", Tz, [S("div", Fz, [E(H, {
                    onCheckFilterKeywordDuplicate: e.checkFilterKeywordDuplicate,
                    current_remain_filter_keywords: e.current_remain_filter_keywords,
                    error_fields: e.error_fields,
                    allow_partial_match: e.allow_partial_match,
                    current_filter_keywords: e.current_filter_keywords,
                    "onUpdate:current_filter_keywords": t[18] || (t[18] = t => e.current_filter_keywords = t),
                    current_filter_keywords_partial_match: e.current_filter_keywords_partial_match,
                    "onUpdate:current_filter_keywords_partial_match": t[19] || (t[19] = t => e.current_filter_keywords_partial_match = t)
                }, null, 8, ["onCheckFilterKeywordDuplicate", "current_remain_filter_keywords", "error_fields", "allow_partial_match", "current_filter_keywords", "current_filter_keywords_partial_match"])])]), S("div", qz, [S("div", Ez, [E(I, {
                    onCheckDuplicate: e.checkDuplicate,
                    current_remain_negative_keywords: e.current_remain_negative_keywords,
                    error_fields: e.error_fields,
                    current_negative_keywords: e.current_negative_keywords,
                    "onUpdate:current_negative_keywords": t[20] || (t[20] = t => e.current_negative_keywords = t)
                }, null, 8, ["onCheckDuplicate", "current_remain_negative_keywords", "error_fields", "current_negative_keywords"])])])])),
                _: 1
            }, 8, ["onResetFilter", "onApplyFilter", "filter_counter", "onClonedDataOnShownModal", "onRestoreClonedDataOnHideModal"])]), E(R, {
                suggest_page_reload: e.suggest_page_reload
            }, null, 8, ["suggest_page_reload"]), F(S("div", Uz, [S("div", Mz, [3 == a.current_sub_tab ? (b(), x(K, {
                key: 0,
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_filter_currency: e.current_filter_currency,
                current_filter_location: e.current_filter_location,
                current_filter_language: e.current_filter_language,
                show_settings_button: !0
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_filter_currency", "current_filter_location", "current_filter_language"])) : (b(), x(J, {
                key: 1,
                loading: e.loading,
                current_tab: e.current_tab,
                summaries: e.summaries,
                pie_summaries: e.pie_summaries,
                show_pie_chart: e.show_pie_chart,
                current_permissions: e.current_permissions,
                current_filter_currency: e.current_filter_currency,
                current_filter_location: e.current_filter_location,
                current_filter_language: e.current_filter_language,
                show_settings_button: !0
            }, null, 8, ["loading", "current_tab", "summaries", "pie_summaries", "show_pie_chart", "current_permissions", "current_filter_currency", "current_filter_location", "current_filter_language"]))])], 512), [
                [B, e.summaries && e.summaries.total_keywords > 0 && !e.summaries.hide]
            ]), S("div", Az, [E(Y, {
                loading: e.loading,
                has_keywords: e.has_keywords,
                has_metrics: e.has_metrics,
                current_filter_is_on: e.current_filter_is_on
            }, {
                wrapper: C((() => [3 == a.current_sub_tab ? (b(), x(W, {
                    key: 0,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_sub_tab: a.current_sub_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    delete_basket: o.delete_basket,
                    search_engine: e.search_engine,
                    keyword: r.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name
                }, null, 8, ["loading", "current_tab", "current_sub_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "delete_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name"])) : (b(), x(z, {
                    key: 1,
                    loading: e.loading,
                    current_tab: e.current_tab,
                    current_sub_tab: a.current_sub_tab,
                    current_permissions: e.current_permissions,
                    show_upsell: o.show_upsell,
                    upsell_message: e.trans.get("Keyword Tool Pro provides search volume data for :language keywords.", {
                        language: e.selected_language_name
                    }),
                    keywords: e.keywords,
                    all_keywords: e.all_keywords,
                    onSort: e.sort,
                    sort_by: e.sort_by,
                    sort_direction: e.sort_direction,
                    allow_keyword_basket: e.allow_keyword_basket,
                    add_basket: e.add_basket,
                    delete_basket: o.delete_basket,
                    search_engine: e.search_engine,
                    keyword: r.keyword,
                    has_metrics: e.has_metrics,
                    current_metrics_currency: e.current_metrics_currency,
                    onAll: e.all,
                    onSelect: e.select,
                    onDeselect: e.deselect,
                    selected_language_name: e.selected_language_name,
                    current_free_results: e.current_free_results,
                    routes: e.routes,
                    search_engine_name: e.search_engine_name,
                    has_top_page_bid: e.summaries.has_top_page_bid,
                    user_is_paid: e.user_is_paid
                }, null, 8, ["loading", "current_tab", "current_sub_tab", "current_permissions", "show_upsell", "upsell_message", "keywords", "all_keywords", "onSort", "sort_by", "sort_direction", "allow_keyword_basket", "add_basket", "delete_basket", "search_engine", "keyword", "has_metrics", "current_metrics_currency", "onAll", "onSelect", "onDeselect", "selected_language_name", "current_free_results", "routes", "search_engine_name", "has_top_page_bid", "user_is_paid"]))])),
                _: 1
            }, 8, ["loading", "has_keywords", "has_metrics", "current_filter_is_on"]), e.loading || e.has_all_error || e.has_keywords ? T("", !0) : (b(), g("div", Pz, [S("div", Lz, [S("div", Bz, [S("div", $z, [S("h2", Dz, v(e.trans.get("Your Keyword Basket is empty")), 1), o.search_url ? (b(), g("p", {
                key: 0,
                innerHTML: e.trans.get('<a href=":search_url">Start searching for keywords</a> and add them into your Keyword Basket from the search results page.', {
                    search_url: o.search_url
                })
            }, null, 8, jz)) : (b(), g("p", Oz, v(e.trans.get("Start searching for keywords and add them into your Keyword Basket from the search results page.")), 1)), S("p", null, v(e.trans.get("You can add up to :limit keywords.", {
                limit: e.basket_keywords_limit_format
            })), 1)]), S("div", Vz, [S("div", Hz, [Iz, S("div", Nz, [S("img", {
                src: "/images/svg/undraw_void_3ggu.svg",
                class: "img-warning img-fluid my-4",
                alt: "Warning image"
            }, null, 8, Rz)]), Kz])])])])])), E(G, {
                onMore: e.more,
                has_more: e.has_more,
                has_all_error: e.has_all_error,
                total: e.total,
                total_keywords: e.total_keywords,
                loading: e.loading
            }, null, 8, ["onMore", "has_more", "has_all_error", "total", "total_keywords", "loading"])]), E(se, {
                loading: e.loading,
                all_keywords: e.all_keywords,
                total_keywords: e.total_keywords,
                selected: e.selected,
                allow_keyword_basket: e.allow_keyword_basket,
                allow_delete: !0
            }, {
                "dropdown-menu-item": C((() => [E(X, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Q, {
                    onExcel: e.excel
                }, null, 8, ["onExcel"]), E(Z), E(ee, {
                    onCopy: e.copy
                }, null, 8, ["onCopy"]), E(te, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(re, {
                    onCopy: e.copy,
                    current_permissions: e.current_permissions
                }, null, 8, ["onCopy", "current_permissions"]), E(Z), S("a", {
                    class: w([{
                        disabled: e.loading || e.all_keywords.length <= 0
                    }, "dropdown-item btn-delete-basket-keywords"]),
                    onClick: t[21] || (t[21] = e => o.delete_basket()),
                    href: "javascript:"
                }, [Jz, A(" " + v(e.trans.get("Delete")), 1)], 2)])),
                _: 1
            }, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket"])])
        }]
    ]),
    zz = {
        key: 0,
        class: "app-loading modal fade show d-block mt-4",
        "data-bs-backdrop": "static",
        "data-bs-keyboard": "false",
        tabindex: "-1",
        "aria-hidden": "true"
    },
    Yz = {
        class: "modal-dialog modal-dialog-centered modal-sm"
    },
    Gz = {
        class: "modal-content shadow"
    },
    Xz = {
        class: "spinner-loading my-4"
    },
    Qz = {
        class: "d-flex justify-content-center"
    },
    Zz = {
        class: "spinner-border text-primary me-2",
        role: "status"
    },
    eY = {
        class: "visually-hidden"
    },
    tY = {
        class: "lead fw-normal"
    };
const rY = Ue({
        props: ["loading"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.loading ? (b(), g("div", zz, [S("div", Yz, [S("div", Gz, [S("div", Xz, [S("div", Qz, [S("div", Zz, [S("span", eY, v(e.trans.get("Loading...")), 1)]), S("span", tY, v(e.trans.get("Loading...")), 1)])])])])])) : T("", !0)
        }]
    ]),
    sY = {
        emits: ["show", "shown", "hide", "hidden"],
        props: {
            size: {
                type: String,
                required: !1,
                default: ""
            },
            auto_width: {
                type: Boolean,
                required: !1,
                default: !1
            },
            width: {
                type: String,
                required: !1,
                default: ""
            },
            height: {
                type: String,
                required: !1,
                default: ""
            },
            backdrop: {
                type: Boolean,
                required: !1,
                default: !0
            },
            keyboard: {
                type: Boolean,
                required: !1,
                default: !1
            },
            scrollable: {
                type: Boolean,
                required: !1,
                default: !0
            },
            allow_close: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            id: null,
            modal: null
        }),
        mounted() {
            this.id = se(), this.$nextTick((() => {
                let e = document.getElementById(this.id);
                e.addEventListener("show.bs.modal", (e => {
                    this.$emit("show", e)
                })), e.addEventListener("shown.bs.modal", (e => {
                    this.$emit("shown", e)
                })), e.addEventListener("hide.bs.modal", (e => {
                    this.$emit("hide", e)
                })), e.addEventListener("hidden.bs.modal", (e => {
                    this.$emit("hidden", e)
                })), this.modal = new bootstrap.Modal(e, this.options), this.modal.show()
            }))
        },
        beforeUnmount() {
            this.modal && (this.modal.hide(), this.modal.dispose())
        },
        computed: {
            hasHeaderSlot() {
                return !!this.$slots.header
            },
            hasFooterSlot() {
                return !!this.$slots.footer
            },
            options() {
                return {
                    backdrop: !this.backdrop || "static",
                    keyboard: !!this.keyboard,
                    focus: !0
                }
            }
        }
    },
    aY = ["id"],
    oY = {
        key: 0,
        class: "modal-header"
    },
    iY = {
        class: "modal-title text-center d-block w-100"
    },
    nY = {
        key: 0,
        type: "button",
        class: "btn-close close",
        "data-bs-dismiss": "modal",
        "aria-label": "Close"
    },
    lY = {
        class: "modal-body"
    },
    cY = {
        key: 1,
        class: "modal-footer"
    };
const _Y = Ue(sY, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", {
                id: a.id,
                class: "modal-component modal",
                tabindex: "-1",
                role: "dialog"
            }, [S("div", {
                class: w(["modal-dialog modal-dialog-centered", [r.size, r.scrollable ? "modal-dialog-scrollable" : ""]]),
                role: "document"
            }, [S("div", {
                class: "modal-content",
                style: D([!r.size && r.auto_width ? "width: auto" : "", "" != r.width ? "width: " + r.width : "", "" != r.height ? "height: " + r.height : ""])
            }, [o.hasHeaderSlot || r.allow_close ? (b(), g("div", oY, [S("div", iY, [o.hasHeaderSlot ? V(e.$slots, "header", {
                key: 0
            }) : T("", !0)]), r.allow_close ? (b(), g("button", nY)) : T("", !0)])) : T("", !0), S("div", lY, [V(e.$slots, "body")]), o.hasFooterSlot ? (b(), g("div", cY, [V(e.$slots, "footer")])) : T("", !0)], 4)], 2)], 8, aY)
        }]
    ]),
    uY = {
        props: ["suggest_page_reload"],
        data: () => ({})
    },
    dY = {
        class: "alert-taking-too-long-error alert alert-warning my-3",
        role: "alert"
    },
    mY = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-exclamation-circle-fill me-2"
    })], -1),
    hY = ["innerHTML"];
const pY = Ue(uY, [
        ["render", function(e, t, r, s, a, o) {
            return F((b(), g("div", dY, [S("table", null, [S("tbody", null, [mY, S("td", null, [S("span", {
                innerHTML: e.trans.get("It seems like it is taking too long to load. Please refresh the page to retry.")
            }, null, 8, hY)])])])], 512)), [
                [B, r.suggest_page_reload]
            ])
        }]
    ]),
    gY = {
        props: {
            selected_language_name: {
                type: String,
                required: !0,
                default: ""
            },
            routes: {
                type: Object,
                required: !1,
                default: function() {
                    return {}
                }
            },
            search_engine: {
                type: [String, Number],
                required: !1,
                default: ""
            }
        },
        data: () => ({})
    },
    yY = {
        class: "row"
    },
    fY = S("div", {
        class: "col-lg-2 d-none d-lg-block"
    }, null, -1),
    wY = {
        class: "col-sm-12 col-md-12 col-lg-8"
    },
    bY = {
        class: "alert-pro-upsell alert-pro-upsell-above-summary my-2",
        role: "alert"
    },
    vY = {
        class: "card text-center shadow"
    },
    kY = {
        class: "card-body"
    },
    xY = S("h4", {
        class: "card-title"
    }, " 🚀 Keyword Tool Pro ", -1),
    CY = {
        class: "card-text lead fw-normal"
    },
    SY = ["innerHTML"],
    TY = ["href"],
    FY = S("i", {
        class: "bi bi-box-arrow-in-right me-1"
    }, null, -1),
    qY = ["innerHTML"],
    EY = ["href"],
    UY = S("i", {
        class: "bi bi-box-arrow-in-right me-1"
    }, null, -1),
    MY = ["innerHTML"],
    AY = S("div", {
        class: "col-lg-2 d-none d-lg-block"
    }, null, -1);
const PY = Ue(gY, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", yY, [fY, S("div", wY, [S("div", bY, [S("div", vY, [S("div", kY, [xY, S("div", CY, [V(e.$slots, "lead fw-normal", {}, (() => [S("p", {
                innerHTML: e.trans.get("Subscribe To Keyword Tool Pro right now to instantly get ALL the data!")
            }, null, 8, SY)]))]), S("a", {
                href: r.routes.page_pro_index,
                target: "_blank",
                rel: "noopener",
                class: "d-none d-sm-inline-block btn btn-warning btn-lg"
            }, [FY, V(e.$slots, "noopener", {}, (() => [S("span", {
                innerHTML: e.trans.get("Subscribe to Keyword Tool Pro Now!")
            }, null, 8, qY)]))], 8, TY), S("a", {
                href: r.routes.page_pro_index,
                target: "_blank",
                rel: "noopener",
                class: "d-block d-sm-none btn btn-warning btn-lg"
            }, [UY, V(e.$slots, "noopener", {}, (() => [S("span", {
                innerHTML: e.trans.get("Subscribe to Keyword Tool Pro Now!")
            }, null, 8, MY)]))], 8, EY)])])])]), AY])
        }]
    ]),
    LY = {
        props: ["current_permissions", "routes"],
        data: () => ({})
    },
    BY = {
        key: 0,
        class: "alert-pro-upsell alert-pro-upsell-above-summary mb-4 mt-2",
        role: "alert"
    },
    $Y = {
        class: "row"
    },
    DY = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1),
    jY = {
        class: "col-sm-12 col-md-12 col-lg-10"
    },
    OY = {
        class: "card text-center shadow"
    },
    VY = {
        class: "card-body"
    },
    HY = S("h5", {
        class: "card-title"
    }, " 🚀 Keyword Tool Pro ", -1),
    IY = {
        class: "card-text"
    },
    NY = ["innerHTML"],
    RY = ["href"],
    KY = S("i", {
        class: "bi bi-box-arrow-in-right me-1"
    }, null, -1),
    JY = ["innerHTML"],
    WY = S("div", {
        class: "col-lg-1 d-none d-lg-block"
    }, null, -1);
const zY = Ue(LY, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.pro_is_paused || r.current_permissions.show_search_volume_data ? T("", !0) : (b(), g("div", BY, [S("div", $Y, [DY, S("div", jY, [S("div", OY, [S("div", VY, [HY, S("div", IY, [V(e.$slots, "message", {}, (() => [S("p", {
                innerHTML: e.trans.get("Need to add more than :count_free negative keywords?", {
                    count_free: 5
                })
            }, null, 8, NY)]))]), S("a", {
                href: r.routes.page_pro_index,
                target: "_blank",
                rel: "noopener",
                class: "btn btn-warning"
            }, [KY, V(e.$slots, "linktext", {}, (() => [S("span", {
                innerHTML: e.trans.get("Try Keyword Tool Pro to use up to :count_pro negative keywords for every search!", {
                    count_pro: "2,000"
                })
            }, null, 8, JY)]))], 8, RY)])])]), WY])]))
        }]
    ]),
    YY = {
        props: ["user_is_paid", "has_metrics", "current_tab"],
        data() {
            return {
                errorMessage: this.trans.get("Unfortunately, there was an error when pulling keywords.")
            }
        },
        created() {
            10 == this.current_tab || 11 == this.current_tab || 12 == this.current_tab ? this.errorMessage = this.trans.get("Sorry, there was an error when pulling data.") : this.user_is_paid && this.has_metrics && (this.errorMessage = this.trans.get("Unfortunately, there was an error when pulling search volume data for some keywords."))
        },
        methods: {
            reload: () => location.reload()
        }
    },
    GY = {
        class: "alert-unfortunate-error my-4",
        role: "alert"
    },
    XY = {
        class: "container-fluid container-640 my-4"
    },
    QY = {
        class: "row my-3 alert alert-danger"
    },
    ZY = {
        class: "col"
    },
    eG = {
        class: "my-3"
    },
    tG = {
        class: "col-sm-12 col-lg-4 d-none d-lg-block"
    },
    rG = {
        class: "row"
    },
    sG = S("div", {
        class: "col-3 d-lg-none d-xl-none"
    }, null, -1),
    aG = {
        class: "col"
    },
    oG = ["src"],
    iG = S("div", {
        class: "col-3 d-lg-none d-xl-none"
    }, null, -1);
const nG = Ue(YY, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", GY, [S("div", XY, [S("div", QY, [S("div", ZY, [S("h2", eG, v(a.errorMessage), 1), S("p", null, v(e.trans.get("Search results may be incomplete or unavailable.")), 1), S("p", null, [S("a", {
                href: "#",
                class: "btn btn-danger text-white cursor-pointer text-decoration-none",
                onClick: t[0] || (t[0] = (...e) => o.reload && o.reload(...e))
            }, v(e.trans.get("Please repeat your search")), 1)])]), S("div", tG, [S("div", rG, [sG, S("div", aG, [S("img", {
                src: "/images/svg/undraw_warning_cyit.svg",
                class: "img-warning img-fluid my-4",
                alt: "Warning image"
            }, null, 8, oG)]), iG])])])])])
        }]
    ]),
    lG = {
        props: ["has_more", "has_all_error", "total", "total_keywords", "loading"],
        data: () => ({})
    },
    cG = {
        key: 0,
        class: "search-results-load-more my-3"
    },
    _G = S("span", null, [S("i", {
        class: "bi bi-arrow-repeat"
    })], -1),
    uG = {
        class: "float-end ms-1"
    };
const dG = Ue(lG, [
        ["render", function(e, t, r, s, a, o) {
            return r.has_more && !r.has_all_error ? (b(), g("div", cG, [r.loading ? T("", !0) : (b(), g("a", {
                key: 0,
                onClick: t[0] || (t[0] = t => e.$emit("more")),
                class: "btn-search-results-load-more btn btn-link btn-block bg-light text-decoration-none",
                href: "javascript:"
            }, [_G, A(" " + v(e.trans.get("Load More")) + " ", 1), S("span", uG, v(e.$filters.digit(r.total)) + "/" + v(e.$filters.digit(r.total_keywords)), 1)]))])) : T("", !0)
        }]
    ]),
    mG = {
        key: 0,
        class: "search-results-tabs nav nav-tabs my-2"
    },
    hG = ["data-search-type", "onClick"],
    pG = ["innerHTML"];
const gG = Ue({
        props: ["tabs", "current_tab", "loading"]
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.tabs ? (b(), g("ul", mG, [(b(!0), g(y, null, f(r.tabs, ((t, s) => (b(), g("li", {
                class: "nav-item",
                key: s
            }, [S("a", {
                class: w([{
                    active: t.value == r.current_tab,
                    disabled: t.value == r.current_tab || r.loading
                }, "nav-link cursor-pointer"]),
                "data-search-type": t.value,
                onClick: r => e.$emit("applyTab", t.value)
            }, [S("span", {
                innerHTML: t.icon
            }, null, 8, pG), A(" " + v(t.title), 1)], 10, hG)])))), 128))])) : T("", !0)
        }]
    ]),
    yG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-network btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    fG = {
        class: "search-results-settings-display-network-label me-1"
    },
    wG = {
        class: "search-results-settings-display-network-value"
    };
const bG = Ue({
        props: ["current_permissions", "show_current_metrics_network", "show_metrics_is_estimated"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_search_volume_data && !r.show_metrics_is_estimated && r.show_current_metrics_network ? (b(), g("button", yG, [S("strong", fG, v(e.trans.get("Search Network")) + ":", 1), S("span", wG, v(r.show_current_metrics_network), 1)])) : T("", !0)
        }]
    ]),
    vG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-location btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    kG = {
        class: "search-results-settings-display-location-label me-1"
    },
    xG = {
        class: "search-results-settings-display-location-value"
    };
const CG = Ue({
        props: ["current_permissions", "show_current_metrics_location_name", "show_metrics_is_estimated"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_search_volume_data && !r.show_metrics_is_estimated && r.show_current_metrics_location_name ? (b(), g("button", vG, [S("strong", kG, v(e.trans.get("Locations")) + ":", 1), S("span", xG, v(r.show_current_metrics_location_name), 1)])) : T("", !0)
        }]
    ]),
    SG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-language btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    TG = {
        class: "search-results-settings-display-language-label me-1"
    },
    FG = {
        class: "search-results-settings-display-language-value"
    };
const qG = Ue({
        props: ["current_permissions", "show_current_metrics_language_name", "show_metrics_is_estimated"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_search_volume_data && !r.show_metrics_is_estimated && r.show_current_metrics_language_name ? (b(), g("button", SG, [S("strong", TG, v(e.trans.get("Language")) + ":", 1), S("span", FG, v(r.show_current_metrics_language_name), 1)])) : T("", !0)
        }]
    ]),
    EG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-search-volume btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    UG = {
        class: "search-results-settings-display-search-volume-label me-1"
    },
    MG = {
        key: 0,
        class: "search-results-settings-display-search-volume-value"
    },
    AG = {
        key: 1,
        class: "search-results-settings-display-search-volume-value"
    },
    PG = {
        key: 2,
        class: "search-results-settings-display-search-volume-value"
    };
const LG = Ue({
        props: ["current_permissions", "show_current_filter_search_volume_min", "show_current_filter_search_volume_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_search_volume_data && (r.show_current_filter_search_volume_min > 0 || r.show_current_filter_search_volume_max > 0) ? (b(), g("button", EG, [S("strong", UG, v(e.trans.get("Search Volume")) + ":", 1), r.show_current_filter_search_volume_min > 0 && r.show_current_filter_search_volume_max > 0 ? (b(), g("span", MG, v(e.$filters.digit(r.show_current_filter_search_volume_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(r.show_current_filter_search_volume_max)), 1)) : r.show_current_filter_search_volume_min > 0 && !r.show_current_filter_search_volume_max ? (b(), g("span", AG, v(e.trans.get("more than")) + " " + v(e.$filters.digit(r.show_current_filter_search_volume_min)), 1)) : !r.show_current_filter_search_volume_min && r.show_current_filter_search_volume_max > 0 ? (b(), g("span", PG, v(e.trans.get("less than")) + " " + v(e.$filters.digit(r.show_current_filter_search_volume_max)), 1)) : T("", !0), S("a", {
                class: "search-results-settings-display-search-volume-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "search_volume"))
            }, "×")])) : T("", !0)
        }]
    ]),
    BG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-trend btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    $G = {
        class: "search-results-settings-display-trend-label me-1"
    },
    DG = {
        key: 0,
        class: "search-results-settings-display-trend-value"
    },
    jG = {
        key: 1,
        class: "search-results-settings-display-trend-value"
    },
    OG = {
        key: 2,
        class: "search-results-settings-display-trend-value"
    };
const VG = Ue({
        props: ["current_permissions", "show_current_filter_search_volume_trend_min", "show_current_filter_search_volume_trend_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return !r.current_permissions.show_search_volume_data || null == r.show_current_filter_search_volume_trend_min && null == r.show_current_filter_search_volume_trend_max ? T("", !0) : (b(), g("button", BG, [S("strong", $G, v(e.trans.get("Trend")) + ":", 1), null != r.show_current_filter_search_volume_trend_min && null != r.show_current_filter_search_volume_trend_max ? (b(), g("span", DG, v(e.$filters.digit(r.show_current_filter_search_volume_trend_min)) + "% " + v(e.trans.get("to")) + " " + v(e.$filters.digit(r.show_current_filter_search_volume_trend_max)) + "% ", 1)) : null == r.show_current_filter_search_volume_trend_max && null != r.show_current_filter_search_volume_trend_min ? (b(), g("span", jG, v(e.trans.get("more than")) + " " + v(e.$filters.digit(r.show_current_filter_search_volume_trend_min)) + "% ", 1)) : null == r.show_current_filter_search_volume_trend_min && null != r.show_current_filter_search_volume_trend_max ? (b(), g("span", OG, v(e.trans.get("less than")) + " " + v(e.$filters.digit(r.show_current_filter_search_volume_trend_max)) + "% ", 1)) : T("", !0), S("a", {
                class: "search-results-settings-display-trend-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "search_volume_trend"))
            }, "×")]))
        }]
    ]),
    HG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-keyword-result-period btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    IG = {
        class: "search-results-settings-display-keyword-result-period-label me-1"
    },
    NG = {
        class: "search-results-settings-display-keyword-result-period-value"
    };
const RG = Ue({
        props: ["current_permissions", "show_current_filter_keyword_result_period", "default_keyword_result_period"],
        mounted() {},
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_custom_time && r.show_current_filter_keyword_result_period && r.show_current_filter_keyword_result_period != r.default_keyword_result_period ? (b(), g("button", HG, [S("strong", IG, v(e.trans.get("Result Period")) + ":", 1), S("span", NG, v(r.show_current_filter_keyword_result_period), 1), S("a", {
                class: "search-results-settings-display-keyword-result-period-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "keyword_result_period"))
            }, "×")])) : T("", !0)
        }]
    ]),
    KG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-average-cpc btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    JG = {
        class: "search-results-settings-display-average-cpc-label me-1"
    },
    WG = {
        key: 0,
        class: "search-results-settings-display-average-cpc-value"
    },
    zG = {
        key: 1,
        class: "search-results-settings-display-average-cpc-value"
    },
    YG = {
        key: 2,
        class: "search-results-settings-display-average-cpc-value"
    };
const GG = Ue({
        props: ["current_permissions", "show_current_filter_average_cpc_min", "show_current_filter_average_cpc_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_cpc_data && (r.show_current_filter_average_cpc_min > 0 || r.show_current_filter_average_cpc_max > 0) ? (b(), g("button", KG, [S("strong", JG, v(e.trans.get("Average CPC")) + ":", 1), r.show_current_filter_average_cpc_min > 0 && r.show_current_filter_average_cpc_max > 0 ? (b(), g("span", WG, v(e.$filters.decimal(r.show_current_filter_average_cpc_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.decimal(r.show_current_filter_average_cpc_max)), 1)) : r.show_current_filter_average_cpc_min > 0 && !r.show_current_filter_average_cpc_max ? (b(), g("span", zG, v(e.trans.get("more than")) + " " + v(e.$filters.decimal(r.show_current_filter_average_cpc_min)), 1)) : !r.show_current_filter_average_cpc_min && r.show_current_filter_average_cpc_max > 0 ? (b(), g("span", YG, v(e.trans.get("less than")) + " " + v(e.$filters.decimal(r.show_current_filter_average_cpc_max)), 1)) : T("", !0), S("a", {
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "average_cpc")),
                class: "search-results-settings-display-average-cpc-remove ms-1 text-decoration-none",
                href: "javascript:"
            }, "×")])) : T("", !0)
        }]
    ]),
    XG = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-competition btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    QG = {
        class: "search-results-settings-display-competition-label me-1"
    },
    ZG = {
        key: 0,
        class: "search-results-settings-display-competition-value"
    },
    eX = {
        key: 1,
        class: "search-results-settings-display-competition-value"
    },
    tX = {
        key: 2,
        class: "search-results-settings-display-competition-value"
    };
const rX = Ue({
        props: ["current_permissions", "show_current_filter_competition_min", "show_current_filter_competition_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_competition_data && (r.show_current_filter_competition_min > 0 || r.show_current_filter_competition_max > 0) ? (b(), g("button", XG, [S("strong", QG, v(e.trans.get("Competition")) + ":", 1), r.show_current_filter_competition_min > 0 && r.show_current_filter_competition_max > 0 ? (b(), g("span", ZG, v(e.$filters.digit(r.show_current_filter_competition_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.digit(r.show_current_filter_competition_max)), 1)) : r.show_current_filter_competition_min > 0 && !r.show_current_filter_competition_max ? (b(), g("span", eX, v(e.trans.get("more than")) + " " + v(e.$filters.digit(r.show_current_filter_competition_min)), 1)) : !r.show_current_filter_competition_min && r.show_current_filter_competition_max > 0 ? (b(), g("span", tX, v(e.trans.get("less than")) + " " + v(e.$filters.digit(r.show_current_filter_competition_max)), 1)) : T("", !0), S("a", {
                class: "search-results-settings-display-competition-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "competition"))
            }, "×")])) : T("", !0)
        }]
    ]),
    sX = {
        type: "button",
        class: "btn-search-results-settings-display-competition btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    aX = {
        class: "search-results-settings-display-competition-label me-1"
    },
    oX = {
        class: "search-results-settings-display-competition-value"
    },
    iX = ["onClick"];
const nX = Ue({
        emits: ["clearFilter"],
        props: ["current_permissions", "show_current_filter_competition"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_competition_data && r.show_current_filter_competition && r.show_current_filter_competition.length > 0 ? (b(!0), g(y, {
                key: 0
            }, f(r.show_current_filter_competition, ((t, r) => (b(), g("button", sX, [S("strong", aX, v(e.trans.get("Competition")) + ":", 1), S("span", oX, v(t), 1), S("a", {
                class: "search-results-settings-display-competition-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t => e.$emit("clearFilter", "competition_bing", r)
            }, "×", 8, iX)])))), 256)) : T("", !0)
        }]
    ]),
    lX = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-keywords btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    cX = {
        class: "search-results-settings-display-keywords-label me-1"
    },
    _X = {
        "data-bs-toggle": "modal",
        "data-bs-target": "#search-results-setting-modal",
        class: "search-results-settings-display-keywords-value cursor-pointer"
    };
const uX = Ue({
        props: ["show_current_split_filter_keywords", "show_display_filter_keywords"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.show_current_split_filter_keywords ? (b(), g("button", lX, [S("strong", cX, v(r.show_display_filter_keywords) + ":", 1), S("span", _X, v(r.show_current_split_filter_keywords), 1), S("a", {
                class: "search-results-settings-display-keywords-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "keywords", "all"))
            }, "×")])) : T("", !0)
        }]
    ]),
    dX = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-negative-keywords btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    mX = {
        class: "search-results-settings-display-negative-keywords-label me-1"
    },
    hX = {
        class: "search-results-settings-display-negative-keywords-value"
    };
const pX = Ue({
        props: ["show_current_split_negative_keywords", "show_display_filter_negative_keywords"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.show_current_split_negative_keywords ? (b(), g("button", dX, [S("strong", mX, v(r.show_display_filter_negative_keywords) + ":", 1), S("span", hX, v(r.show_current_split_negative_keywords), 1), S("a", {
                class: "search-results-settings-display-negative-keywords-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "negative_keywords", "all"))
            }, "×")])) : T("", !0)
        }]
    ]),
    gX = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-high-top-page-bid btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    yX = {
        class: "search-results-settings-display-high-top-page-bid-label me-1"
    },
    fX = {
        key: 0,
        class: "search-results-settings-display-high-top-page-bid-value"
    },
    wX = {
        key: 1,
        class: "search-results-settings-display-high-top-page-bid-value"
    },
    bX = {
        key: 2,
        class: "search-results-settings-display-high-top-page-bid-value"
    };
const vX = Ue({
        props: ["current_permissions", "show_current_filter_high_top_page_bid_min", "show_current_filter_high_top_page_bid_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_high_top_page_bid_data && (r.show_current_filter_high_top_page_bid_min > 0 || r.show_current_filter_high_top_page_bid_max > 0) ? (b(), g("button", gX, [S("strong", yX, v(e.trans.get("Top of Page Bid (High Range)")) + ":", 1), r.show_current_filter_high_top_page_bid_min > 0 && r.show_current_filter_high_top_page_bid_max > 0 ? (b(), g("span", fX, v(e.$filters.decimal(r.show_current_filter_high_top_page_bid_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.decimal(r.show_current_filter_high_top_page_bid_max)), 1)) : r.show_current_filter_high_top_page_bid_min > 0 && !r.show_current_filter_high_top_page_bid_max ? (b(), g("span", wX, v(e.trans.get("more than")) + " " + v(e.$filters.decimal(r.show_current_filter_high_top_page_bid_min)), 1)) : !r.show_current_filter_high_top_page_bid_min && r.show_current_filter_high_top_page_bid_max > 0 ? (b(), g("span", bX, v(e.trans.get("less than")) + " " + v(e.$filters.decimal(r.show_current_filter_high_top_page_bid_max)), 1)) : T("", !0), S("a", {
                class: "search-results-settings-display-high-top-page-bid-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "high_top_page_bid"))
            }, "×")])) : T("", !0)
        }]
    ]),
    kX = {
        key: 0,
        type: "button",
        class: "btn-search-results-settings-display-low-top-page-bid btn btn-sm btn-outline-primary disabled cursor-default my-1 mx-1"
    },
    xX = {
        class: "search-results-settings-display-low-top-page-bid-label me-1"
    },
    CX = {
        key: 0,
        class: "search-results-settings-display-low-top-page-bid-value"
    },
    SX = {
        key: 1,
        class: "search-results-settings-display-low-top-page-bid-value"
    },
    TX = {
        key: 2,
        class: "search-results-settings-display-low-top-page-bid-value"
    };
const FX = Ue({
        props: ["current_permissions", "show_current_filter_low_top_page_bid_min", "show_current_filter_low_top_page_bid_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_low_top_page_bid_data && (r.show_current_filter_low_top_page_bid_min > 0 || r.show_current_filter_low_top_page_bid_max > 0) ? (b(), g("button", kX, [S("strong", xX, v(e.trans.get("Top of Page Bid (Low Range)")) + ":", 1), r.show_current_filter_low_top_page_bid_min > 0 && r.show_current_filter_low_top_page_bid_max > 0 ? (b(), g("span", CX, v(e.$filters.decimal(r.show_current_filter_low_top_page_bid_min)) + " " + v(e.trans.get("to")) + " " + v(e.$filters.decimal(r.show_current_filter_low_top_page_bid_max)), 1)) : r.show_current_filter_low_top_page_bid_min > 0 && !r.show_current_filter_low_top_page_bid_max ? (b(), g("span", SX, v(e.trans.get("more than")) + " " + v(e.$filters.decimal(r.show_current_filter_low_top_page_bid_min)), 1)) : !r.show_current_filter_low_top_page_bid_min && r.show_current_filter_low_top_page_bid_max > 0 ? (b(), g("span", TX, v(e.trans.get("less than")) + " " + v(e.$filters.decimal(r.show_current_filter_low_top_page_bid_max)), 1)) : T("", !0), S("a", {
                class: "search-results-settings-display-low-top-page-bid-remove ms-1 text-decoration-none",
                href: "javascript:",
                onClick: t[0] || (t[0] = t => e.$emit("clearFilter", "low_top_page_bid"))
            }, "×")])) : T("", !0)
        }]
    ]),
    qX = {
        props: ["filter_counter"],
        data: () => ({
            modal: null
        }),
        mounted() {
            this.$nextTick((() => {
                let e = document.getElementById("search-results-setting-modal");
                e.addEventListener("shown.bs.modal", (e => {
                    this.$emit("clonedDataOnShownModal")
                })), e.addEventListener("hidden.bs.modal", (e => {
                    this.$emit("restoreClonedDataOnHideModal")
                })), this.modal = new bootstrap.Modal(e)
            }))
        },
        beforeUnmount() {
            this.modal && this.modal.dispose()
        }
    },
    EX = {
        id: "search-results-setting-modal",
        class: "search-results-settings-modal modal fade",
        tabindex: "-1",
        role: "dialog",
        "aria-labelledby": "search-results-setting-modal-title",
        "aria-hidden": "true"
    },
    UX = {
        class: "modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg",
        role: "document"
    },
    MX = {
        class: "modal-content"
    },
    AX = {
        class: "modal-header bg-light"
    },
    PX = {
        id: "search-results-setting-modal-title",
        class: "modal-title"
    },
    LX = ["aria-label"],
    BX = {
        class: "modal-body"
    },
    $X = {
        class: "modal-footer"
    },
    DX = {
        type: "button",
        class: "btn-search-results-settings-modal-close btn btn-link text-decoration-none",
        "data-bs-dismiss": "modal"
    },
    jX = ["disabled"],
    OX = S("i", {
        class: "bi bi-repeat me-1"
    }, null, -1),
    VX = S("i", {
        class: "bi bi-save me-1"
    }, null, -1);
const HX = Ue(qX, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", EX, [S("div", UX, [S("div", MX, [S("div", AX, [S("h4", PX, v(e.trans.get("Settings")), 1), S("button", {
                type: "button",
                class: "btn-close",
                "data-bs-dismiss": "modal",
                "aria-label": e.trans.get("Close")
            }, null, 8, LX)]), S("div", BX, [V(e.$slots, "content")]), S("div", $X, [S("button", DX, v(e.trans.get("Close")), 1), S("button", {
                disabled: r.filter_counter <= 0,
                onClick: t[0] || (t[0] = t => e.$emit("resetFilter")),
                type: "button",
                class: "btn-search-results-settings-modal-reset btn btn-outline-primary"
            }, [OX, A(" " + v(e.trans.get("Reset")), 1)], 8, jX), S("button", {
                onClick: t[1] || (t[1] = t => e.$emit("applyFilter")),
                type: "button",
                class: "btn-search-results-settings-modal-save btn btn-primary"
            }, [VX, A(" " + v(e.trans.get("Save changes")), 1)])])])])])
        }]
    ]),
    IX = {
        props: ["loading", "has_all_error", "has_error", "has_keywords", "has_metrics"],
        data: () => ({})
    },
    NX = {
        key: 0,
        class: "search-results-empty"
    },
    RX = {
        key: 0,
        class: "search-results-empty-no-keywords-found my-4"
    },
    KX = {
        class: "row"
    },
    JX = {
        class: "col"
    },
    WX = {
        class: "my-2"
    },
    zX = {
        class: "my-2"
    },
    YX = {
        class: "my-2"
    },
    GX = {
        class: "my-2"
    },
    XX = {
        class: "col-sm-12 col-lg-2"
    },
    QX = {
        class: "row"
    },
    ZX = S("div", {
        class: "col-1 d-lg-none d-xl-none"
    }, null, -1),
    eQ = {
        class: "col"
    },
    tQ = ["src"],
    rQ = S("div", {
        class: "col-1 d-lg-none d-xl-none"
    }, null, -1),
    sQ = {
        key: 1,
        class: "search-results-empty-no-keywords-matched-filters my-4"
    },
    aQ = {
        class: "mb-4"
    },
    oQ = ["innerHTML"];
const iQ = Ue(IX, [
        ["render", function(e, t, r, s, a, o) {
            return r.loading || r.has_all_error || r.has_error ? T("", !0) : (b(), g("div", NX, [r.has_keywords ? r.has_keywords && !r.has_metrics ? (b(), g("div", sQ, [S("h4", aQ, v(e.trans.get("Sorry, no keywords match your filters")), 1), S("p", {
                innerHTML: e.trans.get('Please, <a href="#" data-bs-toggle="modal" data-bs-target="#search-results-setting-modal">modify filters</a> to find more keywords.')
            }, null, 8, oQ)])) : T("", !0) : (b(), g("div", RX, [S("div", KX, [S("div", JX, [V(e.$slots, "message"), S("p", null, v(e.trans.get("Below are some tips that might help you find more keywords:")), 1), S("ul", null, [S("li", WX, v(e.trans.get('Use fewer words in your search query. For example, "popular shoes" instead of "most popular shoes for men in my hometown";')), 1), S("li", zX, v(e.trans.get("Check for spelling mistakes;")), 1), S("li", YX, v(e.trans.get('Try searching for a similar term or synonym. For example, "pants" instead of "trousers";')), 1), S("li", GX, v(e.trans.get("Please note that search engines restrict some topics.If the search term falls under a restricted topic, you might not see any keyword suggestions and/or search volume data.")), 1)]), S("p", null, v(e.trans.get("Please try again!")), 1)]), S("div", XX, [S("div", QX, [ZX, S("div", eQ, [S("img", {
                src: "/images/svg/undraw_void_3ggu.svg",
                class: "img-void img-fluid my-3",
                alt: "Void image"
            }, null, 8, tQ)]), rQ])])])]))]))
        }]
    ]),
    nQ = {
        key: 0
    },
    lQ = {
        class: "row"
    },
    cQ = {
        class: "col"
    },
    _Q = {
        class: "search-results-settings-modal-header my-3 pb-1 border-bottom"
    },
    uQ = {
        key: 0,
        class: "row"
    },
    dQ = {
        class: "col-12 col-md-6"
    },
    mQ = {
        class: "search-results-settings-modal-keyword-result-period mb-3"
    },
    hQ = {
        class: "form-label search-results-settings-modal-keyword-result-period-label"
    };
const pQ = Ue({
        props: ["current_permissions", "current_filter_keyword_result_period", "current_keyword_result_periods", "search_engine"],
        data: () => ({
            select_settings: {},
            current_keyword_result_periods_options: []
        }),
        mounted() {
            this.$nextTick((() => {}))
        },
        methods: {
            getLabel() {
                return 3 == this.search_engine ? this.trans.get("Search Volume Period") : this.trans.get("Result Period")
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return r.current_permissions.show_custom_time ? (b(), g("div", nQ, [S("div", lQ, [S("div", cQ, [S("h5", _Q, v(e.trans.get("Admin Settings")), 1)])]), r.current_permissions.show_custom_time ? (b(), g("div", uQ, [S("div", dQ, [S("div", mQ, [S("label", hQ, v(o.getLabel()), 1), E(i, {
                id: "keyword_result_period_selection",
                class: "search-results-settings-modal-keyword-result-period-value",
                options: r.current_keyword_result_periods,
                settings: a.select_settings,
                "onUpdate:modelValue": t[0] || (t[0] = t => e.$emit("update:current_filter_keyword_result_period", t)),
                "model-value": r.current_filter_keyword_result_period
            }, null, 8, ["options", "settings", "model-value"])])])])) : T("", !0)])) : T("", !0)
        }]
    ]),
    gQ = {
        class: "search-results-settings-modal-filter-keywords mb-3"
    },
    yQ = {
        class: "form-label search-results-settings-modal-filter-keywords-label mb-0"
    },
    fQ = {
        class: "search-results-settings-modal-filter-keywords-help form-text text-muted mb-2"
    },
    wQ = ["placeholder", "value"],
    bQ = {
        key: 0,
        class: "form-check"
    },
    vQ = ["checked"],
    kQ = {
        class: "form-check-label",
        for: "search-results-settings-modal-filter-keywords-partial-match-label"
    },
    xQ = {
        class: "search-results-settings-modal-filter-keywords-remaining form-text text-muted"
    },
    CQ = {
        class: "search-results-settings-modal-filter-keywords-help form-text text-muted"
    };
const SQ = Ue({
        props: ["current_filter_keywords", "current_filter_keywords_partial_match", "allow_partial_match", "error_fields", "current_remain_filter_keywords"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", gQ, [S("label", yQ, v(e.trans.get("Filter Keywords")), 1), S("small", fQ, v(e.trans.get("Use it to find specific keywords within search results.")), 1), S("textarea", {
                onBlur: t[0] || (t[0] = t => e.$emit("checkFilterKeywordDuplicate")),
                placeholder: e.trans.get("eg: best"),
                rows: "5",
                class: w(["search-results-settings-display-keywords-items form-textarea form-control", {
                    "is-invalid": r.error_fields.filter_keywords
                }]),
                value: r.current_filter_keywords,
                name: "filter_keywords",
                onInput: t[1] || (t[1] = t => e.$emit("update:current_filter_keywords", t.target.value))
            }, null, 42, wQ), r.allow_partial_match ? (b(), g("div", bQ, [S("input", {
                class: "form-check-input",
                type: "checkbox",
                checked: 1 == r.current_filter_keywords_partial_match,
                value: "1",
                id: "search-results-settings-modal-filter-keywords-partial-match",
                onChange: t[2] || (t[2] = t => e.$emit("update:current_filter_keywords_partial_match", t.target.value))
            }, null, 40, vQ), S("label", kQ, v(e.trans.get("Partial Match")), 1)])) : T("", !0), S("small", xQ, [S("strong", null, v(e.$filters.digit(r.current_remain_filter_keywords)), 1), A(" " + v(e.trans.get("filter keywords remaining.")), 1)]), S("small", CQ, v(e.trans.get("Put your filter keywords in this box, one keyword per line.")), 1)])
        }]
    ]),
    TQ = {
        class: "search-results-settings-modal-negative-keywords mb-3"
    },
    FQ = {
        class: "form-label search-results-settings-modal-negative-keywords-label mb-0"
    },
    qQ = {
        class: "search-results-settings-modal-filter-keywords-help form-text text-muted mb-2"
    },
    EQ = ["placeholder", "value"],
    UQ = {
        class: "search-results-settings-modal-negative-keywords-remaining form-text text-muted"
    },
    MQ = {
        class: "search-results-settings-modal-negative-keywords-help form-text text-muted"
    };
const AQ = Ue({
        props: ["current_negative_keywords", "error_fields", "current_remain_negative_keywords"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", TQ, [S("label", FQ, v(e.trans.get("Negative Keywords")), 1), S("small", qQ, v(e.trans.get("Use it to exclude specific keywords from the search results.")), 1), S("textarea", {
                onBlur: t[0] || (t[0] = t => e.$emit("checkDuplicate")),
                placeholder: e.trans.get("eg: used"),
                rows: "5",
                class: w(["search-results-settings-modal-negative-keywords-value form-textarea form-control", {
                    "is-invalid": r.error_fields.negative_keywords
                }]),
                value: r.current_negative_keywords,
                name: "negative_keywords",
                onInput: t[1] || (t[1] = t => e.$emit("update:current_negative_keywords", t.target.value))
            }, null, 42, EQ), S("small", UQ, [S("strong", null, v(e.$filters.digit(r.current_remain_negative_keywords)), 1), A(" " + v(e.trans.get("negative keywords remaining.")), 1)]), S("small", MQ, v(e.trans.get("Put your negative keywords in this box, one keyword per line.")), 1)])
        }]
    ]),
    PQ = {
        class: "search-results-settings-modal-search-network mb-3"
    },
    LQ = {
        class: "form-label search-results-settings-modal-search-network-label"
    },
    BQ = {
        class: "form-check"
    },
    $Q = ["id", "disabled", "value", "checked"],
    DQ = ["for"];
const jQ = Ue({
        props: ["current_network_list", "current_metrics_network", "disabled"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", PQ, [S("label", LQ, v(e.trans.get("Search Network")), 1), (b(!0), g(y, null, f(r.current_network_list, (s => (b(), g("div", BQ, [S("input", {
                id: "google_network_" + s.id,
                class: "search-results-settings-modal-search-network-value form-check-input",
                disabled: r.disabled,
                type: "radio",
                onChange: t[0] || (t[0] = t => e.$emit("update:current_metrics_network", t.target.value)),
                value: s.id,
                checked: s.id == r.current_metrics_network
            }, null, 40, $Q), S("label", {
                for: "google_network_" + s.id,
                class: "search-results-settings-modal-search-network-value-label form-check-label"
            }, v(s.text), 9, DQ)])))), 256))])
        }]
    ]),
    OQ = {
        class: "search-results-settings-modal-currency mb-3"
    },
    VQ = {
        class: "form-label search-results-settings-modal-currency-label"
    };
const HQ = Ue({
        props: ["current_currency_list", "current_metrics_currency", "disabled"],
        data: () => ({
            select2_settings: {}
        }),
        emits: ["update:current_metrics_currency"]
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select");
            return b(), g("div", OQ, [S("label", VQ, v(e.trans.get("Currency")), 1), E(i, {
                id: "metrics_currency_selection",
                class: "search-results-settings-modal-currency-value",
                options: r.current_currency_list,
                settings: a.select2_settings,
                disabled: r.disabled,
                "onUpdate:modelValue": t[0] || (t[0] = t => e.$emit("update:current_metrics_currency", t)),
                "model-value": r.current_metrics_currency,
                placeholder: e.trans.get("Type a currency")
            }, null, 8, ["options", "settings", "disabled", "model-value", "placeholder"])])
        }]
    ]),
    IQ = {
        key: 0,
        class: "search-results-settings-modal-search-volume mb-3"
    },
    NQ = {
        class: "form-label search-results-settings-modal-search-volume-label"
    },
    RQ = {
        class: "search-results-settings-modal-search-volume-value input-group"
    },
    KQ = ["value"],
    JQ = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    WQ = ["value"];
const zQ = Ue({
        props: ["current_permissions", "error_fields", "search_volume_format", "current_filter_search_volume_min", "current_filter_search_volume_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = L("mask");
            return r.current_permissions.show_search_volume_data ? (b(), g("div", IQ, [S("label", NQ, v(e.trans.get("Search Volume")), 1), S("div", RQ, [F(S("input", {
                placeholder: "min",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.search_volume_min
                }]),
                value: r.current_filter_search_volume_min,
                name: "search_volume_min",
                onInput: t[0] || (t[0] = t => e.$emit("update:current_filter_search_volume_min", t.target.value))
            }, null, 42, KQ), [
                [i, r.search_volume_format]
            ]), S("span", JQ, v(e.trans.get("to")), 1), F(S("input", {
                placeholder: "max",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.search_volume_max
                }]),
                value: r.current_filter_search_volume_max,
                name: "search_volume_max",
                onInput: t[1] || (t[1] = t => e.$emit("update:current_filter_search_volume_max", t.target.value))
            }, null, 42, WQ), [
                [i, r.search_volume_format]
            ])])])) : T("", !0)
        }]
    ]),
    YQ = {
        key: 0,
        class: "search-results-settings-modal-trend mb-3"
    },
    GQ = {
        class: "form-label search-results-settings-modal-trend-label"
    },
    XQ = {
        class: "search-results-settings-modal-trend-value input-group"
    },
    QQ = ["value"],
    ZQ = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    eZ = ["value"];
const tZ = Ue({
        props: ["current_permissions", "error_fields", "search_volume_trend_format", "current_filter_search_volume_trend_min", "current_filter_search_volume_trend_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = L("mask");
            return r.current_permissions.show_search_volume_data ? (b(), g("div", YQ, [S("label", GQ, v(e.trans.get("Trend")), 1), S("div", XQ, [F(S("input", {
                placeholder: "min",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.search_volume_trend_min
                }]),
                value: r.current_filter_search_volume_trend_min,
                name: "search_volume_trend_min",
                onInput: t[0] || (t[0] = t => e.$emit("update:current_filter_search_volume_trend_min", t.target.value))
            }, null, 42, QQ), [
                [i, r.search_volume_trend_format]
            ]), S("span", ZQ, v(e.trans.get("to")), 1), F(S("input", {
                placeholder: "max",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.search_volume_trend_max
                }]),
                value: r.current_filter_search_volume_trend_max,
                name: "search_volume_trend_max",
                onInput: t[1] || (t[1] = t => e.$emit("update:current_filter_search_volume_trend_max", t.target.value))
            }, null, 42, eZ), [
                [i, r.search_volume_trend_format]
            ])])])) : T("", !0)
        }]
    ]),
    rZ = {
        key: 0,
        class: "search-results-settings-modal-average-cpc mb-3"
    },
    sZ = {
        class: "form-label search-results-settings-modal-average-cpc-label"
    },
    aZ = {
        class: "search-results-settings-modal-average-cpc-value input-group"
    },
    oZ = ["value"],
    iZ = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    nZ = ["value"];
const lZ = Ue({
        props: ["current_permissions", "error_fields", "average_cpc_format", "current_filter_average_cpc_min", "current_filter_average_cpc_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = L("mask");
            return r.current_permissions.show_cpc_data ? (b(), g("div", rZ, [S("label", sZ, v(e.trans.get("Average CPC")), 1), S("div", aZ, [F(S("input", {
                placeholder: "min",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.average_cpc_min
                }]),
                value: r.current_filter_average_cpc_min,
                name: "average_cpc_min",
                onInput: t[0] || (t[0] = t => e.$emit("update:current_filter_average_cpc_min", t.target.value))
            }, null, 42, oZ), [
                [i, r.average_cpc_format]
            ]), S("span", iZ, v(e.trans.get("to")), 1), F(S("input", {
                placeholder: "max",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.average_cpc_max
                }]),
                value: r.current_filter_average_cpc_max,
                name: "average_cpc_max",
                onInput: t[1] || (t[1] = t => e.$emit("update:current_filter_average_cpc_max", t.target.value))
            }, null, 42, nZ), [
                [i, r.average_cpc_format]
            ])])])) : T("", !0)
        }]
    ]),
    cZ = {
        key: 0,
        class: "search-results-settings-modal-competition mb-3"
    },
    _Z = {
        class: "form-label search-results-settings-modal-competition-label"
    },
    uZ = {
        class: "search-results-settings-modal-competition-value input-group"
    },
    dZ = ["value"],
    mZ = {
        class: "input-group-text rounded-0 border-start-0 border-end-0"
    },
    hZ = ["value"];
const pZ = Ue({
        props: ["current_permissions", "error_fields", "competition_format", "current_filter_competition_min", "current_filter_competition_max"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = L("mask");
            return r.current_permissions.show_competition_data ? (b(), g("div", cZ, [S("label", _Z, v(e.trans.get("Competition")), 1), S("div", uZ, [F(S("input", {
                placeholder: "min",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.competition_min
                }]),
                value: r.current_filter_competition_min,
                name: "competition_min",
                onInput: t[0] || (t[0] = t => e.$emit("update:current_filter_competition_min", t.target.value))
            }, null, 42, dZ), [
                [i, r.competition_format]
            ]), S("span", mZ, v(e.trans.get("to")), 1), F(S("input", {
                placeholder: "max",
                type: "text",
                class: w(["form-control", {
                    "is-invalid": r.error_fields.competition_max
                }]),
                value: r.current_filter_competition_max,
                name: "competition_max",
                onInput: t[1] || (t[1] = t => e.$emit("update:current_filter_competition_max", t.target.value))
            }, null, 42, hZ), [
                [i, r.competition_format]
            ])])])) : T("", !0)
        }]
    ]),
    gZ = {
        key: 0,
        class: "search-results-settings-modal-competition mb-3"
    },
    yZ = {
        class: "form-label search-results-settings-modal-competition-label"
    },
    fZ = {
        class: "search-results-settings-modal-competition-value form-check"
    },
    wZ = {
        for: "low",
        class: "form-label search-results-settings-modal-competition-label fw-normal"
    },
    bZ = {
        class: "search-results-settings-modal-competition-value form-check"
    },
    vZ = {
        for: "medium",
        class: "form-label search-results-settings-modal-competition-label fw-normal"
    },
    kZ = {
        class: "search-results-settings-modal-competition-value form-check"
    },
    xZ = {
        for: "high",
        class: "form-label search-results-settings-modal-competition-label fw-normal"
    };
const CZ = Ue({
        props: ["current_permissions", "current_filter_competition"],
        data: () => ({
            filter_competition: null
        }),
        async mounted() {
            this.filter_competition = this.current_filter_competition
        },
        watch: {
            current_filter_competition: {
                handler(e, t) {
                    this.filter_competition !== e && (this.filter_competition = e)
                }
            }
        }
    }, [
        ["render", function(e, t, r, s, a, o) {
            return r.current_permissions.show_competition_data ? (b(), g("div", gZ, [S("label", yZ, v(e.trans.get("Competition")), 1), S("div", fZ, [F(S("input", {
                type: "checkbox",
                class: "form-check-input",
                id: "low",
                value: "Low",
                name: "competition_low",
                "onUpdate:modelValue": t[0] || (t[0] = e => a.filter_competition = e),
                onChange: t[1] || (t[1] = t => e.$emit("update:current_filter_competition", a.filter_competition))
            }, null, 544), [
                [q, a.filter_competition]
            ]), S("label", wZ, v(e.trans.get("Low")), 1)]), S("div", bZ, [F(S("input", {
                type: "checkbox",
                class: "form-check-input",
                id: "medium",
                value: "Medium",
                name: "competition_medium",
                "onUpdate:modelValue": t[2] || (t[2] = e => a.filter_competition = e),
                onChange: t[3] || (t[3] = t => e.$emit("update:current_filter_competition", a.filter_competition))
            }, null, 544), [
                [q, a.filter_competition]
            ]), S("label", vZ, v(e.trans.get("Medium")), 1)]), S("div", kZ, [F(S("input", {
                type: "checkbox",
                class: "form-check-input",
                id: "high",
                value: "High",
                name: "competition_high",
                "onUpdate:modelValue": t[4] || (t[4] = e => a.filter_competition = e),
                onChange: t[5] || (t[5] = t => e.$emit("update:current_filter_competition", a.filter_competition))
            }, null, 544), [
                [q, a.filter_competition]
            ]), S("label", xZ, v(e.trans.get("High")), 1)])])) : T("", !0)
        }]
    ]),
    SZ = {
        props: {
            loading: {
                type: Boolean,
                default: !0
            },
            has_metrics: {
                type: Boolean,
                default: !0
            },
            has_keywords: {
                type: Boolean,
                default: !1
            },
            current_filter_is_on: {
                type: Boolean,
                default: !1
            }
        },
        data: () => ({})
    },
    TZ = {
        key: 0
    },
    FZ = {
        key: 1
    },
    qZ = {
        class: "mb-4"
    },
    EZ = ["innerHTML"],
    UZ = {
        key: 2
    },
    MZ = {
        key: 3,
        class: "search-results-table-wrapper"
    };
const AZ = Ue(SZ, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", null, [r.loading || r.has_keywords ? r.loading || !r.current_filter_is_on || r.has_metrics ? r.loading || !r.has_keywords || r.has_metrics ? (b(), g("div", MZ, [V(e.$slots, "wrapper")])) : (b(), g("div", UZ)) : (b(), g("div", FZ, [S("h4", qZ, v(e.trans.get("Sorry, no keywords match your filters")), 1), S("p", {
                innerHTML: e.trans.get('Please, <a href="#" data-bs-toggle="modal" data-bs-target="#search-results-setting-modal">modify filters</a> to find more keywords.')
            }, null, 8, EZ)])) : (b(), g("div", TZ))])
        }]
    ]),
    PZ = {
        class: "search-results-keyword-list position-fixed float-end end-0 bottom-0 z-1 mb-4"
    },
    LZ = {
        class: "btn-group dropup me-3"
    },
    BZ = {
        class: "dropdown-menu dropdown-menu-end shadow"
    };
const $Z = Ue({
        props: ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "allow_delete", "has_error", "has_all_error"],
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("dropdown-menu-item-button");
            return b(), g("div", PZ, [S("div", LZ, [E(i, {
                loading: r.loading,
                all_keywords: r.all_keywords,
                total_keywords: r.total_keywords,
                selected: r.selected,
                allow_keyword_basket: r.allow_keyword_basket,
                allow_delete: r.allow_delete,
                has_error: r.has_error,
                has_all_error: r.has_all_error
            }, null, 8, ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "allow_delete", "has_error", "has_all_error"]), S("div", BZ, [V(e.$slots, "dropdown-menu-item")])])])
        }]
    ]),
    DZ = {
        props: ["loading", "all_keywords", "total_keywords", "selected", "allow_keyword_basket", "allow_delete", "has_error", "has_all_error"],
        data: () => ({})
    },
    jZ = ["disabled"],
    OZ = {
        key: 0
    },
    VZ = [S("i", {
        class: "bi bi-cart ms-1"
    }, null, -1)],
    HZ = S("span", null, [S("i", {
        class: "bi bi-download ms-1"
    })], -1),
    IZ = S("span", null, [S("i", {
        class: "bi bi-clipboard ms-1"
    })], -1),
    NZ = {
        key: 1
    },
    RZ = [S("i", {
        class: "bi bi-trash ms-1"
    }, null, -1)],
    KZ = {
        class: "badge bg-light text-primary position-absolute bottom-0 end-0 mb-n3 me-n2 fw-normal border border-secondary top-auto"
    },
    JZ = {
        key: 0
    },
    WZ = {
        key: 1
    };
const zZ = Ue(DZ, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("button", {
                disabled: r.loading || r.all_keywords.length <= 0 || r.has_error || r.has_all_error,
                type: "button",
                class: "btn-search-results-keyword-list btn btn-primary dropdown-toggle shadow position-relative",
                "data-bs-toggle": "dropdown",
                "aria-haspopup": "true",
                "aria-expanded": "false",
                "data-bs-auto-close": "true",
                id: "floatedActionsButtons"
            }, [r.allow_keyword_basket ? (b(), g("span", OZ, VZ)) : T("", !0), HZ, IZ, r.allow_delete ? (b(), g("span", NZ, RZ)) : T("", !0), S("span", KZ, [r.loading || 0 != r.selected.length ? (b(), g("strong", WZ, v(e.$filters.digit(r.selected.length)), 1)) : (b(), g("strong", JZ, v(e.$filters.digit(r.total_keywords)), 1))])], 8, jZ)
        }]
    ]),
    YZ = {
        class: "dropdown-divider"
    };
const GZ = Ue({
        data: () => ({})
    }, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("div", YZ)
        }]
    ]),
    XZ = {
        data: () => ({}),
        methods: {
            hideDropup() {
                bootstrap.Dropdown.getInstance(document.getElementById("floatedActionsButtons")).hide()
            }
        }
    },
    QZ = S("i", {
        class: "bi bi-cart me-1"
    }, null, -1);
const ZZ = Ue(XZ, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("a", {
                onClick: t[0] || (t[0] = t => {
                    e.$emit("add_basket"), o.hideDropup()
                }),
                href: "javascript:",
                class: "dropdown-item btn-add-basket-keywords"
            }, [QZ, A(" " + v(e.trans.get("Add to Keyword Basket")), 1)])
        }]
    ]),
    e1 = {
        data: () => ({}),
        methods: {
            hideDropup() {
                bootstrap.Dropdown.getInstance(document.getElementById("floatedActionsButtons")).hide()
            }
        }
    },
    t1 = S("i", {
        class: "bi bi-filetype-xls btn-export-keywords-excel me-1"
    }, null, -1);
const r1 = Ue(e1, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("a", {
                onClick: t[0] || (t[0] = t => {
                    e.$emit("excel", "xlsx"), o.hideDropup()
                }),
                href: "javascript:",
                class: "dropdown-item"
            }, [t1, A(" " + v(e.trans.get("Export to Excel")), 1)])
        }]
    ]),
    s1 = {
        data: () => ({}),
        methods: {
            hideDropup() {
                bootstrap.Dropdown.getInstance(document.getElementById("floatedActionsButtons")).hide()
            }
        }
    },
    a1 = S("i", {
        class: "bi bi-filetype-cs btn-export-keywords-csv me-1"
    }, null, -1);
const o1 = Ue(s1, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("a", {
                onClick: t[0] || (t[0] = t => {
                    e.$emit("excel", "csv"), o.hideDropup()
                }),
                href: "javascript:",
                class: "dropdown-item"
            }, [a1, A(" " + v(e.trans.get("Export to CSV")), 1)])
        }]
    ]),
    i1 = {
        data: () => ({}),
        methods: {
            hideDropup() {
                bootstrap.Dropdown.getInstance(document.getElementById("floatedActionsButtons")).hide()
            }
        }
    },
    n1 = S("i", {
        class: "bi bi-clipboard me-1"
    }, null, -1);
const l1 = Ue(i1, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("a", {
                onClick: t[0] || (t[0] = t => {
                    e.$emit("copy", "keyword"), o.hideDropup()
                }),
                href: "javascript:",
                class: "dropdown-item btn-copy-keywords"
            }, [n1, A(" " + v(e.trans.get("Copy")), 1)])
        }]
    ]),
    c1 = {
        props: ["current_permissions"],
        data: () => ({}),
        methods: {
            hideDropup() {
                bootstrap.Dropdown.getInstance(document.getElementById("floatedActionsButtons")).hide()
            }
        }
    },
    _1 = S("i", {
        class: "bi bi-clipboard me-1"
    }, null, -1);
const u1 = Ue(c1, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("a", {
                class: w([{
                    disabled: !r.current_permissions.show_search_volume_data
                }, "dropdown-item btn-copy-keywords-with-all-data"]),
                onClick: t[0] || (t[0] = t => {
                    e.$emit("copy", "all"), o.hideDropup()
                }),
                href: "javascript:"
            }, [_1, A(" " + v(e.trans.get("Copy with All Data")), 1)], 2)
        }]
    ]),
    d1 = {
        props: ["current_permissions"],
        data: () => ({}),
        methods: {
            hideDropup() {
                bootstrap.Dropdown.getInstance(document.getElementById("floatedActionsButtons")).hide()
            }
        }
    },
    m1 = S("i", {
        class: "bi bi-clipboard me-1"
    }, null, -1);
const h1 = Ue(d1, [
        ["render", function(e, t, r, s, a, o) {
            return b(), g("a", {
                class: w([{
                    disabled: !r.current_permissions.show_search_volume_data
                }, "dropdown-item btn-copy-keywords-with-search-volume"]),
                onClick: t[0] || (t[0] = t => {
                    e.$emit("copy", "search_volume"), o.hideDropup()
                }),
                href: "javascript:"
            }, [m1, A(" " + v(e.trans.get("Copy with Search Volume")), 1)], 2)
        }]
    ]),
    p1 = {
        props: {
            plan_roles: {
                type: String,
                required: !1,
                default: ""
            },
            pro_role_name: {
                type: String,
                required: !0,
                default: ""
            },
            api_role_name: {
                type: String,
                required: !0,
                default: ""
            },
            account: {
                type: Object,
                required: !0,
                default: {}
            },
            allowed_pro_upgrade: {
                type: Boolean,
                required: !1,
                default: !1
            },
            allowed_api_upgrade: {
                type: Boolean,
                required: !1,
                default: !1
            }
        },
        data: () => ({
            loading: !0,
            editMode: null,
            error: "",
            success: "",
            name: "",
            email: "",
            currentPlan: "",
            originalData: {},
            dirtyName: !1,
            dirtyEmail: !1,
            dirtyNewPassword: !1
        }),
        mounted() {
            this.originalData.name = this.name = this.account.name, this.originalData.email = this.email = this.account.email, this.loading = !1
        },
        methods: {
            hideError() {
                this.error = ""
            },
            showError(e = "") {
                this.error = e && "" != e ? e : this.trans.get("Unfortunately, we failed to updating your card details just now. Please try again."), this.$nextTick((() => {
                    var e;
                    null == (e = document.getElementById("error-alert")) || e.scrollIntoView()
                }))
            },
            showPassword(e, t, r, s) {
                let a = document.getElementById(t);
                document.getElementById(r).style.display = "none", document.getElementById(s).style.display = "", a.type = "text", null != e && e.preventDefault()
            },
            hidePassword(e, t, r, s) {
                let a = document.getElementById(t);
                document.getElementById(r).style.display = "none", document.getElementById(s).style.display = "", a.type = "password", null != e && e.preventDefault()
            },
            async save() {
                var e = "",
                    t = {};
                if ("" != this.editMode && ("editName" == this.editMode ? (e = "/user/saveName", t.name = this.name) : "editEmail" == this.editMode ? (e = "/user/saveEmail", t.current_password = document.getElementById("current_password").value, t.email = this.email) : "editPassword" == this.editMode && (e = "/user/savePassword", t.old_password = document.getElementById("old_password").value, t.new_password = document.getElementById("new_password").value)), "" != e) try {
                    this.hideError(), this.loading = !0;
                    var r = await axios.post(e, t, {
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });
                    this.processSuccess(r)
                } catch (L2) {
                    this.loading = !1, L2.response.data.errors && (this.showError(L2.response.data.message), _.forEach(L2.response.data.errors, ((e, t) => {
                        document.getElementById(t).classList.add("is-invalid"), "new_password" != t && "old_password" != t && "current_password" != t || document.getElementById("eye_" + t).classList.add("border-danger")
                    })))
                }
            },
            processSuccess(e) {
                if ("editPassword" == this.editMode && this.hidePassword(null, "new_password", "hidePassword", "showPassword"), this.editMode = "", this.loading = !1, e && e.data && e.data.redirect) return e.data.open ? window.open(e.data.redirect) : window.location = e.data.redirect;
                if (e && e.data && e.data.redirect_with_message) bsDialogs.create(e.data.redirect_with_message.message, [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((t => {
                    "true" === t && (window.location = e.data.redirect_with_message.redirect)
                }));
                else {
                    if (!(e && e.data && e.data.success)) return window.location.reload();
                    this.success = e.data.success, this.$nextTick((() => {
                        var e;
                        null == (e = document.getElementById("success-alert")) || e.scrollIntoView(), this.originalData.name = this.name, this.originalData.email = this.email, this.dirtyName = !1, this.dirtyEmail = !1, this.dirtyNewPassword = !1
                    }))
                }
            }
        }
    },
    g1 = {
        key: 0,
        class: "alert alert-danger my-3",
        role: "alert",
        id: "error-alert"
    },
    y1 = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-exclamation-circle-fill me-2"
    })], -1),
    f1 = {
        key: 1,
        class: "alert alert-success my-3",
        role: "alert",
        id: "success-alert"
    },
    w1 = S("td", {
        class: "w-1 align-top"
    }, [S("i", {
        class: "bi bi-check-circle-fill me-2"
    })], -1),
    b1 = {
        class: "row mb-4"
    },
    v1 = {
        class: "col-12 col-md-12"
    },
    k1 = {
        class: "card"
    },
    x1 = {
        class: "card-body"
    },
    C1 = {
        class: "mb-3 row"
    },
    S1 = {
        class: "d-inline-block col-12"
    },
    T1 = {
        class: "row"
    },
    F1 = {
        for: "currentPlan",
        class: "col-sm-3 col-form-label form-label"
    },
    q1 = {
        class: "col-sm-7"
    },
    E1 = ["innerHTML"],
    U1 = {
        class: "col-sm-2"
    },
    M1 = {
        key: 0,
        class: "input-group"
    },
    A1 = {
        class: "input-group-prepend"
    },
    P1 = {
        class: "btn btn-primary form-control dropdown-toggle",
        type: "button",
        "data-bs-toggle": "dropdown",
        "aria-expanded": "false"
    },
    L1 = {
        class: "dropdown-menu"
    },
    B1 = S("hr", {
        class: "my-3"
    }, null, -1),
    $1 = {
        class: "mb-3 row edit-name-section"
    },
    D1 = {
        class: "d-inline-block col-12"
    },
    j1 = {
        class: "row"
    },
    O1 = {
        for: "name",
        class: "col-sm-3 col-form-label form-label"
    },
    V1 = ["placeholder", "readonly"],
    H1 = {
        key: 0,
        class: "text-end"
    },
    I1 = S("i", {
        class: "bi bi-pencil-fill"
    }, null, -1),
    N1 = {
        key: 1,
        class: "text-end"
    },
    R1 = ["disabled"],
    K1 = S("hr", {
        class: "my-3"
    }, null, -1),
    J1 = {
        class: "mb-3 row edit-email-section"
    },
    W1 = {
        class: "d-inline-block col-12"
    },
    z1 = {
        class: "row"
    },
    Y1 = {
        for: "email",
        class: "col-sm-3 col-form-label form-label"
    },
    G1 = ["placeholder", "readonly"],
    X1 = {
        class: "input-group mt-3"
    },
    Q1 = ["placeholder", "readonly"],
    Z1 = {
        key: 1,
        class: "input-group-text bg-white",
        id: "eye_current_password"
    },
    e0 = [S("i", {
        class: "bi bi-eye-fill"
    }, null, -1)],
    t0 = [S("i", {
        class: "bi bi-eye-slash-fill"
    }, null, -1)],
    r0 = {
        key: 0,
        class: "text-end"
    },
    s0 = S("i", {
        class: "bi bi-pencil-fill"
    }, null, -1),
    a0 = {
        key: 1,
        class: "text-end"
    },
    o0 = ["disabled"],
    i0 = S("hr", {
        class: "my-3"
    }, null, -1),
    n0 = {
        class: "mb-3 row edit-password-section"
    },
    l0 = {
        class: "d-inline-block col-12"
    },
    c0 = {
        class: "row"
    },
    _0 = {
        for: "new_password",
        class: "col-sm-3 col-form-label form-label"
    },
    u0 = ["placeholder", "readonly"],
    d0 = {
        key: 1,
        class: "input-group-text bg-white",
        id: "eye_old_password"
    },
    m0 = [S("i", {
        class: "bi bi-eye-fill"
    }, null, -1)],
    h0 = [S("i", {
        class: "bi bi-eye-slash-fill"
    }, null, -1)],
    p0 = {
        class: "input-group"
    },
    g0 = ["placeholder", "value", "readonly"],
    y0 = {
        key: 0,
        class: "input-group-text bg-white",
        id: "eye_new_password"
    },
    f0 = [S("i", {
        class: "bi bi-eye-fill"
    }, null, -1)],
    w0 = [S("i", {
        class: "bi bi-eye-slash-fill"
    }, null, -1)],
    b0 = {
        key: 0,
        class: "text-end"
    },
    v0 = S("i", {
        class: "bi bi-pencil-fill"
    }, null, -1),
    k0 = {
        key: 1,
        class: "text-end"
    },
    x0 = ["disabled"];
const C0 = Ue(p1, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("loading-section");
            return b(), g(y, null, [E(i, {
                loading: a.loading
            }, null, 8, ["loading"]), "" != a.error ? (b(), g("div", g1, [S("table", null, [S("tbody", null, [S("tr", null, [y1, S("td", null, v(a.error), 1)])])])])) : "" != a.success ? (b(), g("div", f1, [S("table", null, [S("tbody", null, [S("tr", null, [w1, S("td", null, v(a.success), 1)])])])])) : T("", !0), S("div", b1, [S("div", v1, [S("div", k1, [S("div", x1, [S("div", C1, [S("div", S1, [S("div", T1, [S("label", F1, v(e.trans.get("Current Plan")), 1), S("div", q1, [S("span", {
                type: "text",
                class: w(["d-inline-block", "currentPlan" == a.editMode ? "form-control" : "bg-white shadow-none border-0 px-0 py-2"]),
                id: "currentPlan",
                innerHTML: r.plan_roles
            }, null, 10, E1)]), S("div", U1, [r.allowed_pro_upgrade || r.allowed_api_upgrade ? (b(), g(y, {
                key: 0
            }, [r.allowed_pro_upgrade && r.allowed_api_upgrade ? (b(), g("div", M1, [S("div", A1, [S("button", P1, v(e.trans.get("Upgrade")), 1), S("div", L1, [S("a", {
                class: "dropdown-item",
                href: "#",
                onClick: t[0] || (t[0] = t => e.$root.open_modal("upgrade_pro_plan_modal"))
            }, v(r.pro_role_name), 1), S("a", {
                class: "dropdown-item",
                href: "#",
                onClick: t[1] || (t[1] = t => e.$root.open_modal("upgrade_api_plan_modal"))
            }, v(r.api_role_name), 1)])])])) : r.allowed_pro_upgrade ? (b(), g(y, {
                key: 1
            }, [r.allowed_pro_upgrade ? (b(), g("button", {
                key: 0,
                onClick: t[2] || (t[2] = t => e.$root.open_modal("upgrade_pro_plan_modal")),
                type: "button",
                class: "btn btn-primary form-control"
            }, v(e.trans.get("Upgrade")), 1)) : T("", !0)], 64)) : r.allowed_api_upgrade ? (b(), g(y, {
                key: 2
            }, [r.allowed_api_upgrade ? (b(), g("button", {
                key: 0,
                onClick: t[3] || (t[3] = t => e.$root.open_modal("upgrade_api_plan_modal")),
                type: "button",
                class: "btn btn-primary form-control"
            }, v(e.trans.get("Upgrade")), 1)) : T("", !0)], 64)) : T("", !0)], 64)) : T("", !0)])])])]), B1, S("div", $1, [S("div", D1, [S("div", j1, [S("label", O1, v(e.trans.get("Full Name")), 1), S("div", {
                class: w("editName" == a.editMode ? "col-sm-9" : "col-sm-7")
            }, [F(S("input", {
                type: "text",
                class: w(["d-inline-block form-control", "editName" == a.editMode ? "" : "bg-white shadow-none border-0 px-0"]),
                id: "name",
                name: "name",
                placeholder: e.trans.get("Full Name"),
                "onUpdate:modelValue": t[4] || (t[4] = e => a.name = e),
                required: "",
                readonly: "editName" != a.editMode,
                onKeydown: t[5] || (t[5] = e => {
                    a.dirtyName = !0
                })
            }, null, 42, V1), [
                [U, a.name]
            ])], 2), S("div", {
                class: w("editName" == a.editMode ? "col-12 mt-3" : "col-sm-2")
            }, ["editName" != a.editMode ? (b(), g("div", H1, [S("button", {
                type: "button",
                class: "btn edit-button",
                onClick: t[6] || (t[6] = e => {
                    a.editMode = "editName", a.dirtyNewPassword = a.dirtyEmail = a.dirtyName = !1, a.email = a.originalData.email
                })
            }, [I1, A(" " + v(e.trans.get("Edit")), 1)])])) : T("", !0), "editName" == a.editMode ? (b(), g("div", N1, [S("button", {
                class: "btn btn-outline-primary",
                type: "button",
                onClick: t[7] || (t[7] = e => {
                    a.editMode = "", o.hideError(), a.dirtyName = !1, a.name = a.originalData.name
                })
            }, v(e.trans.get("Cancel")), 1), S("button", {
                class: "btn btn-primary save-button ms-1",
                disabled: !a.dirtyName,
                type: "button",
                onClick: t[8] || (t[8] = e => {
                    o.save(), a.dirtyName = !1
                })
            }, v(e.trans.get("Save")), 9, R1)])) : T("", !0)], 2)])])]), K1, S("div", J1, [S("div", W1, [S("div", z1, [S("label", Y1, v(e.trans.get("Email Address")), 1), S("div", {
                class: w("editEmail" == a.editMode ? "col-sm-9" : "col-sm-7")
            }, [F(S("input", {
                type: "text",
                class: w(["d-inline-block form-control", "editEmail" == a.editMode ? "" : "bg-white shadow-none border-0 px-0"]),
                id: "email",
                name: "email",
                placeholder: e.trans.get("Email Address"),
                "onUpdate:modelValue": t[9] || (t[9] = e => a.email = e),
                required: "",
                readonly: "editEmail" != a.editMode,
                onKeydown: t[10] || (t[10] = e => a.dirtyEmail = !0)
            }, null, 42, G1), [
                [U, a.email]
            ]), S("div", X1, ["editEmail" == a.editMode ? (b(), g("input", {
                key: 0,
                type: "password",
                class: w(["d-inline-block form-control border-end-0", "editEmail" == a.editMode ? "" : "bg-white shadow-none border-0"]),
                id: "current_password",
                name: "current_password",
                placeholder: e.trans.get("Password"),
                required: "",
                readonly: "editEmail" != a.editMode
            }, null, 10, Q1)) : T("", !0), "editEmail" == a.editMode ? (b(), g("span", Z1, [S("a", {
                href: "#",
                class: "text-dark",
                onClick: t[11] || (t[11] = e => o.showPassword(e, "current_password", "showCurrentPassword", "hideCurrentPassword")),
                id: "showCurrentPassword"
            }, e0), S("a", {
                href: "#",
                class: "text-dark",
                onClick: t[12] || (t[12] = e => o.hidePassword(e, "current_password", "hideCurrentPassword", "showCurrentPassword")),
                id: "hideCurrentPassword",
                style: {
                    display: "none"
                }
            }, t0)])) : T("", !0)])], 2), S("div", {
                class: w("editEmail" == a.editMode ? "col-12 mt-3" : "col-sm-2")
            }, ["editEmail" != a.editMode ? (b(), g("div", r0, [S("button", {
                type: "button",
                class: "btn edit-button",
                onClick: t[13] || (t[13] = e => {
                    a.editMode = "editEmail", a.dirtyNewPassword = a.dirtyEmail = a.dirtyName = !1, a.name = a.originalData.name
                })
            }, [s0, A(" " + v(e.trans.get("Edit")), 1)])])) : T("", !0), "editEmail" == a.editMode ? (b(), g("div", a0, [S("button", {
                class: "btn btn-outline-primary",
                type: "button",
                onClick: t[14] || (t[14] = e => {
                    a.editMode = "", o.hideError(), a.dirtyEmail = !1, a.email = a.originalData.email
                })
            }, v(e.trans.get("Cancel")), 1), S("button", {
                class: "btn btn-primary save-button ms-1",
                disabled: !a.dirtyEmail,
                type: "button",
                onClick: t[15] || (t[15] = e => o.save())
            }, v(e.trans.get("Save")), 9, o0)])) : T("", !0)], 2)])])]), i0, S("div", n0, [S("div", l0, [S("div", c0, [S("label", _0, v(e.trans.get("Password")), 1), S("div", {
                class: w("editPassword" == a.editMode ? "col-sm-9" : "col-sm-7")
            }, [S("div", {
                class: w("editPassword" == a.editMode ? "input-group mb-3" : "input-group")
            }, ["editPassword" == a.editMode ? (b(), g("input", {
                key: 0,
                type: "password",
                class: w(["d-inline-block form-control border-end-0", "editPassword" == a.editMode ? "" : "bg-white shadow-none border-0 px-0"]),
                id: "old_password",
                name: "old_password",
                placeholder: e.trans.get("Current Password"),
                required: "",
                readonly: "editPassword" != a.editMode
            }, null, 10, u0)) : T("", !0), "editPassword" == a.editMode ? (b(), g("span", d0, [S("a", {
                href: "#",
                class: "text-dark",
                onClick: t[16] || (t[16] = e => o.showPassword(e, "old_password", "showOldPassword", "hideOldPassword")),
                id: "showOldPassword"
            }, m0), S("a", {
                href: "#",
                class: "text-dark",
                onClick: t[17] || (t[17] = e => o.hidePassword(e, "old_password", "hideOldPassword", "showOldPassword")),
                id: "hideOldPassword",
                style: {
                    display: "none"
                }
            }, h0)])) : T("", !0)], 2), S("div", p0, [S("input", {
                type: "password",
                class: w(["d-inline-block form-control border-end-0", "editPassword" == a.editMode ? "" : "bg-white shadow-none border-0 px-0"]),
                id: "new_password",
                name: "new_password",
                placeholder: e.trans.get("New Password"),
                value: "editPassword" == a.editMode ? "" : "fakepassword",
                required: "",
                readonly: "editPassword" != a.editMode,
                onKeydown: t[18] || (t[18] = e => a.dirtyNewPassword = !0)
            }, null, 42, g0), "editPassword" == a.editMode ? (b(), g("span", y0, [S("a", {
                href: "#",
                class: "text-dark",
                onClick: t[19] || (t[19] = e => o.showPassword(e, "new_password", "showPassword", "hidePassword")),
                id: "showPassword"
            }, f0), S("a", {
                href: "#",
                class: "text-dark",
                onClick: t[20] || (t[20] = e => o.hidePassword(e, "new_password", "hidePassword", "showPassword")),
                id: "hidePassword",
                style: {
                    display: "none"
                }
            }, w0)])) : T("", !0)])], 2), S("div", {
                class: w("editPassword" == a.editMode ? "col-12 mt-3" : "col-sm-2")
            }, ["editPassword" != a.editMode ? (b(), g("div", b0, [S("button", {
                type: "button",
                class: "btn edit-button",
                onClick: t[21] || (t[21] = e => {
                    a.editMode = "editPassword", a.dirtyNewPassword = a.dirtyEmail = a.dirtyName = !1, a.name = a.originalData.name, a.email = a.originalData.email
                })
            }, [v0, A(" " + v(e.trans.get("Edit")), 1)])])) : T("", !0), "editPassword" == a.editMode ? (b(), g("div", k0, [S("button", {
                class: "btn btn-outline-primary",
                type: "button",
                onClick: t[22] || (t[22] = e => {
                    a.editMode = "", o.hideError(), a.dirtyNewPassword = !1
                })
            }, v(e.trans.get("Cancel")), 1), S("button", {
                class: "btn btn-primary save-button ms-1",
                disabled: !a.dirtyNewPassword,
                type: "button",
                onClick: t[23] || (t[23] = e => {
                    o.save(), a.dirtyNewPassword = !1
                })
            }, v(e.trans.get("Save")), 9, x0)])) : T("", !0)], 2)])])]), T("", !0), T("", !0)])])])])], 64)
        }]
    ]),
    S0 = {
        props: {
            billing_url: {
                type: String,
                required: !0,
                default: ""
            },
            default_invoice_by_email: {
                type: Boolean,
                required: !1,
                default: !0
            },
            default_invoice_emails: {
                type: String,
                required: !1,
                default: ""
            },
            default_invoice_details: {
                type: String,
                required: !1,
                default: ""
            }
        },
        data() {
            return {
                invoice_by_email: this.default_invoice_by_email,
                invoice_emails: this.default_invoice_emails,
                invoice_details: this.default_invoice_details,
                valid_invoice_emails: !0,
                validating_invoice_emails: !1
            }
        },
        mounted() {},
        methods: {
            async submit() {
                this.$root.submit("billing-detail-form", !0)
            },
            validInvoiceEmails() {
                this.validating_invoice_emails = !0;
                let e = this.invoice_emails.split(",");
                for (var t = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/, r = 0; r < e.length; r++)
                    if (e[r] = e[r].trim(), "" == e[r] || !t.test(e[r])) return !1;
                return !0
            }
        }
    },
    T0 = ["action"],
    F0 = {
        class: "mb-3"
    },
    q0 = {
        class: "d-flex justify-content-between"
    },
    E0 = {
        class: "form-label mt-1",
        for: "invoice_by_email"
    },
    U0 = S("hr", null, null, -1),
    M0 = {
        class: "mb-3"
    },
    A0 = {
        class: "form-label",
        for: "invoice_emails"
    },
    P0 = {
        class: "form-text text-muted"
    },
    L0 = {
        class: "mb-3"
    },
    B0 = {
        class: "form-label",
        for: "invoice_details"
    },
    $0 = {
        class: "form-text text-muted"
    },
    D0 = {
        class: "mb-0 text-end"
    },
    j0 = ["disabled"],
    O0 = S("i", {
        class: "bi bi-save me-1"
    }, null, -1);
const V0 = Ue(S0, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("vue-toggle");
            return b(), g("div", null, [S("form", {
                onSubmit: t[4] || (t[4] = P(((...e) => o.submit && o.submit(...e)), ["prevent"])),
                enctype: "multipart/form-data",
                action: r.billing_url,
                role: "form",
                method: "post",
                id: "billing-detail-form",
                "accept-charset": "UTF-8"
            }, [S("div", F0, [S("div", q0, [S("div", null, [S("label", E0, v(e.trans.get("Receive Invoices By Email")), 1)]), S("div", null, [S("div", null, [E(i, {
                class: "invoice-by-email-option",
                title: "",
                name: "invoice_by_email",
                toggled: a.invoice_by_email,
                onToggle: t[0] || (t[0] = e => a.invoice_by_email = e)
            }, null, 8, ["toggled"])])])])]), U0, S("div", M0, [S("label", A0, v(e.trans.get("Additional Email Addresses That Will Receive Payment Receipts And Invoices")), 1), F(S("input", {
                onChange: t[1] || (t[1] = e => a.valid_invoice_emails = o.validInvoiceEmails()),
                type: "text",
                class: w(["form-control", {
                    "is-invalid": a.validating_invoice_emails && !a.valid_invoice_emails
                }]),
                id: "invoice_emails",
                name: "invoice_emails",
                "onUpdate:modelValue": t[2] || (t[2] = e => a.invoice_emails = e),
                "aria-describedby": "invoice_emails"
            }, null, 34), [
                [U, a.invoice_emails]
            ]), S("small", P0, v(e.trans.get("Separate multiple billing email addresses by comma (,).")), 1)]), S("div", L0, [S("label", B0, v(e.trans.get("Invoice Details")), 1), F(S("textarea", {
                id: "invoice_details",
                name: "invoice_details",
                "onUpdate:modelValue": t[3] || (t[3] = e => a.invoice_details = e),
                cols: "60",
                rows: "5",
                class: "form-textarea form-control"
            }, null, 512), [
                [U, a.invoice_details]
            ]), S("small", $0, v(e.trans.get("Please specify your company legal name, address, VAT number and / or other details that should be included in your invoices.")), 1)]), S("div", D0, [S("button", {
                disabled: e.$root.loading,
                type: "submit",
                class: "btn btn-primary"
            }, [O0, A(" " + v(e.trans.get("Save")), 1)], 8, j0)])], 40, T0)])
        }]
    ]),
    H0 = {
        props: {
            route: {
                type: String,
                required: !0,
                default: ""
            },
            bulk_route: {
                type: String,
                required: !0,
                default: ""
            },
            excel_template: {
                type: String,
                required: !0,
                default: ""
            },
            default_role: {
                type: String,
                required: !0,
                default: ""
            },
            remaining: {
                type: String,
                required: !0,
                default: 0
            },
            roles: {
                type: Object,
                required: !0,
                default: {}
            }
        },
        data() {
            return {
                invitesCount: 1,
                invitations: [{
                    name: "",
                    email: "",
                    role: this.default_role
                }],
                file: "",
                invite_bulk_modal: !1
            }
        },
        mounted() {},
        methods: {
            addInvitation() {
                this.remaining - this.invitesCount > 0 ? (this.invitations.push({
                    name: "",
                    email: "",
                    role: this.default_role
                }), this.invitesCount++) : bsDialogs.create(this.trans.get("Unfortunately, you can only invite up to :count users.", {
                    count: this.remaining
                }), [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((e => {}))
            },
            async addInvitationsInBulk() {
                this.$root.loading = !0;
                var e = document.getElementById("process-bulk-invitation-form"),
                    t = e.getAttribute("action");
                this.$root.clear_error(document.getElementById("app"));
                try {
                    var r = new FormData(e);
                    r.append("file", this.file);
                    var s = await axios.post(t, r, {
                        headers: {
                            "Content-Type": "multipart/form-data"
                        }
                    });
                    this.processSuccessBulk(s), this.$root.loading = !1, this.invite_bulk_modal = !1
                } catch (i) {
                    this.$root.error_handler(i, e)
                }
                let a = document.getElementById("file-input");
                a.value = "";
                let o = new Event("change");
                a.dispatchEvent(o), this.file = ""
            },
            async sendInvitations() {
                this.$root.submit("user-invite-form", !0)
            },
            processSuccessBulk(e) {
                if (e && e.data) {
                    let t = [];
                    _.forEach(e.data, ((e, r) => {
                        if (e.name) {
                            let r = this.mapUserRole(e.role);
                            t.push({
                                name: e.name,
                                email: e.email,
                                role: r.length > 0 ? r[0].id : this.default_role
                            }), this.invitesCount++
                        }
                    })), this.invitations = t
                }
            },
            handleFileUpload(e) {
                var t = e.target.files.length,
                    r = e.target.nextElementSibling;
                1 === t ? e.target.files[0] && e.target.files[0].name && (r.innerHTML = e.target.files[0].name) : r.innerHTML = 'or <span class="text-primary">browse</span>', this.file = e.target.files[0] ?? ""
            },
            mapUserRole(e) {
                return this.roles.filter((t => t.text == e))
            }
        }
    },
    I0 = {
        class: "row"
    },
    N0 = {
        class: "col"
    },
    R0 = {
        class: "mb-0"
    },
    K0 = {
        class: "form-label",
        for: "user_name_0"
    },
    J0 = {
        class: "col"
    },
    W0 = {
        class: "mb-0"
    },
    z0 = {
        class: "form-label",
        for: "user_email_0"
    },
    Y0 = {
        class: "col-3"
    },
    G0 = {
        class: "mb-0"
    },
    X0 = {
        class: "form-label",
        for: "user_type_0"
    },
    Q0 = ["data-bs-content"],
    Z0 = ["action"],
    e8 = {
        class: "col"
    },
    t8 = {
        class: "mb-3"
    },
    r8 = ["onUpdate:modelValue", "name", "id"],
    s8 = {
        class: "col"
    },
    a8 = {
        class: "mb-3"
    },
    o8 = ["onUpdate:modelValue", "name", "id"],
    i8 = {
        class: "col-3"
    },
    n8 = {
        class: "mb-3"
    },
    l8 = S("hr", null, null, -1),
    c8 = {
        class: "row"
    },
    _8 = {
        class: "col-sm-8 mb-0 mt-1 d-flex justify-content-start"
    },
    u8 = {
        class: "align-middle"
    },
    d8 = S("i", {
        class: "bi bi-plus-lg me-1"
    }, null, -1),
    m8 = {
        class: "col-sm-4 mb-0 d-flex justify-content-end"
    },
    h8 = ["disabled"],
    p8 = ["action"],
    g8 = {
        class: "row"
    },
    y8 = {
        class: "col-12"
    },
    f8 = {
        class: "file-drop-area text-center w-100"
    },
    w8 = S("div", {
        class: "my-2"
    }, [S("i", {
        class: "bi bi-cloud-plus",
        style: {
            "font-size": "2rem"
        }
    })], -1),
    b8 = {
        class: "my-2 file-message fw-bolder h5"
    },
    v8 = {
        class: "my-2 choose-file-button"
    },
    k8 = {
        class: "text-primary"
    },
    x8 = {
        class: "row mt-2 mb-4"
    },
    C8 = ["innerHTML"],
    S8 = {
        class: "row"
    },
    T8 = {
        class: "col-6"
    },
    F8 = {
        class: "col-6"
    },
    q8 = ["disabled"];
const E8 = Ue(H0, [
        ["render", function(e, t, r, s, a, o) {
            const i = k("tom-select"),
                n = k("modal");
            return b(), g(y, null, [S("div", I0, [S("div", N0, [S("div", R0, [S("label", K0, v(e.trans.get("Full name")), 1)])]), S("div", J0, [S("div", W0, [S("label", z0, v(e.trans.get("Email address")), 1)])]), S("div", Y0, [S("div", G0, [S("label", X0, [A(v(e.trans.get("Role")) + " ", 1), S("i", {
                class: "bi bi-info-circle-fill ms-1",
                "aria-hidden": "true",
                "data-bs-toggle": "popover",
                "data-bs-placement": "left",
                "data-bs-trigger": "hover focus",
                "data-bs-content": e.trans.get("Users can have the following roles:<br><ul class='list-unstyled mb-0'><li class='my-2'><strong>Owner</strong><br>User that has created the subscription. Owner can add, edit, and delete new users, cancel subscription, change billing details on file and add new subscriptions to the account.</li><li class='my-2'><strong>Admin</strong><br>Admin can add, edit, and delete users, cancel subscription, change billing details on file and add new subscriptions to the account.</li><li class='my-2'><strong>User</strong><br>User can not add, edit, and delete users. He or she does not have access to the billing information and can not cancel or add new subscriptions to the account.</li></ul>")
            }, null, 8, Q0)])])])]), S("form", {
                onSubmit: t[2] || (t[2] = P(((...e) => o.sendInvitations && o.sendInvitations(...e)), ["prevent"])),
                enctype: "multipart/form-data",
                action: r.route,
                role: "form",
                method: "post",
                id: "user-invite-form",
                "accept-charset": "UTF-8"
            }, [(b(!0), g(y, null, f(a.invitations, ((e, t) => (b(), g("div", {
                class: "row",
                key: t
            }, [S("div", e8, [S("div", t8, [F(S("input", {
                type: "text",
                class: "form-control",
                "onUpdate:modelValue": t => e.name = t,
                name: "user_name[" + t + "]",
                id: "user_name_" + t,
                maxlength: "190"
            }, null, 8, r8), [
                [U, e.name]
            ])])]), S("div", s8, [S("div", a8, [F(S("input", {
                type: "email",
                class: "form-control",
                "onUpdate:modelValue": t => e.email = t,
                name: "user_email[" + t + "]",
                id: "user_email_" + t,
                maxlength: "190"
            }, null, 8, o8), [
                [U, e.email]
            ])])]), S("div", i8, [S("div", n8, [E(i, {
                name: "user_type[" + t + "]",
                id: "user_type_" + t,
                settings: {
                    containerCssClass: "form-control"
                },
                options: r.roles,
                "model-value": e.role,
                searchable: !1,
                "onUpdate:modelValue": t => e.role = t
            }, null, 8, ["name", "id", "options", "model-value", "onUpdate:modelValue"])])])])))), 128)), l8, S("div", c8, [S("div", _8, [S("span", u8, [S("a", {
                href: "javascript:",
                class: "fw-bold add-user-row",
                onClick: t[0] || (t[0] = (...e) => o.addInvitation && o.addInvitation(...e))
            }, [d8, A(" Add another email")]), A(" or "), S("a", {
                href: "javascript:",
                onClick: t[1] || (t[1] = e => a.invite_bulk_modal = !0),
                class: "fw-bold add-bulk-invitation"
            }, "click here"), A(" to add in bulk. ")])]), S("div", m8, [S("button", {
                disabled: e.$root.loading,
                type: "submit",
                class: "btn btn-primary btn-block send-invitation-button"
            }, v(e.trans.get("Send Invitation")), 9, h8)])])], 40, Z0), a.invite_bulk_modal ? (b(), x(n, {
                key: 0
            }, {
                body: C((() => [S("form", {
                    onSubmit: t[5] || (t[5] = P(((...e) => o.addInvitationsInBulk && o.addInvitationsInBulk(...e)), ["prevent"])),
                    enctype: "multipart/form-data",
                    action: r.bulk_route,
                    role: "form",
                    method: "post",
                    id: "process-bulk-invitation-form",
                    "accept-charset": "UTF-8",
                    class: "p-2"
                }, [S("div", g8, [S("div", y8, [S("div", f8, [w8, S("div", b8, v(e.trans.get("Drag and drop file")), 1), S("input", {
                    class: "file-input",
                    id: "file-input",
                    type: "file",
                    accept: ".xls,.xlsx,.csv",
                    onChange: t[3] || (t[3] = (...e) => o.handleFileUpload && o.handleFileUpload(...e))
                }, null, 32), S("div", v8, [A("or "), S("span", k8, v(e.trans.get("browse")), 1)])])])]), S("div", x8, [S("div", {
                    class: "col-auto",
                    innerHTML: e.trans.get('To add users in bulk, please <a href=":link" target="_blank">download</a> and use our template file and upload it here once ready.', {
                        link: r.excel_template
                    })
                }, null, 8, C8)]), S("div", S8, [S("div", T8, [S("button", {
                    type: "button",
                    class: "btn btn-outline-primary btn-block",
                    onClick: t[4] || (t[4] = e => a.invite_bulk_modal = !1)
                }, v(e.trans.get("Close")), 1)]), S("div", F8, [S("button", {
                    type: "submit",
                    class: "btn btn-primary btn-block bulk-invitation-button",
                    disabled: e.$root.loading
                }, v(e.trans.get("Upload")), 9, q8)])])], 40, p8)])),
                _: 1
            })) : T("", !0)], 64)
        }]
    ]),
    U8 = {
        props: {
            members_url: {
                type: String,
                required: !0,
                default: ""
            },
            account_owner_role: {
                type: String,
                required: !0,
                default: []
            },
            user_id: {
                type: String,
                required: !0,
                default: []
            },
            default_role: {
                type: String,
                required: !0,
                default: ""
            },
            roles: {
                type: Object,
                required: !0,
                default: {}
            }
        },
        data: () => ({
            loading: !0,
            error: "",
            teamMembersCount: 0,
            teamMembers: [],
            paginations: [],
            current_page: 1,
            change_role_modal: !1,
            change_role_url: "",
            change_role_user_type: ""
        }),
        mounted() {
            this.fetching(this.members_url)
        },
        methods: {
            async editUserType() {
                this.$root.loading = !0;
                var e = document.getElementById("user-edit-form"),
                    t = e.getAttribute("action");
                this.$root.clear_error(document.getElementById("app"));
                try {
                    var r = new FormData(e),
                        s = await axios.post(t, r, {
                            headers: {
                                "Content-Type": "multipart/form-data"
                            }
                        });
                    this.change_role_modal = !1, this.$root.success_handler(s)
                } catch (a) {
                    this.$root.error_handler(a, e)
                }
            },
            fetching(e) {
                axios.get(e).then((e => {
                    e.data.data ? (this.teamMembers = e.data.data, this.paginations = e.data.links, this.current_page = e.data.current_page) : (this.teamMembers = e.data, this.paginations = [], this.current_page = 1)
                })).catch((e => {
                    this.error = this.trans.get("Sorry, there was an unexpected error. Please refresh page and try again.")
                })).finally((() => {
                    this.loading = !1
                }))
            }
        }
    },
    M8 = {
        class: "table-responsive rounded"
    },
    A8 = {
        class: "table mb-0"
    },
    P8 = {
        class: "table-light"
    },
    L8 = {
        scope: "col"
    },
    B8 = {
        scope: "col"
    },
    $8 = ["data-bs-content"],
    D8 = {
        scope: "col"
    },
    j8 = S("th", {
        scope: "col"
    }, null, -1),
    O8 = {
        key: 0
    },
    V8 = {
        colspan: "4"
    },
    H8 = {
        key: 1
    },
    I8 = {
        colspan: "4"
    },
    N8 = {
        key: 2
    },
    R8 = {
        colspan: "4"
    },
    K8 = {
        class: "d-flex"
    },
    J8 = {
        class: "bg-primary lead fw-normal me-2 text-center text-white py-2 rounded-circle",
        style: {
            width: "48px"
        }
    },
    W8 = {
        class: "text-nowrap"
    },
    z8 = S("br", null, null, -1),
    Y8 = {
        class: "align-middle"
    },
    G8 = {
        class: "align-middle text-nowrap"
    },
    X8 = {
        key: 0
    },
    Q8 = S("br", null, null, -1),
    Z8 = {
        class: "text-muted"
    },
    e2 = {
        key: 1
    },
    t2 = {
        key: 0,
        class: "dropdown"
    },
    r2 = S("span", {
        class: "cursor-pointer edit-user-actions",
        "data-bs-toggle": "dropdown",
        "aria-expanded": "false"
    }, [S("i", {
        class: "bi bi-three-dots"
    })], -1),
    s2 = {
        class: "dropdown-menu"
    },
    a2 = ["onClick"],
    o2 = ["onClick"],
    i2 = ["onClick"],
    n2 = ["onClick"],
    l2 = {
        key: 0,
        class: "mt-3"
    },
    c2 = {
        class: "pagination justify-content-center"
    },
    _2 = ["onClick"],
    u2 = ["innerHTML"],
    d2 = ["action"],
    m2 = {
        class: "mb-3"
    },
    h2 = {
        class: "mb-3"
    },
    p2 = {
        class: "mb-3 row"
    },
    g2 = {
        class: "col-6"
    },
    y2 = {
        class: "col-6"
    },
    f2 = {
        type: "submit",
        class: "btn btn-primary btn-block update-role-button"
    };
const w2 = Ue(U8, [
    ["render", function(e, t, r, s, a, o) {
        const i = k("tom-select"),
            n = k("modal");
        return b(), g("div", M8, [S("table", A8, [S("thead", P8, [S("tr", null, [S("th", L8, v(e.trans.get("Name And Email")), 1), S("th", B8, [A(v(e.trans.get("Role")) + " ", 1), S("i", {
            class: "bi bi-info-circle-fill ms-1",
            "aria-hidden": "true",
            "data-bs-toggle": "popover",
            "data-bs-placement": "left",
            "data-bs-trigger": "hover focus",
            "data-bs-content": e.trans.get("Users can have the following roles:<br><ul class='list-unstyled mb-0'><li class='my-2'><strong>Owner</strong><br>User that has created the subscription. Owner can add, edit, and delete new users, cancel subscription, change billing details on file and add new subscriptions to the account.</li><li class='my-2'><strong>Admin</strong><br>Admin can add, edit, and delete users, cancel subscription, change billing details on file and add new subscriptions to the account.</li><li class='my-2'><strong>User</strong><br>User can not add, edit, and delete users. He or she does not have access to the billing information and can not cancel or add new subscriptions to the account.</li></ul>")
        }, null, 8, $8)]), S("th", D8, v(e.trans.get("Status")), 1), j8])]), S("tbody", null, [a.loading ? (b(), g("tr", O8, [S("td", V8, v(e.trans.get("Loading...")), 1)])) : a.error ? (b(), g("tr", H8, [S("td", I8, v(a.error), 1)])) : a.teamMembersCount > 0 ? (b(), g("tr", N8, [S("td", R8, v(e.trans.get("No users found.")), 1)])) : (b(!0), g(y, {
            key: 3
        }, f(a.teamMembers, (t => (b(), g("tr", {
            key: t.id
        }, [S("td", null, [S("div", K8, [S("div", J8, v(t.short_name), 1), S("div", W8, [A(v(t.name) + " ", 1), z8, A(" " + v(t.email), 1)])])]), S("td", Y8, v(t.type_name), 1), S("td", G8, [t.invited_date && t.type != r.account_owner_role ? (b(), g("span", X8, [A(" Invite sent"), Q8, S("small", Z8, "Invited on " + v(t.invited_date), 1)])) : (b(), g("span", e2, v(e.trans.get("Active")), 1))]), S("td", null, [t.type != r.account_owner_role && t.id != r.user_id ? (b(), g("div", t2, [r2, S("div", s2, [t.invited_date ? (b(), g(y, {
            key: 1
        }, [S("a", {
            class: "dropdown-item resend-invite-button",
            href: "javascript:",
            onClick: r => e.$root.confirmation(e.trans.get("Would you like to resend the invitation to :email?", {
                email: t.email
            }), "/user/team/resend/" + t.id, {
                confirmButtonText: e.trans.get("Yes"),
                cancelButtonText: e.trans.get("No, Cancel")
            })
        }, v(e.trans.get("Resend Invite")), 9, i2), S("a", {
            class: "dropdown-item cancel-invite-button",
            href: "javascript:",
            onClick: r => e.$root.confirmation(e.trans.get("Would you like to cancel an invitation sent to :email?", {
                email: t.email
            }), "/user/team/delete?user_id=" + t.id, {
                confirmButtonText: e.trans.get("Yes"),
                cancelButtonText: e.trans.get("No")
            })
        }, v(e.trans.get("Cancel Invitation")), 9, n2)], 64)) : (b(), g(y, {
            key: 0
        }, [S("a", {
            class: "dropdown-item change-role-button",
            href: "javascript:",
            onClick: () => {
                a.change_role_url = "/user/team/save/" + t.id, a.change_role_user_type = t.type, a.change_role_modal = !0
            }
        }, v(e.trans.get("Change Role")), 9, a2), S("a", {
            class: "dropdown-item remove-member-button",
            href: "javascript:",
            onClick: r => e.$root.confirmation(e.trans.get("Are you sure you want to delete the account :email?", {
                email: t.email
            }), "/user/team/delete?user_id=" + t.id)
        }, v(e.trans.get("Remove Member")), 9, o2)], 64))])])) : T("", !0)])])))), 128))])]), a.paginations.length > 3 ? (b(), g("nav", l2, [S("ul", c2, [(b(!0), g(y, null, f(a.paginations, (e => (b(), g("li", {
            class: w(["page-item", e.active || null == e.url ? "disabled" : ""]),
            key: e.label
        }, [S("a", {
            class: "page-link",
            href: "#",
            onClick: P((t => o.fetching(e.url)), ["prevent"])
        }, [S("span", {
            innerHTML: e.label
        }, null, 8, u2)], 8, _2)], 2)))), 128))])])) : T("", !0), a.change_role_modal ? (b(), x(n, {
            key: 1,
            scrollable: !1,
            allow_close: !0,
            onHide: t[2] || (t[2] = e => a.change_role_modal = !1)
        }, {
            header: C((() => [S("h5", null, v(e.trans.get("Change Role")), 1)])),
            body: C((() => [S("form", {
                onSubmit: t[1] || (t[1] = P(((...e) => o.editUserType && o.editUserType(...e)), ["prevent"])),
                enctype: "multipart/form-data",
                action: a.change_role_url,
                role: "form",
                method: "post",
                id: "user-edit-form",
                "accept-charset": "UTF-8"
            }, [S("div", m2, [E(i, {
                id: "user_type",
                name: "user_type",
                settings: {
                    containerCssClass: "form-control user-type-select2"
                },
                searchable: !1,
                options: r.roles,
                "model-value": a.change_role_user_type
            }, null, 8, ["options", "model-value"])]), S("div", h2, [S("p", null, v(e.trans.get("Admin can add, edit, and delete users, cancel subscription, change billing details on file and add new subscriptions to the account.")), 1)]), S("div", p2, [S("div", g2, [S("button", {
                type: "button",
                class: "btn btn-outline-primary btn-block",
                onClick: t[0] || (t[0] = e => a.change_role_modal = !1)
            }, v(e.trans.get("Cancel")), 1)]), S("div", y2, [S("button", f2, v(e.trans.get("Apply")), 1)])])], 40, d2)])),
            _: 1
        })) : T("", !0)])
    }]
]);
document.onreadystatechange = function() {}, document.addEventListener("DOMContentLoaded", (function() {
    [...document.querySelectorAll('[data-bs-toggle="popover"]')].map((e => new bootstrap.Popover(e, {
        sanitize: !1,
        html: !0
    })))
})), window.addEventListener("pageshow", (e => {
    if (e.persisted && window.location.reload(), e.target && e.target.location && e.target.location.pathname && e.target.location.pathname.indexOf("/search/keywords/") > -1 && e.target.location.pathname.indexOf("/result/") > -1) {
        window.history.replaceState({
            reload: !0
        }, document.title, document.location.href)
    }
})), window.addEventListener("popstate", (e => {
    
}));
const b2 = "top-0 end-0",
    v2 = "bottom-0 end-0",
    k2 = {
        DEFAULT: "bg-secondary",
        PRIMARY: "bg-primary",
        INFO: "bg-info",
        SUCCESS: "bg-success",
        WARNING: "bg-warning",
        DANGER: "bg-danger",
        DARK: "bg-dark"
    },
    x2 = 1,
    C2 = 2,
    S2 = 5e3,
    T2 = !0,
    F2 = '<i class="p-2 me-2 rounded %TYPE%"></i>';
let q2 = class {
    get _options_default() {
        return {
            centered: !0,
            backdrop: "static",
            keyboard: !1,
            focus: !0,
            close: !0,
            size: "",
            fullscreen: null,
            scrollable: !1
        }
    }
    constructor(e = {}) {
        this._options = Object.assign({}, this._options_default, e), this._bs_options = {
            backdrop: this._options.backdrop,
            keyboard: this._options.keyboard,
            focus: this._options.focus
        }, this._modal_div = document.createElement("div"), this._modal_div.className = "modal fade dialog-modal", this._modal_div.tabIndex = -1, this._modal_div.insertAdjacentHTML("beforeend", this._modal_html()), this._modal_title = this._modal_div.querySelector("h5.modal-title"), this._modal_body = this._modal_div.querySelector("div.modal-body"), this._modal_footer = this._modal_div.querySelector("div.modal-footer"), this._modal_header = this._modal_div.querySelector("div.modal-header"), this._modal_close = this._modal_div.querySelector("button.btn-close"), document.body.appendChild(this._modal_div), this._modal_bs = new bootstrap.Modal(this._modal_div, this._bs_options)
    }
    _modal_html() {
        let e = ["modal-dialog"];
        return this._options.centered && e.push("modal-dialog-centered"), "" !== this._options.size && e.push("modal-" + this._options.size), null !== this._options.fullscreen && ("" === this._options.fullscreen ? e.push("modal-fullscreen") : e.push("modal-fullscreen-" + this._options.fullscreen)), this._options.scrollable && e.push("modal-dialog-scrollable"), `<div class="${e.join(" ")}">\n            <div class="modal-content">\n                <div class="modal-header border-bottom-0 text-center pb-0">\n                    <h5 class="modal-title w-100"></h5>\n                </div>\n                <div class="modal-body text-center"></div>\n                <div class="modal-footer border-top-0 text-center pt-0"></div>\n            </div>\n        </div>`
    }
    create(e, t = {
        classes: "btn-primary",
        text: "OK",
        value: !0
    }, r = null, s = null) {
        let a = "";
        null != r && "" != r && (a = `<div>${r}</div>`);
        let o = '<i class="bi bi-check-circle display-1 text-success"></i>';
        if (null != s && "" != s) switch (s) {
            case "creditcard":
                o = '<i class="bi bi-credit-card display-1"></i>';
                break;
            case "arrowrepeat":
                o = '<i class="bi bi-arrow-repeat display-1"></i>';
                break;
            case "info":
                o = '<i class="bi bi-info-circle display-1 text-info"></i>';
                break;
            case "warning":
                o = '<i class="bi bi bi-exclamation-circle display-1 text-warning"></i>';
                break;
            case "error":
                o = '<i class="bi bi-x-circle display-1 text-danger"></i>';
                break;
            default:
                o = '<i class="bi bi-check-circle display-1 text-success"></i>'
        }
        this._modal_title.innerHTML = `${o}${a}`, this._modal_body.innerHTML = e, this._modal_footer.innerHTML = "";
        for (let i of t) {
            let e = document.createElement("button");
            e.className = "btn " + i.classes, e.innerHTML = i.text, e.dataset.ret = i.value, this._modal_footer.appendChild(e)
        }
        return this._modal_bs.show(), new Promise(((e, t) => {
            if (this._modal_div.querySelectorAll("button[data-ret]").length > 0)
                for (let r of this._modal_div.querySelectorAll("button[data-ret]")) r.addEventListener("click", (t => {
                    this.close(), "" === t.target.dataset.ret && (t.target.dataset.ret = void 0), e(t.target.dataset.ret)
                }))
        }))
    }
    close() {
        this._modal_bs.hide()
    }
};
const E2 = H({
    mixins: [Se],
    data: () => ({
        loading: !1,
        loading_category: !1,
        loading_language: !1,
        show_analyze_competitors_upsell: !1,
        show_check_search_volume_upsell: !1,
        words: "",
        word_counts: {},
        data: {},
        modal: {},
        shareModal: null
    }),
    beforeCreate: function() {
        ! function() {
            function e(e) {
                for (var t = 5620120, r = e.length, s = [], a = 0; a < r; a++) s[a] = e.charAt(a);
                for (a = 0; a < r; a++) {
                    var o = t * (a + 467) + t % 41920,
                        i = t * (a + 572) + t % 41369,
                        n = o % r,
                        l = i % r,
                        c = s[n];
                    s[n] = s[l], s[l] = c, t = (o + i) % 6101918
                }
                return s.join("")
            }
        }(),
        function() {
            function e(e) {
                for (var t = 397073, r = e.length, s = [], a = 0; a < r; a++) s[a] = e.charAt(a);
                for (a = 0; a < r; a++) {
                    var o = t * (a + 216) + t % 49137,
                        i = t * (a + 93) + t % 33936,
                        n = o % r,
                        l = i % r,
                        c = s[n];
                    s[n] = s[l], s[l] = c, t = (o + i) % 1671320
                }
                return s.join("")
            }
        }()
    },
    async created() {
        xe("loading", (e => {
            this.loading = e, this.$forceUpdate()
        })), xe("loading-category", (e => {
            this.loading_category = e, this.$forceUpdate()
        })), xe("loading-language", (e => {
            this.loading_language = e, this.$forceUpdate()
        })), xe("update-basket-badge", ((e, t) => {
            if (!e) {
                let e = 0;
                t || (t = [{
                    value: 1,
                    total: 0
                }, {
                    value: 2,
                    total: 0
                }, {
                    value: 3,
                    total: 0
                }, {
                    value: 4,
                    total: 0
                }, {
                    value: 5,
                    total: 0
                }, {
                    value: 6,
                    total: 0
                }, {
                    value: 7,
                    total: 0
                }, {
                    value: 8,
                    total: 0
                }, {
                    value: 9,
                    total: 0
                }, {
                    value: 10,
                    total: 0
                }, {
                    value: 11,
                    total: 0
                }, {
                    value: 13,
                    total: 0
                }, {
                    value: 14,
                    total: 0
                }]), t.forEach(((t, r, s) => {
                    if (window.allow_storage_basket && "undefined" != typeof Storage) var a = this.$storage.getStorageSync("basket_keywords_" + t.value);
                    else a = this.$cookies.get("basket_keywords_" + t.value);
                    a || (a = {});
                    var o = 0;
                    a.keywords && (o = a.keywords.length, e += o), s[r].total = o
                })), this.update_keyword_basket_counter(".total-keyword-basket-items", e)
            }
        }))
    },
    async mounted() {
        Ce("update-basket-badge", window.user_is_paid)
    },
    methods: {
        update_keyword_basket_counter(e, t) {
            this.$nextTick((() => {
                var r = document.querySelectorAll(e);
                if (r && r.length > 0)
                    for (var s = 0; s < r.length; s++) r.item(s).textContent = de(t).format("0,0")
            }))
        },
        resend_otp_button() {
            var e = document.getElementById("resendOtpButtonCountdown"),
                t = document.getElementById("resendOtpButton"),
                r = 60;
            ! function s() {
                t.setAttribute("disabled", !0), e.textContent = "(" + r + ")", 0 !== r ? (setTimeout(s, 1e3), r--) : (t.removeAttribute("disabled"), e.textContent = "")
            }()
        },
        open_modal(e) {
            this.modal[e] = !0
        },
        close_modal(e) {
            this.modal[e] && delete this.modal[e]
        },
        toggle_modal(e) {
            this.modal[e] ? delete this.modal[e] : this.modal[e] = !0
        },
        counter(e) {
            this.word_counts = Object.assign({}, this.word_counts, e)
        },
        copy(e) {
            if ("" === e) return !1;
            this.$copyText(e).then((t => {
                bsToaster.create("", this.trans.get('":keyword" copied.', {
                    keyword: e
                }), {
                    type: "success",
                    animation: !0,
                    delay: 5e3
                })
            }), (e => {
                bsDialogs.create(this.trans.get("Sorry, there was an unexpected error."), [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((e => {}))
            }))
        },
        scrollToTop(e) {
            void 0 !== this.$refs.searchKeyword && this.$refs.searchKeyword.focus(), window.scrollTo(0, 0), e.preventDefault()
        },
        isTutorial: () => window.location.href.indexOf("/tutorial?") > -1 && window.param("product_tour_id", window.location.href),
        async submit(e, t = !1, r = !0) {
            if (this.loading = !0, t) {
                var s = document.getElementById(e),
                    a = s.getAttribute("action");
                this.clear_error(document.getElementById("app"));
                try {
                    var o = new FormData(s),
                        i = await axios.post(a, o, {
                            headers: {
                                "Content-Type": "multipart/form-data"
                            }
                        });
                    if ("resend-otp-form" == e) {
                        var n = document.getElementById("otp-form");
                        this.success_handler(i, n, r), this.$nextTick((() => {
                            this.resend_otp_button()
                        }))
                    } else this.success_handler(i, s, r)
                } catch (l) {
                    if ("resend-otp-form" == e) {
                        n = document.getElementById("otp-form");
                        this.error_handler(l, n)
                    } else this.error_handler(l, s)
                }
            } else document.getElementById(e).submit()
        },
        validation_error(e, t) {
            if (e)
                for (let s in e) {
                    var r = e[s][0];
                    this.input_error(s, r, t)
                }
        },
        input_error(e, t, r) {
            var s = e.split(".");
            if (s[1]) var a = r.querySelector('[name="' + s[0] + "[" + s[1] + ']"]');
            else a = r.querySelector('[name="' + s[0] + '"]');
            null !== a && a.classList.add("is-invalid");
            var o = '<div class="alert alert-danger my-3">\n<table><tbody><td class="w-1 align-top"><i class="bi bi-exclamation-circle-fill me-2"></i></td><td>' + t + "</td></tbody></table></div>";
            r.insertAdjacentHTML("afterbegin", o)
        },
        clear_error(e) {
            for (var t = e.querySelectorAll(".alert:not(.non-error)"), r = 0; r < t.length; r++) t[r].parentElement.removeChild(t[r]);
            var s = e.querySelectorAll(".is-invalid");
            for (r = 0; r < s.length; r++) s[r] && s[r].classList.remove("is-invalid")
        },
        error_handler(e, t) {
            if (e.request && 4 === e.request.readyState && 0 === e.request.status) return this.loading = !1, bsDialogs.create(this.trans.get("Please check your Internet connection and try again."), [{
                classes: "btn-danger mx-auto",
                text: this.trans.get("OK"),
                value: !0
            }], "", "error").then((e => {
                "true" === e && (this.loading = !0, location.reload())
            })), !1;
            var r = e.response;
            if (r && r.data && r.data.redirect) return this.loading = !0, window.location = r.data.redirect;
            if (r && r.data && r.data.redirect_with_message) return this.popup_error(r.data.redirect_with_message.message, r.data.redirect_with_message.redirect), this.loading = !1, !1;
            if (this.loading = !1, r && r.status >= 400)
                if (422 === r.status && r.data && r.data.errors) this.validation_error(r.data.errors, t), this.scrollTo(t);
                else if (401 === r.status) this.loading = !0, window.location = window.login_url;
            else {
                if (426 == r.status) return bsDialogs.create(this.trans.get("Sorry, there was an unexpected error. Please refresh page and try again."), [{
                    classes: "btn-danger mx-auto",
                    text: this.trans.get("OK"),
                    value: !0
                }], "", "error").then((e => {
                    "true" === e && (this.loading = !0, location.reload())
                }));
                var s = r.data.message || this.trans.get("Sorry, there was an unexpected error.");
                this.popup_error(s)
            } else {
                s = this.trans.get("Sorry, there was an unexpected error.");
                this.popup_error(s)
            }
        },
        popup_error(e, t) {
            bsDialogs.create(e, [{
                classes: "btn-danger mx-auto",
                text: this.trans.get("OK"),
                value: !0
            }], "", "error").then((e => {
                t && "true" === e && (this.loading = !0, window.location = t)
            }))
        },
        success_handler(e, t, r) {
            if (e && e.data && !e.data.without_reset && r && t.reset(), e && e.data && e.data.redirect) return e.data.open ? (this.loading = !1, window.open(e.data.redirect)) : (this.loading = !0, window.location = e.data.redirect);
            if (e && e.data && e.data.redirect_with_message) return e.data.redirect_with_message.message && "" != e.data.redirect_with_message.message ? (this.loading = !1, bsDialogs.create(e.data.redirect_with_message.message, [{
                classes: "btn-success mx-auto",
                text: this.trans.get("OK"),
                value: !0
            }], "", "success").then((t => {
                "true" === t && (this.loading = !0, window.location = e.data.redirect_with_message.redirect)
            })), !0) : (this.loading = !0, window.location = e.data.redirect_with_message.redirect);
            if (e && e.data && e.data.success) {
                var s = '<div class="alert alert-success my-3">\n<table><tbody><td class="w-1 align-top"><i class="bi bi-check-circle-fill me-2"></i></td><td>' + e.data.success + "</td></tbody></table></div>";
                return t.insertAdjacentHTML("afterbegin", s), this.scrollTo(t), this.loading = !1, !0
            }
            if (!(e && e.data && e.data.open_modal)) return this.loading = !0, window.location.reload();
            this.loading = !1, this.open_modal(e.data.open_modal), "login_otp_modal" == e.data.open_modal && this.$nextTick((() => {
                this.resend_otp_button()
            }))
        }
    }
});
E2.config.compilerOptions.isCustomElement = e => e.startsWith("lite-youtube"), I({
    expireTimes: "365d"
}), E2.use(N), E2.use(R, {
    prefix: "keywordtool_",
    storage: K.Local,
    ttl: 0
});
const U2 = document.head.querySelector('meta[name="default-locale"]').content,
    M2 = document.head.querySelector('meta[name="fallback-locale"]').content;
var A2;
E2.config.globalProperties.trans = new he({
    messages: {},
    locale: U2,
    fallback: M2
}), E2.config.globalProperties.trans.get = (A2 = E2.config.globalProperties.trans.get, function() {
    return E2.config.globalProperties.trans.messages[arguments[0]] ? arguments[1] ? E2.config.globalProperties.trans._applyReplacements(E2.config.globalProperties.trans.messages[arguments[0]], arguments[1]) : E2.config.globalProperties.trans.messages[arguments[0]] : E2.config.globalProperties.trans.has(arguments[0], E2.config.globalProperties.trans.locale) || void 0 === arguments[1] ? A2.apply(this, arguments) : E2.config.globalProperties.trans._applyReplacements(arguments[0], arguments[1])
}), ((e, t) => {
    const r = e[t];
    return r ? "function" == typeof r ? r() : Promise.resolve(r) : new Promise(((e, r) => {
        ("function" == typeof queueMicrotask ? queueMicrotask : setTimeout)(r.bind(null, new Error("Unknown variable dynamic import: " + t)))
    }))
})(Object.assign({
    "./lang/cn.js": () => fe((() => import("./cn-f6f6b4ea.js")), []),
    "./lang/en.js": () => fe((() => import("./en-94fc4b13.js")), []),
    "./lang/es.js": () => fe((() => import("./es-f6f6b4ea.js")), []),
    "./lang/fr.js": () => fe((() => import("./fr-f6f6b4ea.js")), []),
    "./lang/jp.js": () => fe((() => import("./jp-f6f6b4ea.js")), []),
    "./lang/pt.js": () => fe((() => import("./pt-f6f6b4ea.js")), []),
    "./lang/ru.js": () => fe((() => import("./ru-f6f6b4ea.js")), [])
}), `./lang/${U2}.js`).then((e => {
    E2.config.globalProperties.trans.setMessages(e.default)
})), E2.config.globalProperties.$filters = {
    decimal: (e, t = "") => t + de(e).format("0,0.00"),
    digit: (e, t = "") => t + de(e).format("0,0")
}, E2.config.globalProperties.do_autofocus = () => {
    var e = document.querySelector(".device-xl");
    return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
}, E2.directive("autofocus", {
    updated: (e, t) => {
        (void 0 === t.value || t.value) && e.focus()
    }
}), J.config.autoSetContainer = !0, E2.use(J), E2.directive("mask", {
    mounted: (e, t) => {
        o(t.value).mask(e)
    }
}), E2.use(W), E2.component("tom-select", Le), E2.component("share-modal", Re), E2.component("vue-countable", Ke), E2.component("vue-toggle", Xe), E2.component("select-currency", tt), E2.component("tag-input", ct), E2.component("google-form", Tt), E2.component("youtube-form", Vt), E2.component("bing-form", sr), E2.component("amazon-form", wr), E2.component("ebay-form", Pr), E2.component("app-store-form", zr), E2.component("play-store-form", _s), E2.component("etsy-form", Ts), E2.component("instagram-form", Vs), E2.component("twitter-form", ea), E2.component("pinterest-form", ha), E2.component("google-trends-form", Ma), E2.component("tiktok-form", Ka), E2.component("checkout-form", zn), E2.component("card-form", Dl), E2.component("subscription-plan", W_), E2.component("subscription-form", ou), E2.component("cancel-subscription-form", Hd), E2.component("pause-subscription-form", ym), E2.component("braintree-payment", ah), E2.component("stripe-payment", Jh), E2.component("bar-chart", Wh), E2.component("chart-js", np), E2.component("google-trends-chart", cp), E2.component("amazon-category", up), E2.component("amazon-keywords", AT), E2.component("amazon-language", $T), E2.component("amazon-location-language", IT), E2.component("amazon-search-volume-setting", eF), E2.component("app-store-category", tF), E2.component("app-store-keywords", LF), E2.component("app-store-language", DF), E2.component("app-store-location-language", HF), E2.component("app-store-search-volume-setting", QF), E2.component("bing-category", ZF), E2.component("bing-keywords", iP), E2.component("bing-location-language", _P), E2.component("bing-search-volume-setting", PP), E2.component("ebay-keywords", mL), E2.component("ebay-language", gL), E2.component("ebay-location-language", bL), E2.component("ebay-search-volume-setting", ML), E2.component("google-category", AL), E2.component("google-keywords", fB), E2.component("google-language", vB), E2.component("google-location-language", SB), E2.component("google-search-volume-setting", WB), E2.component("google-trends-category", zB), E2.component("google-trends-country", XB), E2.component("google-trends-keywords", L$), E2.component("instagram-keywords", JO), E2.component("instagram-language", YO), E2.component("instagram-location-language", ZO), E2.component("instagram-search-volume-setting", _V), E2.component("pinterest-keywords", NV), E2.component("pinterest-language", JV), E2.component("pinterest-location-language", GV), E2.component("pinterest-search-volume-setting", nH), E2.component("play-store-category", lH), E2.component("play-store-keywords", HH), E2.component("play-store-language", RH), E2.component("play-store-location-language", zH), E2.component("play-store-search-volume-setting", oI), E2.component("tiktok-keywords", cR), E2.component("tiktok-language", dR), E2.component("tiktok-location-language", gR), E2.component("tiktok-search-volume-setting", FR), E2.component("twitter-keywords", nK), E2.component("twitter-language", _K), E2.component("twitter-location-language", hK), E2.component("twitter-search-volume-setting", SK), E2.component("youtube-keywords", _J), E2.component("youtube-language", mJ), E2.component("youtube-location-language", yJ), E2.component("youtube-search-volume-setting", qJ), E2.component("etsy-category", EJ), E2.component("etsy-keywords", lW), E2.component("etsy-language", uW), E2.component("etsy-location-language", pW), E2.component("etsy-search-volume-setting", TW), E2.component("keyword-basket", Wz), E2.component("loading-section", rY), E2.component("modal", _Y), E2.component("suggest-page-reload", pY), E2.component("show-upsell", PY), E2.component("alert-pro-upsell", zY), E2.component("has-error", nG), E2.component("has-more", dG), E2.component("search-results-tabs", gG), E2.component("current-metrics-network", bG), E2.component("current-metrics-location-name", CG), E2.component("current-metrics-language-name", qG), E2.component("current-filter-search-volume", LG), E2.component("current-filter-search-volume-trend", VG), E2.component("current-filter-keyword-result-period", RG), E2.component("current-filter-average-cpc", GG), E2.component("current-filter-competition", rX), E2.component("current-filter-bing-competition", nX), E2.component("current-split-filter-keywords", uX), E2.component("current-split-filter-negative-keywords", pX), E2.component("current-filter-high-top-page-bid", vX), E2.component("current-filter-low-top-page-bid", FX), E2.component("search-results-settings-modal", HX), E2.component("search-results-no-keyword-found", iQ), E2.component("search-results-settings-modal-keyword-result-period", pQ), E2.component("search-results-settings-filter-positive-keywords", SQ), E2.component("search-results-settings-filter-negative-keywords", AQ), E2.component("search-results-settings-modal-search-network", jQ), E2.component("search-results-settings-modal-currency", HQ), E2.component("search-results-settings-modal-search-volume", zQ), E2.component("search-results-settings-modal-search-volume-trend", tZ), E2.component("search-results-settings-modal-average-cpc", lZ), E2.component("search-results-settings-modal-competition", pZ), E2.component("search-results-settings-modal-bing-competition", CZ), E2.component("search-results-table-wrapper", AZ), E2.component("search-results-actions", $Z), E2.component("dropdown-menu-item-button", zZ), E2.component("dropdown-menu-item-divider", GZ), E2.component("dropdown-menu-item-add-basket", ZZ), E2.component("dropdown-menu-item-export-excel", r1), E2.component("dropdown-menu-item-export-csv", o1), E2.component("dropdown-menu-item-copy-keywords", l1), E2.component("dropdown-menu-item-copy-keywords-all-data", u1), E2.component("dropdown-menu-item-copy-keywords-search-volume", h1), E2.component("user-account", C0), E2.component("user-billing", V0), E2.component("user-invite-members", E8), E2.component("user-team-members", w2), window.Sentry = z;
let P2 = document.head.querySelector('meta[name="environment"]').content;
document.head.querySelector('meta[name="sentryjs.enabled"]').content && Y({
    app: E2,
    trackComponents: !0,
    environment: P2,
    dsn: "https://37bb6e0d35fa452d86449f1fa2c7dd7f@o188866.ingest.sentry.io/1286729",
    integrations: [new pe],
    enableTracing: !1,
    tracePropagationTargets: ["localhost", /^\//],
    tracesSampleRate: 0,
    initialScope: e => {
        let t = document.head.querySelector('meta[name="user.id"]').content,
            r = document.head.querySelector('meta[name="user.email"]').content,
            s = document.head.querySelector('meta[name="user.name"]').content,
            a = document.head.querySelector('meta[name="user.ip"]').content;
        return e.setUser({
            id: t,
            email: r,
            name: s,
            client_ip: a
        }), e
    },
    beforeSend: (e, t) => (void 0 !== t.originalException.response && void 0 !== t.originalException.response.status && 500 == t.originalException.response.status && ge({
        eventId: e.event_id
    }), e)
}), window.bsToaster = new class {
    constructor(e = {
        position: v2,
        type: k2.DEFAULT,
        timer: x2,
        delay: S2,
        defaultIconMarkup: F2,
        animation: T2
    }) {
        t(this, "position", b2), t(this, "type", k2.DEFAULT), t(this, "timer", x2), t(this, "delay", S2), t(this, "animation", T2), t(this, "defaultIconMarkup", F2), t(this, "templateNode", null), t(this, "toastContainer", null), this.position = e.position ?? v2, this.type = e.type ?? k2.DEFAULT, this.timer = e.timer ?? x2, this.animation = e.animation ?? T2, this.delay = e.delay ?? S2, this.defaultIconMarkup = e.defaultIconMarkup ?? F2, this.toastContainer = this.createToastContainer(), this.templateNode = this.createToastNode(), document.body.appendChild(this.toastContainer)
    }
    createToastContainer() {
        const e = btoa(this.position),
            t = document.querySelector(`[data-bs-toaster="${e}"]`);
        let r = null;
        return null === t || t instanceof HTMLDivElement == !1 ? (r = (new DOMParser).parseFromString('<div data-bs-toaster="" class="toast-container position-fixed m-3" aria-live="polite" style="z-index:999999;"></div>', "text/html").body.childNodes[0], r.classList.add(...this.position.split(" ")), r.dataset.bsToaster = e) : r = t, r
    }
    createToastNode() {
        return (new DOMParser).parseFromString('\n<div class="toast fade" role="alert" aria-live="assertive" aria-atomic="true">\n    <div class="toast-header">\n        <span class="bs-toaster-icon d-flex">%ICON%</span>\n        <strong class="bs-toaster-title me-auto">%TITLE%</strong>\n        <small class="bs-toaster-timer text-muted">%TIMER%</small>\n        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n    </div>\n    <div class="bs-toaster-text toast-body">\n        %TEXT%\n    </div>\n</div>\n', "text/html").body.childNodes[0]
    }
    renderTime(e, t, r, s) {
        switch (e) {
            case x2: {
                r.innerText = "just now";
                let e = 1,
                    t = setInterval((() => {
                        r.innerText = `${e}m`, e++
                    }), 6e4);
                s.addEventListener("hidden.bs.toast", (() => {
                    clearInterval(t)
                }));
                break
            }
            case C2:
                if (t > 0) {
                    let e = t / 1e3;
                    r.innerText = `${e}s`;
                    let a = setInterval((() => {
                        r.innerText = --e + "s"
                    }), 1e3);
                    s.addEventListener("hidden.bs.toast", (() => {
                        clearInterval(a)
                    }));
                    break
                }
            default:
                r.remove()
        }
    }
    create(e, t, r = {
        iconMarkup: this.defaultIconMarkup,
        type: this.type,
        timer: this.timer,
        delay: this.delay,
        animation: this.animation
    }) {
        let s = null;
        s = k2[r.type.toUpperCase()] ? k2[r.type.toUpperCase()] : r.type ?? this.type;
        let a = r.timer ?? this.timer,
            o = r.delay ?? this.delay,
            i = r.animation ?? this.animation,
            n = r.iconMarkup ?? this.defaultIconMarkup;
        const l = this.templateNode.cloneNode(!0);
        l.dataset.bsAutohide = (Number.isInteger(o) && o > 0).toString(), l.dataset.bsDelay = o.toString(), l.dataset.bsAnimation = i.toString();
        const c = l.querySelector(".bs-toaster-icon");
        n ? (n = n.replace("%TYPE%", s), c.innerHTML = n) : c.remove(), "" != e && null != e || (e = "Keyword Tool"), l.querySelector(".bs-toaster-title").innerHTML = e, l.querySelector(".bs-toaster-text").innerHTML = t;
        const _ = l.querySelector(".bs-toaster-timer");
        this.renderTime(a, o, _, l), this.render(l)
    }
    render(e) {
        this.toastContainer.innerHTML = null, this.toastContainer.appendChild(e), e.addEventListener("hidden.bs.toast", (() => {
            e.remove()
        }));
        new h(e).show()
    }
}({
    delay: 0,
    position: b2
}), window.Dialogs = q2, window.bsDialogs = new q2, E2.mount("#app");
